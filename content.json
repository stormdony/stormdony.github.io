{"meta":{"title":"Don Lex","subtitle":"身体和灵魂总要有一个在路上","description":null,"author":"Don Lex","url":"https://www.donlex.cn"},"pages":[{"title":"Links","date":"2018-10-12T11:24:47.000Z","updated":"2019-09-10T07:32:38.279Z","comments":true,"path":"Links/index.html","permalink":"https://www.donlex.cn/Links/index.html","excerpt":"","text":"互换友链如果您也有自己的博客站点，并且想要互换友链，可以先自查是否符合以下要求，然后再在下方留言,并注明贵站的类型~申请前请自查：博客文章篇数30篇及以上并且保持更新站点已被百度、谷歌搜索引擎收录已添加我方友链待审核之后会贵站的信息就会被添加到下方哦~~~友链以下友链不分先后顺序，欢迎访问！站名链接类型reuixiyhttps://reuixiy.github.io技术欧阳 Bloghttps://5658.pw技术Shan Sanhttps://shansan.top技术三尺博客https://w3c.ink/web与硬件Qupid and Monkey’s Bloghttp://www.qiuqingyu.cn技术仙人掌的博客https://blogcode.top技术虎虎https://blog.utone.xyz前端帅小博https://boda_ac.gitee.io/dadd技术资讯Mortyhttps://www.imcyc.cnCS技术随笔liveJQhttps://www.livejq.topJavaEE后端mryan’s bloghttps://mryan05.coding.me技术随笔juntechhttps://juntech.topjava 全栈 技术博客"},{"title":"about","date":"2018-09-13T07:01:11.000Z","updated":"2019-03-11T09:34:29.342Z","comments":true,"path":"about/index.html","permalink":"https://www.donlex.cn/about/index.html","excerpt":"","text":"Info简介： 某大学的一个程序汪 : )性别： MaleE-mail：donlex@qq.com个人公众号: Python绿洲 (请在微信客户端打开)GitHub CSDN 简书 慕课网 other这个版块应该算是一个留言墙吧^-^! 欢迎在下面留下你的！！"},{"title":"categories","date":"2018-09-09T06:45:44.000Z","updated":"2018-09-15T03:41:42.925Z","comments":false,"path":"categories/index.html","permalink":"https://www.donlex.cn/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-09-09T06:47:02.000Z","updated":"2018-09-15T03:41:58.523Z","comments":false,"path":"tags/index.html","permalink":"https://www.donlex.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"接口文档swagger-bootstrap-ui的使用","slug":"接口文档swagger-bootstrap-ui的使用","date":"2019-09-25T02:13:33.000Z","updated":"2019-09-25T02:24:18.534Z","comments":true,"path":"archives/69f9b57.html","link":"","permalink":"https://www.donlex.cn/archives/69f9b57.html","excerpt":"相信使用前后端分离的工程师都对接口文档折磨过。无论是前端调用后端，还是后端调用后端，都期望有一个好的接口文档。而Swagger，我个人理解就是把相关的信息存储在它定义的描述文件里面（yml或json格式），再通过维护这个描述文件可以去更新接口文档，以及生成各端代码，它能够很好地化解前面所说的尴尬。","text":"相信使用前后端分离的工程师都对接口文档折磨过。无论是前端调用后端，还是后端调用后端，都期望有一个好的接口文档。而Swagger，我个人理解就是把相关的信息存储在它定义的描述文件里面（yml或json格式），再通过维护这个描述文件可以去更新接口文档，以及生成各端代码，它能够很好地化解前面所说的尴尬。这样项目开始时期，只要前端跟后端定义好返回的数据格式，就可以根据接口文档进行统一的规范，这样数据规范起来之后，前端就不需要等到后端开发好接口才能知道具体的数据格式，前端使用mockjs模拟数据进行开发，大大节省了时间，同时也减少了不必要的沟通过程。个人感觉原生的swagger-UI不太友好，所以在网上找到了swagger-bootstrap-ui，这是国人开发的ui包，感觉非常不错。快速开始引入maven包由于是springfox-swagger的增强UI包,所以基础功能依然依赖Swagger,springfox-swagger的jar包必须引入12345&lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt; &lt;version&gt;2.9.2&lt;/version&gt;&lt;/dependency&gt;然后引入SwaggerBootstrapUi的jar包12345&lt;dependency&gt; &lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt; &lt;artifactId&gt;swagger-bootstrap-ui&lt;/artifactId&gt; &lt;version&gt;1.9.6&lt;/version&gt;&lt;/dependency&gt;当前最新的是1.9.6版本编写Swagger2Config配置文件Swagger2Config配置文件如下：12345678910111213141516171819202122@Configuration@EnableSwagger2@EnableSwaggerBootstrapUIpublic class SwaggerConfiguration &#123; @Bean public Docket createRestApi() &#123; return new Docket(DocumentationType.SWAGGER_2) .apiInfo(apiInfo()) .select() .apis(RequestHandlerSelectors.withClassAnnotation(RestController.class)) .paths(PathSelectors.any()) .build(); &#125; private ApiInfo apiInfo() &#123; return new ApiInfoBuilder() .title(\"接口文档\") .description(\"接口文档\") .build(); &#125;&#125;这里官网有一个对新手不太友好的小坑，那就是Docket中的apis中设置包的扫描路径，我之前是直接使用官网的配置类，没有改变包的扫描路径，导致文档没有显示接口，而改成RequestHandlerSelectors.withClassAnnotation(RestController.class)之后就可以了，这样算是使用了软编码吧！访问地址swagger-bootstrap-ui默认访问地址是：http://${host}:${port}/doc.htmlswagger2注解给Controller类添加swagger2注解就生成相应的接口文档了。例如:1234567891011121314@Api(value=\"/test1\", tags=\"测试接口模块\")@RestControllerpublic class testContro &#123; @ApiOperation(\"test\") @GetMapping(\"/ha\") public String test()&#123; return \"test成功\"; &#125; @ApiOperation(\"Area删除\") @GetMapping(\"/a\") public String ha()&#123; return \"Area删除成功\"; &#125;&#125;运行项目之后就可以看到下面的效果：最后有了接口文档之后，当前后端分离开发的时候，只需要丢一个测试环境的文档地址过去给前端就可以了，直接看着文档进行参数对接，同时这个接口文档的调试功能也是非常不错的，有时候懒得写单元测试，直接写一个查询的方法获取数据，再调用请求接口进行调试也是非常方便的。附[1] swagger-bootstrap-ui 地址[2] 在线效果体验[3] swagger-bootstrap-ui详解","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://www.donlex.cn/tags/Java/"},{"name":"Swagger","slug":"Swagger","permalink":"https://www.donlex.cn/tags/Swagger/"}]},{"title":"mybatis-plus的一些tips","slug":"mybatis-plus的一些tips","date":"2019-09-10T08:48:03.000Z","updated":"2019-09-10T08:56:22.805Z","comments":true,"path":"archives/b9b75777.html","link":"","permalink":"https://www.donlex.cn/archives/b9b75777.html","excerpt":"一些在使用springcloud和mybatis-plus中遇到的小问题以及解决方法","text":"一些在使用springcloud和mybatis-plus中遇到的小问题以及解决方法oracle 列转行 LISTAGG和WM_CONCAT对于将一列多值合并成一行问题，oracle提供了wmsys.wm_concat和listagg函数处理此问题。但是使用那一个函数具体得看数据库的版本WMSYS.WM_CONCAT: 依赖WMSYS用户LISTAGG: 11g2才提供的函数，不支持distinct1select listagg(多行转单行的列,分隔符) within group(order by 按哪一列分组) from tmp t group by 按哪一列分组用法就像聚合函数一样，通过Group by语句，把每个Group的一个字段，拼接起来，非常方便例子：1select * from SONG_INFO ALBUMS_INFO查出表的数据如图所示：现在我需要让两行中的名字合并成一行，并用“+”连接起来12select listagg(t.SONG_NAME, '+') within group (order by t.SONG_RD) as BelongSingerfrom (select * from SONG_INFO ALBUMS_INFO) t group by t.SONG_RD结果：mybatis-plus使用枚举类型对于在代码中定义枚举类型，最好实现 IEnum 接口，并在配置文件中配置好扫描枚举类型的位置，否则会报下面的的错误。12java.lang.IllegalArgumentException: No enum constant com.content.enums.BusinessType.8 at java.lang.Enum.valueOf(Enum.java:238) ~[na:1.8.0_144]配置文件设置：12mybatis-plus.configuration.default-enum-type-handler=com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandlermybatis-plus.type-enums-package=com.content.enums具体可以参考：mybatis-plus官网mybatis-plus关键字对于oracle中定义的实体名称和数据库中的关键字冲突，强烈建议不要使用关键字作为实体名称，因为自己使用注解@TableField，也不一定能够解决。比如：我在使用validate这个关键字的时候，就无法正常的解释过去oracle序列在java中使用update，并且主键是一个自增序列的话，如果另外有一个程序在批量导入数据，可能会导致休闲主键冲突的情况，这就是因为数据在导入的时候序列已经增长了，但是java代码还是使用自己原来每增长之前的序列，导致了冲突。解决办法：先得到当前的序列获取数据库中数据的id最大值设置增长序列下一次增长为数据库中id最大值减去当前序列运行一次获取下一序列值设置序列下一次增长为1123456SELECT seq_t_test.CURRVAL FROM DUAL -- 获取当前序列值alter sequence seq_t_test increment by n -- n表示最大id值减去当前序列值SELECT seq_t_test.NEXTVAL FROM DUAL -- 增长一次alter sequence seq_t_test increment by 1 -- 设置回每次增长1SELECT seq_t_test.CURRVAL FROM DUAL附参考资料：mybatis-plus官网","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://www.donlex.cn/tags/Java/"},{"name":"Oracle","slug":"Oracle","permalink":"https://www.donlex.cn/tags/Oracle/"},{"name":"Spring Cloud","slug":"Spring-Cloud","permalink":"https://www.donlex.cn/tags/Spring-Cloud/"},{"name":"MyBatis-Plus","slug":"MyBatis-Plus","permalink":"https://www.donlex.cn/tags/MyBatis-Plus/"}]},{"title":"歌词LRC、歌曲文件ID3标签与JAudiotagger","slug":"歌词LRC、歌曲文件ID3标签与JAudiotagger","date":"2019-08-18T05:41:50.000Z","updated":"2019-08-18T05:49:34.409Z","comments":true,"path":"archives/f0164614.html","link":"","permalink":"https://www.donlex.cn/archives/f0164614.html","excerpt":"现在的移动互联网时代，大部分人可能都不会刻意地留意关于歌曲的一些属性，直接在手机上下载或者在线听就行了。当然，这篇文章肯定会带你了解歌曲更加深入一点的内容，拓展一下知识面。","text":"现在的移动互联网时代，大部分人可能都不会刻意地留意关于歌曲的一些属性，直接在手机上下载或者在线听就行了。当然，这篇文章肯定会带你了解歌曲更加深入一点的内容，拓展一下知识面。本文从两个方面进行探秘：歌词格式歌曲文件歌词首先，从歌词方面入手，这部分的知识也是我在爬取各音乐网站的时候发现的。常见的歌词格式有 LRC、TRC（天天动听歌词）、KRC（KuGou ResourCe，酷狗资源文件）和 QRC（QQ音乐歌词)。目前就通过爬虫测试发现大部分音乐网站都是使用LRC格式的歌词。LRC 格式LRC 歌词格式是世界上最通用的歌词格式，没有之一。它是最基本的歌词格式，几乎没有支持其他歌词格式而不支持这个歌词格式的播放器。LRC 歌词格式的特性也是——简单。12345678910111213[ti:奔跑在我孤傲的路上 (Live)] [ar:旅行团] [al:乐人·Live：旅行团乐队“永远都会在”巡演杭州站(Live)] [by:] [offset:0] [00:00.00]奔跑在我孤傲的路上 (Live) - 旅行团乐队 (The LifeJourney) [00:05.81]词：孔阳/子君 [00:11.62]曲：孔阳/子君 [00:17.43]太阳走在天上 [00:18.79] [00:19.41]我们走在路上 [00:20.77] [00:21.53]走在各自走的方向以上是一个示例LRC文件的开头部分。可以看到，首先有一些记录歌曲及歌词信息的东东，我们将其称作“ID 标签”（ID Tags），它可以包含歌曲名（ti）、专集（al）、歌手（ar）、歌词创建者（by）、歌词延迟调整（offset）等信息。一眼就可看出，LRC 格式为每行歌词指定起始时刻，格式为[分钟:秒.百分秒]。通过Postman请求QQ音乐可以发现，现在使用的也是这一种格式的歌词其实之前在写NexT主题添加音乐这篇的博客的时候使用的就是网易云的歌词接口，得到的歌词信息也是LRC格式的，有兴趣可以点开看看TRC 格式TRC 格式是由天天动听制定的一种歌词格式，可以看作是对 LRC 格式的扩展——为什么我这样说呢？请看下面我从一 TRC 文件中从头摘取的文本。12345678[ar:胡彦斌] [ti:当你要离开的时候] [al:] [total:243000] [offset:0] [by:ttpod] [00:16.54]&lt;250&gt;当&lt;300&gt;你&lt;1852&gt;要&lt;249&gt;离&lt;452&gt;开&lt;201&gt;的&lt;451&gt;时&lt;3801&gt;候 [00:24.32]&lt;200&gt;我&lt;200&gt;们&lt;1201&gt;走&lt;250&gt;过&lt;250&gt;了&lt;251&gt;无&lt;350&gt;数&lt;350&gt;个&lt;600&gt;路&lt;3851&gt;口因此，我们可以下结论，TRC 格式在 LRC 格式基础上，歌词正文中每个字的前面增加了时间标记&lt;毫秒数&gt;，每字连续解析，支持了逐字精准。或者，上文中“字”可理解为词，组合在一起当作一个“字”（以下称作“词看作字”），这在遇到英文时尤其有用。当然，天天动听老黄历了，被阿里收购之后，现在也就无从探寻了。不过现在好像虾米音乐还是使用这种格式的歌词哈歌曲文件在电脑上下载一首歌曲，查看文件信息，会发现一个我们平常不留意的普通文件竟然会包含这么多的信息。ID3标签通过KMPlayer查看媒体信息可以看到以下信息，当然也包含了歌曲的封面图片其实这些信息都是通过在MP3文件末尾额外的数据空间来保存。说到这里就不得不说一下音频文件的ID3标签了ID3，一般是位于一个mp3文件的开头或末尾的若干字节内，附加了关于该mp3的歌手，标题，专辑名称，年代，风格等信息，该信息就被称为ID3信息，ID3信息分为两个版本，v1和v2版。 其中：v1版的ID3在mp3文件的末尾128字节，以TAG三个字符开头，后面跟上歌曲信息。 v2版一般位于mp3的开头，可以存储歌词，该专辑的图片等大容量的信息. ——百度百科读写ID3标签既然知道了MP3文件中的信息是ID3标签，那我们能否自己通过代码读写ID3标签呢？当然是可以的。主要通过使用 JAudiotagger 对MP3文件进行操作就可以完成。步骤一、Maven直接引入Jaudiotagger或者使用jar包123456&lt;!-- https://mvnrepository.com/artifact/org/jaudiotagger --&gt;&lt;dependency&gt; &lt;groupId&gt;org&lt;/groupId&gt; &lt;artifactId&gt;jaudiotagger&lt;/artifactId&gt; &lt;version&gt;2.0.3&lt;/version&gt;&lt;/dependency&gt;二、使用代码操作这里以Java实现了一个简单的例子：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283import entity.CopyrightInfoSave;import org.jaudiotagger.audio.AudioFileIO;import org.jaudiotagger.audio.mp3.MP3File;import org.jaudiotagger.tag.FieldKey;import org.jaudiotagger.tag.datatype.Artwork;import org.jaudiotagger.tag.id3.AbstractID3v2Tag;import org.jaudiotagger.tag.id3.ID3v23Tag;import java.io.File;import java.io.FileInputStream;/***@author donlex*@since 2019/08/18 13:35 */public class demo &#123; /** *读取MP3文件的ID3标签信息 */ public static void readId3Tag() throws TagException, ReadOnlyFileException, CannotReadException, InvalidAudioFrameException, IOException &#123; String url = \"F:/Easier/QQDownload/660027.mp3\"; File sourceFile = new File(url); MP3File file = (MP3File) AudioFileIO.read(sourceFile); Tag tag = file.getTag(); MP3AudioHeader mp3AudioHeader = file.getMP3AudioHeader(); //歌曲码率 String bitRate = mp3AudioHeader.getBitRate(); //获取MP3时长 int trackLength = mp3AudioHeader.getTrackLength(); int min = trackLength / 60; int second = trackLength % 60; String length = min + \":\" + second; System.out.println(bitRate +\" -- \"+length); &#125; /** *设置ID3标签进入MP3文件中 *copyrightInfoSave是一个实体 */ public static void structAudioTag(CopyrightInfoSave copyrightInfoSave,String filePath,String lyricPath,String coverPath) throws Exception&#123; MP3File f = (MP3File) AudioFileIO.read(new File(filePath)); ID3v23Tag tag; AbstractID3v2Tag tagV2=f.getID3v2Tag(); if(tagV2 instanceof ID3v23Tag)&#123; tag=(ID3v23Tag)tagV2; &#125;else&#123; tag = new ID3v23Tag(tagV2); &#125; tag.setField(FieldKey.ARTIST, copyrightInfoSave.getSingername()); tag.setField(FieldKey.ALBUM, copyrightInfoSave.getAlbumsname()); tag.setField(FieldKey.TITLE, copyrightInfoSave.getSongname()); tag.setField(FieldKey.COMMENT, \"\"); String lyric = readToString(lyricPath); tag.setField(FieldKey.LYRICS,lyric); // 设置歌曲封面图片 tag.deleteArtworkField(); Artwork newArtwork=Artwork.createArtworkFromFile(new File(coverPath)); tag.setField(newArtwork); tag.addField(newArtwork); f.setID3v2Tag(tag); f.save(); &#125; /** *读取歌词文件，并返回string类型 */ public static String readToString(String fileName) &#123; String encoding = \"UTF-8\"; File file = new File(fileName); Long filelength = file.length(); byte[] filecontent = new byte[filelength.intValue()]; try &#123; FileInputStream in = new FileInputStream(file); in.read(filecontent); in.close(); return new String(filecontent, encoding); &#125; catch (Exception e) &#123; e.printStackTrace(); return null; &#125; &#125;&#125;更多例子可以查看官方的Example附参考资料：[1] MP3歌曲乱码和ID3标签[2] 初步分析 LRC、TRC、KRC、QRC、KSC 和 KAJ 歌词格式","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://www.donlex.cn/tags/Java/"},{"name":"LRC","slug":"LRC","permalink":"https://www.donlex.cn/tags/LRC/"},{"name":"JAudiotagger","slug":"JAudiotagger","permalink":"https://www.donlex.cn/tags/JAudiotagger/"},{"name":"ID3","slug":"ID3","permalink":"https://www.donlex.cn/tags/ID3/"}]},{"title":"ORACLE统计函数的小知识","slug":"ORACLE统计函数的小知识","date":"2019-08-12T03:17:34.000Z","updated":"2019-08-12T07:03:16.607Z","comments":true,"path":"archives/f4645013.html","link":"","permalink":"https://www.donlex.cn/archives/f4645013.html","excerpt":"Group by 函数在使用oracle进行sql统计的时候，需要对单个字段进行统计，但是统计的信息中需要将该表中的其他字段的信息也显示出来，但是只对需要的单一字段进行group by的话会出现 ORA-00979: 不是 GROUP BY 表达式 的报错信息。因为在 select 中出现的列必须全部出现在 group by 的后面","text":"Group by 函数在使用oracle进行sql统计的时候，需要对单个字段进行统计，但是统计的信息中需要将该表中的其他字段的信息也显示出来，但是只对需要的单一字段进行group by的话会出现 ORA-00979: 不是 GROUP BY 表达式 的报错信息。因为在 select 中出现的列必须全部出现在 group by 的后面举个例子：假设有一张商品product表，有id，category，pro_name，status。现在需要统计status为1的数据，并且需要按照category分类和显示所有列的信息。错误示范：1select id,pro_name, count(status) as success from product where status = 1 group by category因为group by 没有对id，pro_name等数据列进行分组，所以会出现ORA-00979: 不是 GROUP BY 表达式 的错误信息正确操作：1select id,pro_name, count(status) as success from product where status = 1 group by category,id,pro_name另外，如果需要对统计的数据进行保留两位小数这样的功能和把统计结果 中null 值设置为0，可以分别使用CAST和NVL函数直接在SQL中进行处理。CAST函数CAST (expression AS data_type)参数说明：expression：任何有效的SQServer表达式。AS：用于分隔两个参数，在AS之前的是要处理的数据，在AS之后是要转换的数据类型。data_type：目标系统所提供的数据类型，包括bigint和sql_variant，不能使用用户定义的数据类型。所以可以用cast（value as number(10,2)来转换。如果通过CAST()函数将这个值转换为number类型，需要首先定义number值的精度与小数位数。这里的精度与小数位数分别为10与2,精度是总的数字位数，包括小数点左边和右边位数的总和。而小数位数是小数点右边的位数。这表示本例能够支持的最大的整数值是9999999，而最小的小数是0.01。NVL函数NVL(eExpression1, eExpression2)参数解释：如果eExpression1的计算结果为 null 值，则 NVL( ) 返回 eExpression2。如果eExpression1 的计算结果不是 null 值，则返回eExpression1。例如：1select id,pro_name, NVL(count(status),0) as success from product where status = 1 group by category,id,pro_nameROUND函数ROUND（number[,decimals]）参数解释：number： 待做截取处理的数值decimals： 指明需保留小数点后面的位数。可选项，忽略它则截去所有的小数部分，并四舍五入。如果为负数则表示从小数点开始左边的位数，相应整数数字用0填充，小数被去掉。另外如果number中的为整数，number将不会保留两位小数。所以需要保留两位小数还是使用CAST函数比较好例如：ROUND（3.0,2]）会被截取为3，而不会填充为3.00","categories":[],"tags":[{"name":"Oracle","slug":"Oracle","permalink":"https://www.donlex.cn/tags/Oracle/"},{"name":"SQL","slug":"SQL","permalink":"https://www.donlex.cn/tags/SQL/"}]},{"title":"微信自动回复机器人","slug":"微信自动回复机器人","date":"2019-07-04T13:10:32.000Z","updated":"2019-07-04T13:21:04.400Z","comments":true,"path":"archives/67261aff.html","link":"","permalink":"https://www.donlex.cn/archives/67261aff.html","excerpt":"通过itchat获取微信的相关消息，将微信消息传输到青云客机器人接口，获取机器人的返回消息。将返回消息返回给微信消息的发送人。以此实现将微信个人号变身为聊天机器人。","text":"通过itchat获取微信的相关消息，将微信消息传输到青云客机器人接口，获取机器人的返回消息。将返回消息返回给微信消息的发送人。以此实现将微信个人号变身为聊天机器人。因为图灵机器人现在需要实名认证，并每天免费数量只有100条，感觉非常麻烦，所以找了一个免费的接口-青云客，虽然这个智能程度没有图灵机器人那么高，但是也足够应付基本的消息了，不过有时候有点智障，谨慎使用哈。以下是接口说明：安装库需要安装以下python库才能够跑起来itchatrequests具体代码123456789101112131415161718192021222324252627# -*- coding: utf-8 -*-# @Time : 2019/7/3 14:23# @Author : donlex# @Email : donlex@qq.com# @Software: PyCharm 2018.1.4 (Professional Edition)import itchatimport requestsdef get_response(msg): apiUrl = 'http://api.qingyunke.com/api.php?key=free&amp;appid=0&amp;msg=&#123;&#125;'.format( msg) # 发送post请求 r = requests.post(apiUrl).json() # 替换br字符串 response = r.get('content').replace('&#123;br&#125;', '\\n') return response# 用于接收来自朋友间的对话消息# 如果不用这个，朋友发的消息便不会自动回复@itchat.msg_register(itchat.content.TEXT)def print_content(msg): return get_response(msg['Text'])if __name__ == '__main__': itchat.auto_login(True) #保存登录信息，下次不用扫码 itchat.run()详细解释itchat.auto_login()是将会通过微信扫描二维码登录，但是这种登录的方式确实短时间的登录，并不会保留登录的状态，也就是下次登录时还是需要扫描二维码。另外，扫码登录是通过网页版微信登陆，因为新注册的微信账号可能不支持网页版功能，所以最好是在使用之前，先验证下能够登录网页版微信。其他机器人图灵机器人：http://www.turingapi.com/ 需求实名制认证，并每天免费数量只有100条）一个AI：http://www.yige.ai/（免费且无数量限制。可自定义回复、对话、场景。但高级功能使用比较复杂。但已长时间没人维护）智能闲聊（腾讯）https://ai.qq.com/product/nlpchat.shtml ( 申请使用，免费且无限量。大厂靠谱。)天行机器人 https://www.tianapi.com/apiview/47 (认证后有7万条免费使用。之后收费：1万条/1块钱)海知智能 https://ruyi.ai/ （功能很强大，不仅仅用于聊天。需申请 key，免费）","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/tags/python/"}]},{"title":"Java对象排序之Comparator与Comparable","slug":"Java对象排序之Comparator与Comparable","date":"2019-07-04T06:34:06.000Z","updated":"2019-07-04T06:41:14.715Z","comments":true,"path":"archives/bf9ef5a8.html","link":"","permalink":"https://www.donlex.cn/archives/bf9ef5a8.html","excerpt":"前言关于Java中的排序，我们常见的就是对Array、List进行排序，对于Array，我们可以使用Arrays.sort(数组)进行排序;对于List，我们可以使用Collections.sort(list)进行排序","text":"前言关于Java中的排序，我们常见的就是对Array、List进行排序，对于Array，我们可以使用Arrays.sort(数组)进行排序;对于List，我们可以使用Collections.sort(list)进行排序，如果是需要对一个实体类的对象进行排序呢？两种实现方法有两种方法可以实现。一种方法是类实现Comparable&lt;T&gt;接口，然后调用Collections.sort(List)方法进行排序。另一种方法是类不实现Comparable接口，而在排序时使用Collections.sort(List, Comparator&lt;T&gt;)方法，并实现其中的Comparator&lt;T&gt;接口。Comparable接口有一个comparTo(Object o)方法,它返回整数类型。对于表达式x.compareTo(y),如果返回值为0，则表示x和y相等,如果返回值大于0，则表示x大于y,如果返回值小于0，则表示x小于y；这是一个比较器接口。排序实现模拟一个Person对象，要对其进行排序，排序的条件是先根据id排序，当id相等的情况下载根据年龄进行排序，当年龄相等再根据名字。通过类实现Comparable接口进行排序Person类1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465public static class Person implements Comparable&lt;Person&gt; &#123; //非 int、float等基本类型 private Integer id; private Integer age; private String name; public Person(Integer age, String name, Integer id) &#123; this.age = age; this.name = name; this.id = id; &#125; public Integer getId() &#123; return id; &#125; public void setId(Integer id) &#123; this.id = id; &#125; public Integer getAge() &#123; return age; &#125; public void setAge(Integer age) &#123; this.age = age; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; @Override public String toString() &#123; return \"Person [id=\" + id + \", age=\" + age + \", name=\" + name + \"]\"; &#125; /* * (non-Javadoc) * * @see java.lang.Comparable#compareTo(java.lang.Object) * 先根据id比较，如果id相同，就比较age，最后再比较name(按姓名的字典序升序排序) */ @Override public int compareTo(Person o) &#123; if (this.id &gt; o.getId()) &#123; return 1; &#125; else if (this.id &lt; o.getId()) &#123; return -1; &#125; else &#123; if (this.age &gt; o.getAge()) &#123; return 1; &#125; else if (this.age &lt; o.getAge()) &#123; return -1; &#125; else &#123; return this.name.compareTo(o.getName()); &#125; &#125; &#125; &#125;在客户端中测试1234567891011121314public class Compareto &#123; public static void main(String[] args) &#123; List&lt;Person&gt; students = new ArrayList&lt;&gt;(); students.add(new Person(25, \"LuanYu\",0)); students.add(new Person(26, \"LuanYu\",0)); students.add(new Person(26, \"LuanYu\",5)); students.add(new Person(27, \"LiuBei\",1)); students.add(new Person(27, \"Zhangi\",1)); Collections.sort(students); for(Person student:students)&#123; System.out.println(student.toString()); &#125; &#125;输出结果12345Person [id=0, age=25, name=LuanYu]Person [id=0, age=26, name=LuanYu]Person [id=1, age=27, name=LiuBei]Person [id=1, age=27, name=Zhangi]Person [id=5, age=26, name=LuanYu]可以看到，按姓名的字典序升序排序。使用这用方法排序不能使用基本类型（int, float）等。通过Comparable接口实现排序Person类1234567891011121314151617181920212223242526272829303132333435363738394041424344/** * 没有实现Comparable&lt;T&gt;接口的Person类 */ public static class Person &#123; private Integer id; private Integer age; private String name; public Person(Integer age, String name, Integer id) &#123; this.age = age; this.name = name; this.id = id; &#125; @Override public String toString() &#123; return \"Person [id=\" + id + \", age=\" + age + \", name=\" + name + \"]\"; &#125; public Integer getId() &#123; return id; &#125; public void setId(Integer id) &#123; this.id = id; &#125; public Integer getAge() &#123; return age; &#125; public void setAge(Integer age) &#123; this.age = age; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; &#125;main方法12345678910111213141516171819202122232425262728293031public static void main(String[] args) &#123; List&lt;Person&gt; persons = new ArrayList&lt;&gt;(); persons.add(new Person(25, \"LsanYu\", 0)); persons.add(new Person(26, \"LuanYu\", 0)); persons.add(new Person(26, \"LuanYu\", 5)); persons.add(new Person(27, \"LiuBei\", 1)); persons.add(new Person(27, \"Zhangi\", 1)); Collections.sort(persons, new Comparator&lt;Person&gt;() &#123; @Override public int compare(Person o1, Person o2) &#123;// 这里是需要做处理的部分 if (o1.getId() &gt; o2.getId()) &#123; return 1; &#125;else if (o1.getId() &lt; o2.getId()) &#123; return -1; &#125;else &#123; if (o1.getAge()&gt;o2.getAge()) &#123; return 1; &#125;else if (o1.getAge() &lt; o2.getAge()) &#123; return -1; &#125;else &#123; return o1.getName().compareTo(o2.getName()); &#125; &#125; &#125; &#125;); for(Person person:persons)&#123; System.out.println(person.toString()); &#125; &#125;输出结果12345Person [id=0, age=25, name=LsanYu]Person [id=0, age=26, name=LuanYu]Person [id=1, age=27, name=LiuBei]Person [id=1, age=27, name=Zhangi]Person [id=5, age=26, name=LuanYu]总结第二种方法通过重新定义Collections.sort(List,Comparator)实现排序，当需求有变需要按照其他规则(比如id)排序时，只有重新定义一个Comaprator,而不用修改Person类,然后修改客户端代码，这样就基本满足了开闭原则，即可以通过增加新类方便的扩充新功能，满足新需求而不用修改原来的代码。如果我们采用让Person实现Comaparable接口，则在想采用新的排序规则时，必须修改Person里的comareTo(Object o)方法，这样就违反了开闭原则。综上，第二种方法比第一种方法更加灵活。","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://www.donlex.cn/tags/Java/"}]},{"title":"Java中常用日期处理类","slug":"Java中常用日期处理类","date":"2019-07-03T06:02:40.000Z","updated":"2019-07-03T06:13:36.504Z","comments":true,"path":"archives/eca56fbc.html","link":"","permalink":"https://www.donlex.cn/archives/eca56fbc.html","excerpt":"前言日期处理在Java中一块非常复杂的内容，包含日期的国际化，日期和时间的转换，日期的加减运算，日期的展示格式等问题。而且在一些面试中也可能会有问到，所以整理了一下这部分的内容。","text":"前言日期处理在Java中一块非常复杂的内容，包含日期的国际化，日期和时间的转换，日期的加减运算，日期的展示格式等问题。而且在一些面试中也可能会有问到，所以整理了一下这部分的内容。主要涉及以下四个类：DateCalendarDateFormatSimpleDateFormat由于Date类算是比较常用的，所以这里只整理了后面的3个类。Calendar 类它是一个抽象类，它为特定瞬间与一组诸如 YEAR、MONTH、DAY_OF_MONTH、HOUR 等 日历字段之间的转换提供了一些方法，并为操作日历字段（例如获得下星期的日期）提供了一些方法。获取Calendar类的通用的对象Calendar 提供了一个类方法 getInstance，以获得此类型的一个通用对象。1Calendar now = Calendar.getInstance();获得并设置日历字段的方法Calendar可以调用set等方法来设置日历字段的字段值，调用 get 、getTimeInMills、getTime等方法设置日历字段。1234567Calendar cal Calendar.getInstance();cal.setTime(new Date());int year = cal.get(Calendar.YEAR);int month = (cal.get(Calendar.MONTH))+1; //从0开始计算System.out.println(cal.getTime());//输出 Wed Jul 03 12:49:38 CST 2019System.out.println(year);//输出2019System.out.println(month);//输出7日历进行加减法在Calendar对象的使用add方法进行时间的加减操作，其中第二个参数为正数表示“加”，负数表示“减”。下面是Calendar类中add方法的定义:1234567891011121314151617181920/** * Adds or subtracts the specified amount of time to the given calendar field, * based on the calendar's rules. For example, to subtract 5 days from * the current time of the calendar, you can achieve it by calling: * &lt;p&gt;&lt;code&gt;add(Calendar.DAY_OF_MONTH, -5)&lt;/code&gt;. * * @param field the calendar field. * @param amount the amount of date or time to be added to the field. * @see #roll(int,int) * @see #set(int,int) */ /** * 翻译如下： * 根据日历的规则，将指定的时间量添加或减去给定的日历字段。 * 例如，要从日历的当前时间减去5天，可以通过调用：add（Calendar.DAY_OF_MONTH，-5）来实现它。 * @param字段日历字段。 * @param为要添加到字段的日期或时间量。 **/ abstract public void add(int field, int amount);通过实例例子来使用一下add方法：12345678910Calendar cal Calendar.getInstance();cal.setTime(new Date());System.out.println(cal.getTime());//输出 Wed Jul 03 12:49:38 CST 2019cal.add(Calendar.YEAR,-1);//日期减1年cal.add(Calendar.MONTH,3);//日期加3个月cal.add(Calendar.DAY_OF_MONTH,10);//日期加10天System.out.println(cal.getTime());//输出Sat Oct 13 12:55:14 CST 2018System.out.println(cal.get(Calendar.YEAR));//2018System.out.println(cal.get(Calendar.MONTH));//9System.out.println(cal.get(Calendar.DAY_OF_MONTH));//13DataFormat 类DataFormat是对日期/时间格式化的抽象类，它可以格式化或解析日期或时间，即允许将时间对象进行相互的转换。获取DataFormat对象实例DataFormat是抽象类，不能创建该类的对象，需要使用静态方法 getDataInstance、getTimeInstance、getDataTimeInstance来得到日期时间格式对象123DataFormat df = DataFormat.getDataInstance(); //或者DataFormat df1 = DataFormat.getDateInstance(DateFormat.LONG,LONG FRANCE);日期格式化字符串将日期、时间格式化为字符串，主要使用format方法。例如12DataFormat df = DataFormat.getDataInstance(); String dfStr = df.format(new Date());字符串解析为日期将字符串解析为日期，主要使用parse方法。 例如12DataFormat df = DataFormat.getDataInstance(); Date d1 = df.parse(\"2019-7-3\")SimpleDateFormat 类SimpleDateFormat是DateFormat的子类，该类在包 java.text中，该类允许用户自定义的日期-时间格式的模式，并利用此模式来显示日期和时间SimpleDateFormat 对象的创建使用new关键字创建SimpleDateFormat类对象，例如123SimpleDateFormat fmt1 = new SimpleDateFormat();SimpleDateFormat fmt2 = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");SimpleDateFormat fmt3 = new SimpleDateFormat(\"yyyy年MM月dd日 HH时mm分ss秒\");格式化日期时间对象SimpleDateFormat类提供format方法来格式化日期和时间对象，例如：12Date now = new Date();String str1 = fm1.format(now);解析字符串为日期对象SimpleDateFormat类提供parse方法来解析字符串为日期和时间对象，返回Date对象。例如：1Date d1 = fmt1.parse(\"2019-07-03\");完整例子123456789101112131415161718192021222324import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;public class Calen &#123; public static void main(String[] args) throws ParseException &#123; // 使用不同的日期时间方式初始化对象 SimpleDateFormat fmt1 = new SimpleDateFormat(); SimpleDateFormat fmt2 = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); SimpleDateFormat fmt3 = new SimpleDateFormat(\"yyyy年MM月dd日 HH时mm分ss秒 E\"); Date now = new Date(); // 利用format将时间日期对象用不同的形式显示出来 System.out.println(fmt1.format(now)); System.out.println(fmt2.format(now)); System.out.println(fmt3.format(now)); // 使用parse解析为时间日期对象 SimpleDateFormat fmt4 = new SimpleDateFormat(\"yyyy-MM-dd\"); Date d1 = fmt4.parse(\"2019-07-03\");// 这里的格式需要与上面的字符串格式相同 System.out.println(d1); &#125;&#125;常用的模式字符串在日期和时间模式字符串中，未加引号的字母 ‘A’ 到 ‘Z’ 和 ‘a’ 到 ‘z’ 被解释为模式字母，用来表示日期或时间字符串元素。定义了以下模式字母（所有其他字符 ‘A’ 到 ‘Z’ 和 ‘a’ 到 ‘z’ 都被保留）：字母日期或时间元素Y年YearM年中的月份w年中的周数W月份中的周数D年中的天数d月份中的天数F月份中的星期E星期中的天数H一天中的小时数(0~23)k一天中的小时数(1~24)Kam/pm 中的小时数(0~11)ham/pm 中的小时数(1~12)m小时钟的分钟数s分钟中的秒数S毫秒数注本文非原创文章，只是通过网上的博客和参考书籍整理出来","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://www.donlex.cn/tags/Java/"}]},{"title":"突破淘宝登录验证反爬","slug":"突破淘宝登录验证反爬","date":"2019-04-25T02:26:31.000Z","updated":"2019-04-25T02:37:59.824Z","comments":true,"path":"archives/fcbe89fc.html","link":"","permalink":"https://www.donlex.cn/archives/fcbe89fc.html","excerpt":"文章首发于慕课网手记上一篇《在爬100万数据的时候，我发现了爬虫的进阶之路》 ，有“怂恿”大家伙去突破淘宝的登录反爬，不知道有没有试了的。反正我是试了，也找到了三种方法。在这里分享一下","text":"文章首发于慕课网手记上一篇《在爬100万数据的时候，我发现了爬虫的进阶之路》 ，有“怂恿”大家伙去突破淘宝的登录反爬，不知道有没有试了的。反正我是试了，也找到了三种方法。在这里分享一下账号密码登录(有滑块)微博第三方账号登录(无滑块)扫码登录上面都是使用 Selenium 进行模拟登录的，这样就可以不用手动添加各种Cookie或者Session，少了很多工作。详细效果请继续阅读，具体代码自行理解，都是非常简单的注：仅供技术交流使用，请不要用作其他用途！# 淘宝账号登录一般直接使用Selenium自动控制登录，都会无法通过滑块验证。所以解决的策略就是让这些网站识别不出来你是用了Selenium，因此需要将模拟浏览器设置为开发者模式，这样就可以防止被网站识别出来。只需要在初始化时，添加下面这条语句，就可以设置为开发者模式。1234# 此步骤很重要options.add_experimental_option('excludeSwitches'['enable-automation'])browser = webdriver.Chrome(options=options)只需要多加一行代码，就能突破淘宝登录滑块，效果如下：当然这只是让Selenium通过淘宝的滑块验证而已，至于如何滑动还是需要自己动手撸代码才能实现真正的自动。。。# 微博账号登录在淘宝网的登录页面，有第三方登录的入口，试了一下，发现绑定微博的账号跟淘宝更配哦。直接通过Selenium控制，输入微博账号和密码，不需要滑块验证，不需要滑块验证，不需要滑块验证(重要的事情说**，直接就可以登录。# 扫码登录还有一种方法：扫码登录，这种方式检测出是使用自动化工具，但是扫码登录能减去所有的验证环节，并且不需要写登录代码，只需要在扫码的页面停留几秒，等待手机淘宝扫码验证完成。接着就可以继续下面的工作了，不过这有一个缺点，就是不能设置不加载图片，如果设置了不加载图片的话，二维码就显示不了，就别谈登录了，这样一来，爬取的速度肯定会受到影响。代码：1234567891011121314from time import sleepfrom selenium import webdriverdriver = webdriver.Chrome()driver.implicitly_wait(5)def scan_login(url): driver.get(url) # 等待扫码登录 sleep(15) # 进入之后开始其他操作if __name__ == '__main__': url = 'https://login.taobao.com/member/login.jhtml' scan_login(url)效果：# 最后个人感觉在需要突破登录部分的反爬措施，直接使用 Selenium 是最通用的，当然得看具体的情况。如果你正在练习登录这方面的爬虫，希望能够对你帮助！如果你有好的方法，也可以交流一下！# 附：点击获取，源码地址如果对你有帮助记得Star！","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/tags/python/"},{"name":"selenium","slug":"selenium","permalink":"https://www.donlex.cn/tags/selenium/"}]},{"title":"'在爬100万数据的时候，我发现了爬虫的进阶之路'","slug":"在爬100万数据的时候，我发现了爬虫的进阶之路","date":"2019-04-20T01:54:19.000Z","updated":"2019-04-20T02:16:21.444Z","comments":true,"path":"archives/b85433a6.html","link":"","permalink":"https://www.donlex.cn/archives/b85433a6.html","excerpt":"文章首发于慕课网手记学习最好还是要以需求为驱动才能够快速成长。这是我最近一段时间的体会，其实也是我最近在写爬虫的思考。通过需求，让你处于紧迫的状态，不断学习新的知识，去满足这样那样的需求。这个时候，你会处于一种高度集中的状态，你的学习能力也是最强的时候。","text":"文章首发于慕课网手记学习最好还是要以需求为驱动才能够快速成长。这是我最近一段时间的体会，其实也是我最近在写爬虫的思考。通过需求，让你处于紧迫的状态，不断学习新的知识，去满足这样那样的需求。这个时候，你会处于一种高度集中的状态，你的学习能力也是最强的时候。之前的爬虫文章使用的都是一些基础 Python 的知识，特别是在做一些小的项目的时候，运用好那些基础知识就完全够用了。所以如果没有用到新的知识或没有接触到新的知识的时候，我就没有写出来，这就是这么长时间没有写爬虫文章的原因。并且，我感觉我的爬虫技术一直都处在初级阶段，原地踏步，没有一点进步，也就造成了“没话可说”的尴尬地步。起因前几周帮别人写了一份爬虫，逻辑不难，步骤也不繁琐，只要简单的几步就可以，但是数据量是我目前接触的最多的一次，将近 100万 的数据量。就算这条虫子不慌，它爹心里也慌呀！要是中途出现什么情况，没有做好断点续爬的准备的话，那岂不是得从头再来？还有就是，这么多的数据，在一台机子上爬，效率明显是很慢的，如果学会一点集群和分布式爬虫，使用上，那每一台机子的压力就会小很多。还有一点能够提高效率的方法就是通过使用进程、线程。这些我也还不是很懂，因为这次的项目需要 Selenium 才能通过验证，所以我也就没有使用，不然肯定也会学一下，不知道 Selenium 中有没有多进程，线程这种东西？再有就是 爬虫的监控 和 异常情况的通知 。爬虫的监控我没有接触过，不过异常情况的通知，我倒是想着通过邮件提醒，虽然简单，但是却也能够达到目的，所以我在做这个项目的时候，使用了一下，感觉还可以，后面可能会详细的写一写。说爬虫怎么能不说反爬呢？说一下我这次遇到的反爬机制。它的反爬主要是在你登陆的时候，就已经干掉了大部分想要爬取它信息的人了。(因为不能透露太多的信息，所以就用淘宝来举个例子吧，个人感觉难度跟淘宝也是差不多的。)为什么这么说呢？你可以去试一下淘宝的登陆，看是有多么的难。相信爬过淘宝的都知道，淘宝的ua参数，是经过了算法将一大堆因素组合起来的，想要破解，可能要琢磨到脑壳疼吧。。。所以只能通过使用 Selenium 进行模拟登陆。但我可以很绝对地告诉你，淘宝能够识别你使用了自动化工具，你的滑块验证码无论怎么刷新，永远都是错误状态，永远不会成功。就像下图一样我试着使用了网上一种声称能够突破的办法: 使用代理。果然，理想很美满，现实很骨感。滑块验证码是通过了，但是逃不过异地登陆短信验证这一关。如果想要体验一下我当时的绝望感，可以自己尝试着去搞一下淘宝的数据看下，看一下你能不能成功 “突破上分”最后当然，BB了这么一大堆，还是要给一点干货的。那就给个我个人认为 爬虫进阶的方向 吧！过硬的反“反爬”能力进程与线程断点续爬分布式爬虫监控异常通知这次爬虫，我有一种打通了任督二脉的感觉，这种感觉就好像，那些打王者荣耀厉害的人说的 意识一样 ：什么时候该反野，什么时候该团一样。不知道这样讲能不能体会到我醍醐灌顶的那种感觉？还有一点体会，就是把事情往难了想和往量多了想，你就能找到当下自己所察觉不到的漏洞。当然，往难里想也是需要一定的基础的;但是往量多的方面想，这就没有任何难度了，在脑海中模拟，总能挑出一点瑕疵了吧？以前听过下面这句话，没有什么深刻的体会；现在，算是真正的理解了。再大的困难除以13亿，都会变得很渺小！再小的力量乘以13亿，就会变成爱的海洋。","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/tags/python/"}]},{"title":"Element UI中使用过滤器","slug":"Element-UI中使用过滤器","date":"2019-04-09T10:49:12.000Z","updated":"2019-04-09T11:32:31.639Z","comments":true,"path":"archives/5def7cdc.html","link":"","permalink":"https://www.donlex.cn/archives/5def7cdc.html","excerpt":"","text":"创建基本文件在html 文件中引入css和js文件，参考网站的教程，使用相应的标签，这里做了一个简单的带有查询功能的表格。效果如下：上面的Gif中，在表格中的时间一列，使用了过滤器，将new Date()得到的时间转化为yyyy-mm-dd。实现代码：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;vue-test2&lt;/title&gt; &lt;!-- 引入样式 --&gt; &lt;link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui/lib/theme-chalk/index.css\"&gt; &lt;/head&gt; &lt;body&gt; &lt;template&gt; &lt;el-table :data=\"handlesearch(tableData)\" stripe style=\"width: 49%\"&gt; &lt;el-table-column type=\"index\" label=\"序号\" width=\"60\"&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=\"name\" label=\"姓名\" width=\"180\"&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=\"age\" label=\"年龄\"&gt; &lt;/el-table-column&gt; &lt;!-- element ui 使用过滤器 --&gt; &lt;el-table-column prop=\"stime\" label=\"时间\"&gt; &lt;template slot-scope=\"scope\"&gt;&#123;&#123; scope.row.stime | dateFormat &#125;&#125;&lt;/template&gt; &lt;/el-table-column&gt; &lt;el-table-column label=\"操作\"&gt; &lt;template slot-scope=\"scope\"&gt; &lt;el-button type=\"danger\" @click=\"handledelete(scope.$index)\" icon=\"el-icon-delete\"&gt;删除&lt;/el-button&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;/el-table&gt; &lt;/template&gt; &lt;script src=\"https://cdn.jsdelivr.net/npm/vue\"&gt;&lt;/script&gt; &lt;!-- 引入组件库 --&gt; &lt;script src=\"https://unpkg.com/element-ui/lib/index.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\"&gt; &lt;!-- 过滤器 --&gt; Vue.filter(\"dateFormat\", function(dataStr) &#123; var dt = new Date(dataStr); // yyyy-mm-dd var y = dt.getFullYear(); var m = dt.getMonth() + 1; var d = dt.getDate(); var hh = dt.getHours(); var mm = dt.getMinutes(); var ss = dt.getSeconds(); return y + \"-\" + m + \"-\" + d + \" \" + hh + \":\" + mm + \":\" + ss &#125;) var vm = new Vue(&#123; el: \"#app\", data: &#123; name: \"\", age: \"\", search: \"\", tableData: [&#123; name: \"donlex1\", age: \"18\", stime: new Date() &#125;, &#123; name: \"donlex2\", age: \"19\", stime: new Date() &#125; ] &#125; &#125;) &lt;/script&gt; &lt;/body&gt;&lt;/html&gt;详细源码地址Vue 使用过滤器Vue.js 允许你自定义过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号插值和 v-bind 表达式 (后者从 2.1.0+ 开始支持)。过滤器应该被添加在 JavaScript 表达式的尾部，由“管道”符号指示：1234&lt;!-- 在双花括号中 --&gt;&#123;&#123; message | capitalize &#125;&#125;&lt;!-- 在 `v-bind` 中 --&gt;&lt;div v-bind:id=\"rawId | formatId\"&gt;&lt;/div&gt;Element 使用过滤器在Vue中，使用过滤器通过在v-for遍历变量之后加管道符，但是在ele中，使用的是prop绑定属性的，所以需要在添加一个template 标签，然后在里面使用双花括号插值。123&lt;el-table-column prop=\"stime\" label=\"时间\"&gt; &lt;template slot-scope=\"scope\"&gt;&#123;&#123; scope.row.stime | dateFormat &#125;&#125;&lt;/template&gt;&lt;/el-table-column&gt;注意，stime要与你的定义的属性对应，dateFormat指的是过滤器。","categories":[],"tags":[{"name":"Vue","slug":"Vue","permalink":"https://www.donlex.cn/tags/Vue/"}]},{"title":"Android 中上下文的两种获取区别","slug":"Android-中上下文的两种获取区别","date":"2019-03-21T02:33:44.000Z","updated":"2019-03-21T02:35:52.111Z","comments":true,"path":"archives/26e4a709.html","link":"","permalink":"https://www.donlex.cn/archives/26e4a709.html","excerpt":"前言在写 Android 程序的过程中，总是遇到一些很细节的问题，如果不深入的了解以下，可能会导致一些隐藏漏洞。比如在获取上下文的过程中，有时候使用 activity.this 与 getApplicationContext() ，但是一直都是模糊不清楚的，只有到运行出错的时候，才会考虑到换下，然后解决了问题，但是不知道原因 ：( 所以写了这篇，以供参考。。。","text":"前言在写 Android 程序的过程中，总是遇到一些很细节的问题，如果不深入的了解以下，可能会导致一些隐藏漏洞。比如在获取上下文的过程中，有时候使用 activity.this 与 getApplicationContext() ，但是一直都是模糊不清楚的，只有到运行出错的时候，才会考虑到换下，然后解决了问题，但是不知道原因 ：( 所以写了这篇，以供参考。。。Application类getApplicationContext()是通过以下方法返回一个 Application对象,所以进一步了解这个类。1234/** Return the application that owns this activity. */ public final Application getApplication() &#123; return mApplication; &#125;定义android.app.Application 类代表当前运行的应用程序。应用程序启动时，系统会自动创建对应的 Application 类的实例，并一直伴随应用程序的生命周期，而且始终维持一个实例。对于同一个应用程序，由于系统只会保证存在一个 Application 实例，即在所有组件中获取的是同一个 Application 对象，因此 Application 特别适合保存应用程序中多个组件都需要访问的对象通过扩展 Application 类，可以完成以下3种任务：对 Android 运行时广播的应用程序及事件做出反应在应用程序组件中传递对象管理和维护多个应用程序组件所需要的资源生命周期事件Application 类为应用程序的创建和终止、低可用内存和配置的改变提供了时间处理程序，通过重写以下方法，可以实现上述几种情况的应用程序行为1. onCreate()在创建应用程序时调用该方法。通过重写来实例化应用程序单态，也可以创建和实例化任何应用程序状态变量或共享资源2. onLowMemory()一般只会在后台进程已经终止但前台应用程序依然缺少内存资源时会被调用，通过重写来清空缓存或者释放不必要的资源3. onTrimMemory()作为onLowMemory的一个特定应用程序的替代选择，在 Android 4.0 （API level 13）中引入。当运行时决定当前应用程序是否尝试减少其内存开销。该方法包含一个 level 参数，用于提供请求的上下文4. onConfigurationChanged()与 Activity 不同，当配置发生改变时，应用程序对象不会被终止和重启；如果应用程序使用的值依赖于特定的配置，则重写该方法来重新加载这个值，或者在应用程序级别处理配置的改变两者区别对于 getApplicationContext()，我们可以假定它是一个父类，它属于整个应用程序共有，Activity.this 可以假定为其的一个子类，该子类包含了一些特定的引用。所以，一般可以用 getApplicationContext 的地方都可以用特定的 Activity.this 代替。在生命周期上，通过 getApplicationContext() 得到的上下文对象们只要当前的应用程序还存在，那么该对象就会一直存在，对于 Activity.this 上下文来说，只要当前的 activity 执行了 onDestory 方法，这个上下文对象就会一起被系统收回。在应用场景上，如果我们通过一个上下文对象来执行某个动作，且希望一直处于活跃状态，那么应该用 getApplicationContext 来获取上下文，如数据库的操作。此时，如果采用 Activity.this，那么当前 Activity 调用 onDestory 方法时，数据库就会关闭，应用程序会产生错误。总结getApplicationContext() 返回应用的上下文，生命周期是整个应用，应用摧毁它才摧毁Activity.this 的 context 返回当前 activity 的上下文，属于 activity ，activity 摧毁他就摧毁和 UI 操作相关的不建议使用 getApplicationContext()，一般都使用和 activity 相关的 context，其余的操作，看具体情况，根据存在的生命周期的长度作出选择","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"https://www.donlex.cn/tags/Android/"}]},{"title":"Android 应用程序生命周期","slug":"Android-应用程序生命周期","date":"2019-03-20T04:40:17.000Z","updated":"2019-03-20T04:43:13.623Z","comments":true,"path":"archives/6c31379e.html","link":"","permalink":"https://www.donlex.cn/archives/6c31379e.html","excerpt":"Android应用程序生命周期所谓应用程序的生命周期，是指应用程序进程从创建到消亡的整个过程。在 Android 中，多数情况下每个程序都是在各自独立的 Linux 进程中运行的。当一个程序或其某些部分被请求时，进程就“出生”；当该程序没必要继续运行且系统需要回收此进程所专用的内存时，该进程就“死亡”。因此，Android 程序的生命周期是由系统控制而非程序自身直接控制，这与桌面应用程序有一定的区別，桌面应用程序的进程也是在其他进程或用户请求时被创建，但经常在程序结束时执行一个特定的动作（如从 main 方法 return )而导致进程结束。","text":"Android应用程序生命周期所谓应用程序的生命周期，是指应用程序进程从创建到消亡的整个过程。在 Android 中，多数情况下每个程序都是在各自独立的 Linux 进程中运行的。当一个程序或其某些部分被请求时，进程就“出生”；当该程序没必要继续运行且系统需要回收此进程所专用的内存时，该进程就“死亡”。因此，Android 程序的生命周期是由系统控制而非程序自身直接控制，这与桌面应用程序有一定的区別，桌面应用程序的进程也是在其他进程或用户请求时被创建，但经常在程序结束时执行一个特定的动作（如从 main 方法 return )而导致进程结束。简而言之，Android 应用程序的生命周期是指在 Android 系统中进程从启动到终止的所有阶段，即 Android 程序启动到停止的全过程，程序的生命周期是由 Android 系统进行调度和控制的。但由于手机的内存是存限的.随着打开的应用程序数量的增多，可能造成应用程序响应时间过长或系统假死的情况，因此在系统内存不足的情况下，Android 系统便会舍车保帅，选择性地来终止一些重要性较低的程序应用，以便回收内存供更重要的应用程序使用。Android 根据应用程序的组件及组件当前的运行状态将所有的进程按重要性程度从高到低划分为5个优先级：前台进程可见进程服务进程后台进程空进程前台进程前台进程是指显示在屏幕最前端并与用户正在交互的进程，是 Android 系统中最重要的进程。前台进程包括以下4种情况：进程中的 Activity 正在与用户进行交互进城服务被 Activity 调用，并且该 Activity 正在与用户进行交互进程服务正在执行生命周期中的回调方法，如 onCreat() 、 onStart() 或 onResume() 方法进程的 BroadcastReceiver 正在执行 onReceive() 方法Android 系统在多个前台进程同时运行时，可能会出现资源不足的情况，此时可清除部分前台进程，以保证主要的用户界面能够及时反应可见进程可见进程是指部分程序界面能够被用户看见，却不在前台与用户交互，不能响应界面事件的进程。如果一个进程包含服务，且该服务正在被用户可见的 Activity 调用，则此进程同样被视为可见进程。Android 系统一般存在少量的可见进程，只用在特殊的情况下，Android 系统才会为保证前台进程的资源而清除可见进程服务进程服务进程是指由 startService() 方法启动服务的进程。服务进程有以下特征：没有用户界面在后台长期运行例如，MP3 播放器或后台上传下载数据的网络服务，都是服务进程除非 Android 系统不能保证前台进程或可见进程所必要的资源，否则不会强行清除服务进程后台进程后台进程是指不包含任何已启动的服务，且没有任何可劲的 Activity 的进程。后台进程不直接影响用户的体验。 Android 系统中一般存在数量较多的后台进程，因此这些进程会被曝存在一个列表中，以保证在系统资源紧张是，系统会优先清除用户较长时间没有用到的后台进程空进程空进程是指不包含任何活跃组件的进程。通常保留这些空进程，是为了将其作为一个缓存，在其所属的应用组件下一次需要时，以缩短启动的时间在系统资源紧张时，Android 系统首先会清除空进程，但为了提高Android 系统应用程序的启动速度，Android 系统会将空进程保存在系统内存中，当用户重新启动该程序时，空进程会被重新使用。","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"https://www.donlex.cn/tags/Android/"}]},{"title":"Android 环境搭建与第一个程序","slug":"Android-环境搭建与第一个程序","date":"2019-03-19T03:25:15.000Z","updated":"2019-03-20T04:43:13.625Z","comments":true,"path":"archives/4348e5be.html","link":"","permalink":"https://www.donlex.cn/archives/4348e5be.html","excerpt":"安卓开发环境搭建作为一个独立的平台，Android 有两个比较成熟的开发环境，一个是Eclipse ，另一个是 Google 平台的 Android studio 。","text":"安卓开发环境搭建作为一个独立的平台，Android 有两个比较成熟的开发环境，一个是Eclipse ，另一个是 Google 平台的 Android studio 。这两个开发环境的搭建过程，在网上一搜一大把，由于已经安装了 Android studio ，这里我就不多做介绍了。具体可以参考以下教程：windows 平台下 Android studio 开发环境搭建教程搭建 Android 开发环境——Eclipse安装安卓模拟器安装完开发环境之后，可以选择安装原始的模拟器，不过启动比较慢，并且对于不同的 CPU 可能需要安装加速器。这里选择夜神模拟器。它的启动比较快，可以设置成不同的分辨率，并且不是原始的那种丑丑的安卓UI。安装过程很简单，一路 Next 就行，不过最好选择一个容易记住的路径，方便以后使用 adb 连接。安装完之后直接双击启动夜神模拟器。创建 Android 项目做完上面的准备工作就可以开始创建第一个安卓项目了。启动 Android studio ，选择第一个选项。设置项目信息之后直接一路 Next ，最后一步点击 Finish 即可。创建完之后，等待片刻，就可以看到下面的工作界面了。运行由于作为第一个程序，所以直接运行，看一下效果。 点击右上角的那个绿色三角形的运行键(看上图↑)，选择夜神模拟器，如果没有显示我们开启的模拟器，可以运行 cmd 命令，cd 到夜神安装目录，执行以下命令连接到模拟器：1nox_adb.exe connect 127.0.0.1:62001或者直接重启夜神模拟器，就可以看到了。选择夜神模拟器，等待连接安装该App，就可以直接进入刚才创建的程序中了。运行界面：","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"https://www.donlex.cn/tags/Android/"}]},{"title":"Spring Boot 实现自定义拦截器","slug":"Spring-Boot-实现自定义拦截器","date":"2019-03-13T04:09:47.000Z","updated":"2019-03-13T04:16:32.967Z","comments":true,"path":"archives/5e164285.html","link":"","permalink":"https://www.donlex.cn/archives/5e164285.html","excerpt":"前言1个人笔记，仅供备忘","text":"前言1个人笔记，仅供备忘步骤1.创建一个类实现 HandlerInterceptor 接口，重写接口的方法，添加@Component 注解，这个注解是为后面的使用时进行注入。例：123456789101112131415161718192021222324252627package com.donlex.mybatiswithspringboot.component;import com.donlex.mybatiswithspringboot.model.User;import org.springframework.stereotype.Component;import org.springframework.web.servlet.HandlerInterceptor;import org.springframework.web.servlet.ModelAndView;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;@Componentpublic class Userhandle implements HandlerInterceptor &#123; @Override public boolean preHandle(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o) throws Exception &#123; //方法执行之前调用拦截 System.out.println(\"拦截成功\"); //这里写拦截之后的处理 return true; &#125; @Override public void postHandle(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, ModelAndView modelAndView) throws Exception &#123; &#125; @Override public void afterCompletion(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e) throws Exception &#123; &#125;&#125;2.在入口类的目录或者兄弟目录下创建一个类继承 WebMvcConfigurerAdapter类并重写 addInterceptors 方法；在该类上方添加注解@SpringBootConfiguration，该 注解表明这是一个配置类12345678910111213141516package com.donlex.mybatiswithspringboot.config;import com.donlex.mybatiswithspringboot.component.Userhandle;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.SpringBootConfiguration;import org.springframework.web.servlet.config.annotation.InterceptorRegistry;import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;@SpringBootConfiguration //添加配置类注解public class UserLoginConfig extends WebMvcConfigurerAdapter &#123; @Autowired private Userhandle userhandle; @Override public void addInterceptors(InterceptorRegistry interceptorRegistry) &#123; interceptorRegistry.addInterceptor(userhandle).addPathPatterns(\"/**\"); &#125;&#125;3.项目结构如下：注意新建的包跟启动类是在同一级","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://www.donlex.cn/tags/Java/"},{"name":"Spring Boot","slug":"Spring-Boot","permalink":"https://www.donlex.cn/tags/Spring-Boot/"}]},{"title":"Spring boot 整合 Mybatis","slug":"Spring-boot-整合-Mybatis","date":"2019-03-11T05:22:38.000Z","updated":"2019-03-13T04:18:36.636Z","comments":true,"path":"archives/5e164287.html","link":"","permalink":"https://www.donlex.cn/archives/5e164287.html","excerpt":"前言1参考了很多文章，写下这篇仅供以后备忘记录使用","text":"前言1参考了很多文章，写下这篇仅供以后备忘记录使用学了 Spring boot，现在刚好和之前学的 Mybatis 整合起来，利用插件可以自动生成代码，减少工作量。创建一个 Springboot 项目使用 MyBatis Generator 逆向生成代码1.配置 Maven pom.xml 文件在 pom.xml 增加以下插件：12345678910111213&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.3.2&lt;/version&gt; &lt;configuration&gt; &lt;verbose&gt;true&lt;/verbose&gt; &lt;overwrite&gt;true&lt;/overwrite&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;配置好 Maven 插件，下面需要配置插件需要配置文件2.配置插件的要配置文件在 maven 项目下的 src/main/resources 目录下建立名为 Maven 的项目配置文件存放路径如下图：generatorConfig.xml 和 generator.properties 配置文件，Maven的项目配置文件存放路径如下图 （图片中的generator.properties写成了generatorCongif.properties，请修改回generator.properties） ：generatorConfig.xml 代码如下：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE generatorConfiguration PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\" \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;&lt;generatorConfiguration&gt; &lt;!--导入属性配置--&gt; &lt;properties resource=\"generator.properties\"&gt;&lt;/properties&gt; &lt;!--指定特定数据库的jdbc驱动jar包的位置--&gt; &lt;classPathEntry location=\"$&#123;jdbc.driverLocation&#125;\"/&gt; &lt;context id=\"default\" targetRuntime=\"MyBatis3\"&gt; &lt;!-- optional，旨在创建class时，对注释进行控制 --&gt; &lt;commentGenerator&gt; &lt;property name=\"suppressDate\" value=\"true\"/&gt; &lt;property name=\"suppressAllComments\" value=\"true\"/&gt; &lt;/commentGenerator&gt; &lt;!--jdbc的数据库连接 --&gt; &lt;jdbcConnection driverClass=\"$&#123;jdbc.driverClass&#125;\" connectionURL=\"$&#123;jdbc.connectionURL&#125;\" userId=\"$&#123;jdbc.userId&#125;\" password=\"$&#123;jdbc.password&#125;\"&gt; &lt;/jdbcConnection&gt; &lt;!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制--&gt; &lt;javaTypeResolver&gt; &lt;property name=\"forceBigDecimals\" value=\"false\"/&gt; &lt;/javaTypeResolver&gt; &lt;!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类 targetPackage 指定生成的model生成所在的包名 targetProject 指定在该项目下所在的路径 --&gt; &lt;javaModelGenerator targetPackage=\"com.donlex.mybatiswithspringboot.model\" targetProject=\"src/main/java\"&gt; &lt;!-- 是否允许子包，即targetPackage.schemaName.tableName --&gt; &lt;property name=\"enableSubPackages\" value=\"false\"/&gt; &lt;!-- 是否对model添加 构造函数 --&gt; &lt;property name=\"constructorBased\" value=\"true\"/&gt; &lt;!-- 是否对类CHAR类型的列的数据进行trim操作 --&gt; &lt;property name=\"trimStrings\" value=\"true\"/&gt; &lt;!-- 建立的Model对象是否 不可改变 即生成的Model对象不会有 setter方法，只有构造方法 --&gt; &lt;property name=\"immutable\" value=\"false\"/&gt; &lt;/javaModelGenerator&gt; &lt;!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 --&gt; &lt;sqlMapGenerator targetPackage=\"mapping\" targetProject=\"src/main/resources\"&gt; &lt;property name=\"enableSubPackages\" value=\"false\"/&gt; &lt;/sqlMapGenerator&gt; &lt;!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码 type=\"ANNOTATEDMAPPER\",生成Java Model 和基于注解的Mapper对象 type=\"MIXEDMAPPER\",生成基于注解的Java Model 和相应的Mapper对象 type=\"XMLMAPPER\",生成SQLMap XML文件和独立的Mapper接口 --&gt; &lt;javaClientGenerator targetPackage=\"com.donlex.mybatiswithspringboot.mapper\" targetProject=\"src/main/java\" type=\"XMLMAPPER\"&gt; &lt;property name=\"enableSubPackages\" value=\"true\"/&gt; &lt;/javaClientGenerator&gt; &lt;!--一个table对应数据库中的一张表--&gt; &lt;table tableName=\"info\" domainObjectName=\"Info\" enableCountByExample=\"false\" enableUpdateByExample=\"false\" enableDeleteByExample=\"false\" enableSelectByExample=\"false\" selectByExampleQueryId=\"false\"&gt; &lt;/table&gt; &lt;table tableName=\"order\" domainObjectName=\"Order\" enableCountByExample=\"false\" enableUpdateByExample=\"false\" enableDeleteByExample=\"false\" enableSelectByExample=\"false\" selectByExampleQueryId=\"false\"&gt; &lt;/table&gt; &lt;table tableName=\"product\" domainObjectName=\"Product\" enableCountByExample=\"false\" enableUpdateByExample=\"false\" enableDeleteByExample=\"false\" enableSelectByExample=\"false\" selectByExampleQueryId=\"false\"&gt; &lt;/table&gt; &lt;table tableName=\"receive\" domainObjectName=\"Receive\" enableCountByExample=\"false\" enableUpdateByExample=\"false\" enableDeleteByExample=\"false\" enableSelectByExample=\"false\" selectByExampleQueryId=\"false\"&gt; &lt;/table&gt; &lt;table tableName=\"shopping\" domainObjectName=\"Shopping\" enableCountByExample=\"false\" enableUpdateByExample=\"false\" enableDeleteByExample=\"false\" enableSelectByExample=\"false\" selectByExampleQueryId=\"false\"&gt; &lt;/table&gt; &lt;table tableName=\"user\" domainObjectName=\"User\" enableCountByExample=\"false\" enableUpdateByExample=\"false\" enableDeleteByExample=\"false\" enableSelectByExample=\"false\" selectByExampleQueryId=\"false\"&gt; &lt;/table&gt; &lt;/context&gt;&lt;/generatorConfiguration&gt;generator.propertites 代码如下：12345jdbc.driverLocation=D:\\\\Firefox\\\\download\\\\mysql-connector-java-5.1.44\\\\mysql-connector-java-5.1.44-bin.jarjdbc.driverClass=com.mysql.jdbc.Driverjdbc.connectionURL=jdbc:mysql:///shopstorejdbc.userId=rootjdbc.password=1234563.设置并运行插件在 Intellij IDEA 中点击 菜单 run 中 Edit Configurations,点击 + 号，选择 maven，会出现,在 Commond line 填上mybatis-generator:generate -e,apply 和 ok。步骤参考下图最后点击 generator运行，生成 model，mapper，mapping逆向生成的目录结构如下添加service和controller在与mapper同级的目录下创建service目录，在里面创建UserService12345678910111213141516171819package com.donlex.mybatiswithspringboot.service;import com.donlex.mybatiswithspringboot.mapper.UserMapper;import com.donlex.mybatiswithspringboot.model.User;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;@Service //注意添加这个注解public class UserService &#123; @Autowired private UserMapper userMapper; public User getOneUser() &#123; User user = userMapper.selectByPrimaryKey(1); return user; &#125;&#125;在与mapper同级的目录下创建controller目录，在里面创建UserController1234567891011121314151617181920package com.donlex.mybatiswithspringboot.controller;import com.donlex.mybatiswithspringboot.model.User;import com.donlex.mybatiswithspringboot.service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@RestControllerpublic class UserController &#123; @Autowired private UserService userService; @RequestMapping(\"/query\") public String getAllUser() &#123; User user = userService.getOneUser(); return \"Uid:\"+user.getUid()+\" Username:\"+user.getUsername(); &#125;&#125;目录结构如图：添加 application.yml 配置文件删除原有的 application.properties 文件,添加 application.yml 文件中的配置如下：12345678910111213server: port: 8080spring: datasource: url: jdbc:mysql://localhost:3306/shopstore?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false username: root password: 123456 driver-class-name: com.mysql.jdbc.Driver## 该配置节点为独立的节点，如果将这个配置放在spring的节点下，导致配置无法被识别mybatis: mapper-locations: classpath:mapping/*.xml #注意：一定要对应mapper映射xml文件的所在路径设置扫描Mapper包在启动类中添加包扫描注解123456789101112131415package com.donlex.mybatiswithspringboot;import org.mybatis.spring.annotation.MapperScan;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;@MapperScan(\"com.donlex.mybatiswithspringboot.mapper\")//注意添加这个注解，并且配置正确的包名@SpringBootApplicationpublic class MybatiswithspringbootApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(MybatiswithspringbootApplication.class, args); &#125;&#125;启动测试启动项目，访问对应的 URL 即可。","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://www.donlex.cn/tags/Java/"},{"name":"Spring Boot","slug":"Spring-Boot","permalink":"https://www.donlex.cn/tags/Spring-Boot/"},{"name":"Mybatis","slug":"Mybatis","permalink":"https://www.donlex.cn/tags/Mybatis/"}]},{"title":"爬取猫眼评论，分析《阿丽塔：战斗天使》","slug":"爬取猫眼评论，分析《阿丽塔：战斗天使》","date":"2019-02-25T05:03:13.000Z","updated":"2019-02-25T05:11:02.992Z","comments":true,"path":"archives/f7b23e1a.html","link":"","permalink":"https://www.donlex.cn/archives/f7b23e1a.html","excerpt":"文章首发于慕课网日本漫画《铳梦》改编电影《阿丽塔：战斗天使（Alita: Battle Angel）》于2019年2月22日在中国大陆上映了。近几天，网上对于这部电影的分析评论也很多，今天通过猫眼电影上的评论粗浅地看一下大众对这部科幻电影的评价。","text":"文章首发于慕课网日本漫画《铳梦》改编电影《阿丽塔：战斗天使（Alita: Battle Angel）》于2019年2月22日在中国大陆上映了。近几天，网上对于这部电影的分析评论也很多，今天通过猫眼电影上的评论粗浅地看一下大众对这部科幻电影的评价。工具库jiebapyechartswordcloudmatplotlib分析网站通过在浏览器模拟移动端请求评论的数据，可以看到随着页面的更改url并没有发生变化，初步判断该网页是通过js加载的，通过多次的实践，找到了请求返回的真实url和关键参数，这里返回的是json格式的数据，里面有我们需要的信息。通过比较多次请求信息，发现以下的参数其中，offset是每次请求的起始评论条数；limit是每次请求的条数；ts我猜测应该是时间戳，不用管它抓取信息通过返回的json数据，选取其中的content,score,nick ,gender这四个参数，将这些信息写入一个文本中保存起来。1234567891011121314151617181920212223242526def get_comments(self): ''' 爬取评论信息 :return: ''' for i in range(0, 14352, 15): URL = self.url.format(i) data = requests.get(url=URL, headers=self.header) time.sleep(random.random() * 3) com = json.loads(data.text) comments = com['data']['comments'] if comments: for item in comments: data = &#123; 'content': item['content'], 'score': item['score'], 'nick': item['nick'], 'gender': item['gender'], &#125; print(data) # 存入文本中 with open('comments.txt', 'a+', encoding='UTF-8') as file: file.writelines( json.dumps(data, ensure_ascii=False) + '\\n') else: break数据分析由于爬取的数据都是比较规整，并且没有选择太多的特征，所以就跳过清洗阶段，直接进行分析。为了便于观察，这里使用pyecharts进行可视化处理。1. 评论词云通过词云，能够一目了然地知道这些精选评论都说了些什么。由于使用pyecharts制作词云需要比较繁琐的处理，所以直接使用jieba分词并用WordCloud进行制作词云。123456789101112131415161718192021def get_wordcloud(self): ''' 制作词云图 :return: ''' text = self.get_context() seg_list = jieba.cut(text, cut_all=True) wc = WordCloud(background_color=\"#CCC\", # 设置背景颜色 # mask = pic , #设置背景图片 max_words=2000, # 设置最大显示的字数 margin=5, font_path=\"C:\\\\Windows\\\\Fonts\\\\STFANGSO.ttf\", # 不加这一句显示口字形乱码 max_font_size=80, # 设置字体最大值 random_state=40, # 设置有多少种随机生成状态，即有多少种配色方案 ) w1 = \"/ \".join(seg_list) # 全模式 mword = wc.generate(w1) plt.imshow(mword) plt.axis(\"off\") plt.savefig('wordcloud.png') # 保存图片 plt.show()可以看到，“好看”，“特效”，“第二部”，“剧情”，这几个词都是出现比较多次的，再通过去原来保存评论信息的文本中查询，这些词的整个评论，我发现很多人都是在说电影没有结局，或者期待出第二部的。2.性别比例由于爬取到的性别都是使用数字0，1,2进行标识的，所以按照程序员的思维。我就用 0代表男，1代表女，2代表未知来进行处理了。从图中可以看出，评论以男性居多，约占总数的50%，估计是男同胞们对这类比较抽象，充满想象的电影比较感兴趣吧~3.评分情况从猫眼的总评分9.0来看，这部电影还是比较不错的，截止2月24日已经在中国拿下了39510万元的票房。通过上图，可以清楚地看到，大部分的评分都是8-10分的，所以总评的9.0也是有依据的。最后虽然这部电影一些的情节都没有介绍清楚，但是很多的战斗细节都用特效展现的淋漓尽致。据说全片特效渲染动用了30000台电脑，总耗时4.32亿小时，这也是国内的“五毛钱”特效所不能比拟的。最后来看下这部片的女主吧！附源码传送门： https://github.com/stormdony/python_demo/tree/master/MaoYan_Alita_Battle_Angel","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/tags/python/"}]},{"title":"解决CentOS启动docker失败","slug":"解决CentOS启动docker失败","date":"2019-02-03T09:01:32.000Z","updated":"2019-02-03T09:02:56.875Z","comments":true,"path":"archives/4a8dab04.html","link":"","permalink":"https://www.donlex.cn/archives/4a8dab04.html","excerpt":"解决CentOS启动docker失败安装了Docker之后，使用命令启动却失败。","text":"解决CentOS启动docker失败安装了Docker之后，使用命令启动却失败。报错：Job for docker.service failed because the control process exited with error code. See “systemctl status docker.service” and “journalctl -xe” for details.按照提示：systemctl status docker.service，看到的日志信息：看了几篇博客都没有解决，最终找到解决办法：是由于docker不支持图像内核驱动，SELinux不支持这个内核上的OrthALA2图形驱动程序。解决办法：修改docker配置文件：1vi /etc/sysconfig/docker把OPTIONS一行改为：1OPTIONS='--selinux-enabled=false --log-driver=journald --signature-verification=false'按下“Esc”，输入“：”加“wq”保存退出vim编辑模式，再启动：1service docker start就行了。补充：123查看版本： docker -v开机启动docker： systemctl enable docker 停止docker： systemctl stop docker","categories":[],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://www.donlex.cn/tags/Docker/"}]},{"title":"Hexo中NexT主题添加置顶功能","slug":"Hexo中NexT主题添加置顶功能","date":"2019-02-01T14:34:38.000Z","updated":"2019-02-06T12:26:00.308Z","comments":true,"path":"archives/caeb67e2.html","link":"","permalink":"https://www.donlex.cn/archives/caeb67e2.html","excerpt":"前言文章置顶功能有很多的好处，比如：快速定位吸引用户注意力。。。","text":"前言文章置顶功能有很多的好处，比如：快速定位吸引用户注意力。。。所以下面就介绍如何在hexo的next主题中添加文章置顶功能。安装库目前已经有修改后支持置顶的仓库，可以直接用以下命令安装。12$ npm uninstall hexo-generator-index --save$ npm install hexo-generator-index-pin-top --save然后在需要置顶的文章的Front-matter中加上top: true即可。比如下面这篇文章：12345678910---title: 我的2018总结tags: - 随笔categories: - 随笔abbrlink: 58a24148date: 2018-12-31 11:45:59top: true---到目前为止，置顶功能已经可以实现了。所有相关博文到这边就结束了。不过置顶的文章显示在最上面之后，如果没有明确的置顶标志，是不是感觉有点怪怪的呢？设置置顶标志打开：/themes/next/layout/_macro目录下的post.swig文件，定位到&lt;div class=&quot;post-meta&quot;&gt;标签下，插入如下代码：12345&#123;% if post.top %&#125; &lt;i class=\"fa fa-thumb-tack\"&gt;&lt;/i&gt; &lt;font color=\"green\"&gt;置顶&lt;/font&gt; &lt;span class=\"post-meta-divider\"&gt;|&lt;/span&gt;&#123;% endif %&#125;效果请返回主页 或者顶部查看","categories":[{"name":"NexT","slug":"NexT","permalink":"https://www.donlex.cn/categories/NexT/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.donlex.cn/tags/hexo/"},{"name":"NexT","slug":"NexT","permalink":"https://www.donlex.cn/tags/NexT/"}]},{"title":"站点配置更新","slug":"站点配置更新","date":"2019-01-07T06:21:15.000Z","updated":"2019-01-07T07:21:20.385Z","comments":true,"path":"archives/undefined.html","link":"","permalink":"https://www.donlex.cn/archives/undefined.html","excerpt":"前言最近更新了一下站点的一些配置，让网站的趣味性有了一定的提升。主要做了一下几点更新。添加雪花效果添加天气插件加入CNZZ统计","text":"前言最近更新了一下站点的一些配置，让网站的趣味性有了一定的提升。主要做了一下几点更新。添加雪花效果添加天气插件加入CNZZ统计 下面将详细分享一下过程经历！添加雪花效果实现方法：在 \\themes\\next\\source\\js\\src 目录下新建一个 snow.js 文件，复制粘贴一下代码。其中样式一是六边形的雪片，样式二是小圆点的雪花，其自行调试，选择喜欢的样式。样式一123456789101112131415161718192021222324252627282930313233343536373839404142/*样式一*/(function($)&#123; $.fn.snow = function(options)&#123; var $flake = $('&lt;div id=\"snowbox\" /&gt;').css(&#123;'position': 'absolute','z-index':'9999', 'top': '-50px'&#125;).html('&amp;#10052;'), documentHeight = $(document).height(), documentWidth = $(document).width(), defaults = &#123; minSize : 10, maxSize : 20, newOn : 1000, flakeColor : \"#AFDAEF\" /* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */ &#125;, options = $.extend(&#123;&#125;, defaults, options); var interval= setInterval( function()&#123; var startPositionLeft = Math.random() * documentWidth - 100, startOpacity = 0.5 + Math.random(), sizeFlake = options.minSize + Math.random() * options.maxSize, endPositionTop = documentHeight - 200, endPositionLeft = startPositionLeft - 500 + Math.random() * 500, durationFall = documentHeight * 10 + Math.random() * 5000; $flake.clone().appendTo('body').css(&#123; left: startPositionLeft, opacity: startOpacity, 'font-size': sizeFlake, color: options.flakeColor &#125;).animate(&#123; top: endPositionTop, left: endPositionLeft, opacity: 0.2 &#125;,durationFall,'linear',function()&#123; $(this).remove() &#125;); &#125;, options.newOn); &#125;;&#125;)(jQuery);$(function()&#123; $.fn.snow(&#123; minSize: 5, /* 定义雪花最小尺寸 */ maxSize: 50,/* 定义雪花最大尺寸 */ newOn: 300 /* 定义密集程度，数字越小越密集 */ &#125;);&#125;);样式二123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128/*样式二*//* 控制下雪 */function snowFall(snow) &#123; /* 可配置属性 */ snow = snow || &#123;&#125;; this.maxFlake = snow.maxFlake || 200; /* 最多片数 */ this.flakeSize = snow.flakeSize || 10; /* 雪花形状 */ this.fallSpeed = snow.fallSpeed || 1; /* 坠落速度 */&#125;/* 兼容写法 */requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function(callback) &#123; setTimeout(callback, 1000 / 60); &#125;;cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || window.oCancelAnimationFrame;/* 开始下雪 */snowFall.prototype.start = function()&#123; /* 创建画布 */ snowCanvas.apply(this); /* 创建雪花形状 */ createFlakes.apply(this); /* 画雪 */ drawSnow.apply(this)&#125;/* 创建画布 */function snowCanvas() &#123; /* 添加Dom结点 */ var snowcanvas = document.createElement(\"canvas\"); snowcanvas.id = \"snowfall\"; snowcanvas.width = window.innerWidth; snowcanvas.height = document.body.clientHeight; snowcanvas.setAttribute(\"style\", \"position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;\"); document.getElementsByTagName(\"body\")[0].appendChild(snowcanvas); this.canvas = snowcanvas; this.ctx = snowcanvas.getContext(\"2d\"); /* 窗口大小改变的处理 */ window.onresize = function() &#123; snowcanvas.width = window.innerWidth; /* snowcanvas.height = window.innerHeight */ &#125;&#125;/* 雪运动对象 */function flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) &#123; this.x = Math.floor(Math.random() * canvasWidth); /* x坐标 */ this.y = Math.floor(Math.random() * canvasHeight); /* y坐标 */ this.size = Math.random() * flakeSize + 2; /* 形状 */ this.maxSize = flakeSize; /* 最大形状 */ this.speed = Math.random() * 1 + fallSpeed; /* 坠落速度 */ this.fallSpeed = fallSpeed; /* 坠落速度 */ this.velY = this.speed; /* Y方向速度 */ this.velX = 0; /* X方向速度 */ this.stepSize = Math.random() / 30; /* 步长 */ this.step = 0 /* 步数 */&#125;flakeMove.prototype.update = function() &#123; var x = this.x, y = this.y; /* 左右摆动(余弦) */ this.velX *= 0.98; if (this.velY &lt;= this.speed) &#123; this.velY = this.speed &#125; this.velX += Math.cos(this.step += .05) * this.stepSize; this.y += this.velY; this.x += this.velX; /* 飞出边界的处理 */ if (this.x &gt;= canvas.width || this.x &lt;= 0 || this.y &gt;= canvas.height || this.y &lt;= 0) &#123; this.reset(canvas.width, canvas.height) &#125;&#125;;/* 飞出边界-放置最顶端继续坠落 */flakeMove.prototype.reset = function(width, height) &#123; this.x = Math.floor(Math.random() * width); this.y = 0; this.size = Math.random() * this.maxSize + 2; this.speed = Math.random() * 1 + this.fallSpeed; this.velY = this.speed; this.velX = 0;&#125;;// 渲染雪花-随机形状（此处可修改雪花颜色！！！）flakeMove.prototype.render = function(ctx) &#123; var snowFlake = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size); snowFlake.addColorStop(0, \"rgba(255, 255, 255, 0.9)\"); /* 此处是雪花颜色，默认是白色 */ snowFlake.addColorStop(.5, \"rgba(255, 255, 255, 0.5)\"); /* 若要改为其他颜色，请自行查 */ snowFlake.addColorStop(1, \"rgba(255, 255, 255, 0)\"); /* 找16进制的RGB 颜色代码。 */ ctx.save(); ctx.fillStyle = snowFlake; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.fill(); ctx.restore();&#125;;/* 创建雪花-定义形状 */function createFlakes() &#123; var maxFlake = this.maxFlake, flakes = this.flakes = [], canvas = this.canvas; for (var i = 0; i &lt; maxFlake; i++) &#123; flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed)) &#125;&#125;/* 画雪 */function drawSnow() &#123; var maxFlake = this.maxFlake, flakes = this.flakes; ctx = this.ctx, canvas = this.canvas, that = this; /* 清空雪花 */ ctx.clearRect(0, 0, canvas.width, canvas.height); for (var e = 0; e &lt; maxFlake; e++) &#123; flakes[e].update(); flakes[e].render(ctx); &#125; /* 一帧一帧的画 */ this.loop = requestAnimationFrame(function() &#123; drawSnow.apply(that); &#125;);&#125;/* 调用及控制方法 */var snow = new snowFall(&#123;maxFlake:60&#125;);snow.start();然后在 \\themes\\next\\layout\\_layout.swig 文件里&lt;body&gt;&lt;/body&gt;内部引用即可：1234567&lt;!-- 雪花特效 --&gt;&lt;script type=\"text/javascript\"&gt; var windowWidth = $(window).width(); if (windowWidth &gt; 480) &#123; document.write('&lt;script type=\"text/javascript\" src=\"/js/src/snow.js\"&gt;&lt;\\/script&gt;'); &#125;&lt;/script&gt;请确保在你添加的代码上面已经引入了JQ，否则你还需要导入jq1&lt;script type=\"text/javascript\" src=\"//libs.baidu.com/jquery/1.8.3/jquery.min.js\"&gt;&lt;/script&gt;添加天气插件网上有很多的天气插件，找了很久发现心知天气非常不错。获取地址：https://www.seniverse.com/widget/get使用心知天气有两点必备条件：注册心知天气账号博客绑定了域名如果你没有域名但是可以通过IP地址进行访问也是可以添加成功的。下面说一下详细的过程：配置插件有账号之后,登录根据自己喜好配置插件。心知天气的自动适配功能非常的不错。安装代码选择好配置之后，就可以获取心知的插件代码。获取到代码之后，在\\themes\\next\\layout\\_partials\\head\\custom-head.swig中添加获取的代码。之后就可以部署到Github上了。吐槽一下，加载数独真的是很慢，特别是在移动端中，如果你希望你的站点访问速度快一点，建议还是不要为了功能，而放弃用户体验。添加CNZZ统计刚开始弄NexT主题的时候，对一些配置还不是很明白，所以一直都不敢弄。今天总算有点精神，就把友盟的统计给加上了。之前一直都是用不蒜子的统计，但是不蒜子统计的内容太过简单了，不能够看到其他的一些数据。友盟+ 传送门：https://passport.umeng.com/login?appId=cnzz配置站点信息登录之后，选择右上角的添加站点，配置好你的站点信息获取代码获取友盟提供给你的代码，友盟提供了很多的样式，随便复制一份就行。在\\themes\\next\\layout\\_third-party\\analytics\\cnzz-analytics.swig中将原来的代码全部删除，复制下面的代码：ps：如果没有该文件，请自行创建然后复制修改下面的代码123456789101112&#123;% if theme.cnzz_siteid %&#125;&lt;div&gt;&lt;!-- 填写你的友盟代码 --&gt;&lt;script type=\"text/javascript\"&gt; var cnzz_protocol = ((\"https:\" == document.location.protocol) ? \" https://\" : \" http://\"); document.write(unescape(\"%3Cspan id='cnzz_stat_icon_12'%3E%3C/span%3E%3Cscript src='\" + cnzz_protocol + \"s19.cnzz.com/z_stat.php%3Fid%3D12%2show%3Dpic' type='text/javascript'%3E%3C/script%3E\"));&lt;/script&gt;&lt;!-- 你的友盟代码 end --&gt;&lt;/div&gt;&#123;% endif %&#125;修改配置文件添加了代码之后，还需要修改next的配置文件才能够生效。注意是主题配置文件打开\\themes\\next目录下的_config.yml，按ctrl + F搜索CNZZ,找到之后将注释的内容打开，并设置成true，注意空格12# CNZZ countcnzz_siteid: true这样就可以成功的使用CNZZ进行统计了。建议使用hexo s在本地测试，看是否有问题再部署上去。附赠在我的博客中，部署友盟上去之后，发现移动端的footer顶上去了。哭死: ( 写博客的时候，才发现不蒜子的统计居然变少了，原来不蒜子对域名前加www和不加www的网站是区分统计的。。。算了，反正是佛系博主，随缘吧。。。。打开\\themes\\next\\source\\css\\_custom目录下的custom.styl，添加以下代码：12345678910// Custom styles.//mobile style footer@media (max-width: 767px) .content-wrap &#123; width: 100%; padding: 20px; min-height: auto; margin-bottom: 30px; border-radius: initial; &#125;注意.content-wrap前面有一个空格，一定要添加，否则博客的样式就全乱了。最后不要脸的问一句，各位看官觉得网站怎么样？请在下方留言告诉我你的看法哦。我也不一定会更改。。","categories":[{"name":"NexT","slug":"NexT","permalink":"https://www.donlex.cn/categories/NexT/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.donlex.cn/tags/hexo/"},{"name":"NexT","slug":"NexT","permalink":"https://www.donlex.cn/tags/NexT/"}]},{"title":"Hexo接入Google AdSense广告","slug":"Hexo接入Google-AdSense广告","date":"2019-01-02T04:55:58.000Z","updated":"2019-01-02T08:20:00.863Z","comments":true,"path":"archives/6102cfc3.html","link":"","permalink":"https://www.donlex.cn/archives/6102cfc3.html","excerpt":"Don’t be evil","text":"Don’t be evil前言2019年开始，由于个人的博客站点已经建立几个月，一直安静地躺在那里做美男子。就想着接点小广告，赚一点睡后收入。于是搜索发现了Google AdSense ，发现它可以在hexo博客上挂上广告位进行展示，于是乎注册了一个账号，没想到今早通过了审核。今天又弄了一下广告位的布局，总共commit了差不多10次左右，终于把广告位置排的比较合理了。下面分享一下具体的执行步骤注册AdSense账号注册额链接：AdSenseps:需要 V屁N（vpn），请自行找梯子。。。点击“SIGN UP NOW”,进行注册。如果你有谷歌账号那就很方便了，直接点击右上角的“SIGN IN”就好。详细的注册步骤就不多做介绍，注意填写信息的时候，一定要谨慎，否则可能审核通不过，这样大大的浪费了你的时间。填写完信息之后，需要将谷歌提供的代码放置到你的博客中。请参考下一个步骤 添加广告代码AdSense要求要在 &lt;head&gt; 标记中添加了自动广告代码,只需在\\themes\\next\\layout\\_partials\\head.swig中添加任意一个位置添加你获取到的代码。例如：我将AdSense的代码和google分析的代码放置在一块,这样渲染的时候就会自动放置在某一个位置了。1234567891011&#123;% if theme.google_site_verification %&#125; &lt;meta name=\"google-site-verification\" content=\"dYiRwj1ulGaUvTQRrCjJA9YKnNF8JN4wRKXzdbE6wBc\" /&gt;&#123;% endif %&#125;&lt;!-- 添加获取的代码 --&gt;&lt;script async src=\"http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"&gt;&lt;/script&gt;&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push(&#123;google_ad_client: \"ca-pub-123456789\",enable_page_level_ads: true&#125;);&lt;/script&gt;静候结果添加了代码之后，如果顺利的话，google AdSense会发邮件到你注册的邮箱，在收到邮箱之后，登录AdSense,就可以而根据自己的博客站点选择相应的广告单元了。个性化配置博客此处以 NexT 主题为例，介绍自定义配置的设置方式。新建 theme/next/layout/_custom/google_adsense.swig，将 AdSense 上的代码粘贴进去在 theme/next/layout/_custom/head.swig 中也粘贴一份如果在每篇博客里也想看到广告的话，在 theme/next/layout/post.swig 里中在希望看到的地方加上:1&#123;% include '_custom/google_adsense.swig' %&#125;例如：我的博客中将一个自定义的广告快放置到了留言板下面在\\themes\\next\\layout\\_partials\\comments.swig中将提供的代码放置进去1234567891011121314151617181920212223 &#123;% elseif theme.valine_modify.appid and theme.valine_modify.appkey %&#125; &lt;div class=\"comments\" id=\"comments\"&gt; &lt;/div&gt; &#123;% endif %&#125;&lt;!-- 添加的内容 --&gt; &lt;!-- 方式一开始 --&gt; &#123;% include '_custom/google_adsense.swig' %&#125; &lt;!-- 方式一开始 --&gt; &lt;!-- 方式二开始 --&gt; &lt;!-- liuyanlan_test --&gt; &lt;ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-62682286883328\" data-ad-slot=\"32555273\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push(&#123;&#125;); &lt;/script&gt; &lt;!-- 方式二结束 --&gt;&lt;!-- 添加内容结束 --&gt;&#123;% endif %&#125;此时如果 hexo server 的话是看不到广告的，因为 AdSense 的显示是 Google 控制的。注意上面的两种方式只需要选择其中一种就可以了。注意事项在成功接入AdSense广告之后，有以下几点需要记住的。而且Google也会根据几种方式和数据判断广告点击是否作弊，从而注销你的账号。所以不要心存侥幸心理，好好发原创文章，提高网站的质量才是王道。作弊广告点击者的IP地址与你Adsense账户登录IP地址相同作弊广告点击的CTR数据太高作弊广告点击者的IP地址来自同一个地理区域根据Cookies判断作弊Adsense广告点击作弊广告点击者页面停留时间太短直接访问者的广告点击率过高流量小但广告点击率高在网页上用文字提示请求鼓动点击广告最后虽然现在一般的个人博客站点流量一般都不大，但是有空余的地方放置一点广告还是能起到丰富博客的作用的。而且Google AdSense的广告相比百度联盟的还是比较优质的！虽然赚不了几个，但是养着一个广告也是不错，万一过几年再上AdSense看一下可能就已经达到100刀的提现额度了呢。这也算是一种增加睡后收入的方法。文章首发于慕课网：https://www.imooc.com/article/270946","categories":[{"name":"NexT","slug":"NexT","permalink":"https://www.donlex.cn/categories/NexT/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.donlex.cn/tags/hexo/"},{"name":"NexT","slug":"NexT","permalink":"https://www.donlex.cn/tags/NexT/"}]},{"title":"Python包的管理利器pipenv","slug":"Python包的管理利器pipenv","date":"2019-01-01T02:09:00.000Z","updated":"2019-01-01T07:55:59.529Z","comments":true,"path":"archives/18ef6217.html","link":"","permalink":"https://www.donlex.cn/archives/18ef6217.html","excerpt":"大家都知道 pip（pip2、pip3分别对应python的2、3版本）是python的包管理工具，使得python的第三方包的安装等任务十分方便。另外，很多python的虚拟环境工具如virtualenv、pyenv等等都得到了广泛使用。","text":"大家都知道 pip（pip2、pip3分别对应python的2、3版本）是python的包管理工具，使得python的第三方包的安装等任务十分方便。另外，很多python的虚拟环境工具如virtualenv、pyenv等等都得到了广泛使用。而pipenv是requests库作者Kenneth Reitz开发的，它结合了pip及virtualenv的功能和优点，其目的是替代virtualenv和pyenv，将pip及virtualenv的功能集于一身。多说一句，尽管 pip 可以安装 Python 包，但仍推荐使用 pipenv，因为它是一种更高级的工具，可简化依赖关系管理的常见使用情况。如果还没有使用过pipenv的童鞋，赶紧试试吧！pipenv安装pipenv 的安装依赖 pip，如果没有配置好pip，安装pipenv还是有点麻烦的。如果配置好了pip的环境变量，在任意目录下都可以使用下面的命令安装pip install pipenvpipenv使用方法命令名命令创建pipenvpipenv启动pipenvpipenv shell(若未存在虚拟环境会自动创建)退出pipenvexit查找所有安装包pip list环境内包的依赖展示pipenv graph查找虚拟环境的路径pipenv –venv卸载安装包pipenv uninstall实例将目录更改为包含你的Python项目的文件夹，并启动Pipenv，cd my_projectpipenv install这将在项目目录中创建两个新文件: Pipfile和Pipfile.lock，如果项目不存在，则为项目创建一个新的虚拟环境。Pipfile包含关于项目的依赖包的信息，并取代通常在Python项目中使用的requirements.txt文件。在上图中，使用了mkdir创建了文件夹PyProject，之后进入这个文件夹使用pipenv install 创建了虚拟环境。由于默认的python版本是3的，所以创建的虚拟环境是py3。如果需要使用py2的话，可以添加参数进行创建。pipenv install - -two激活虚拟环境：pipenv shell激活后，可以看到控制台输入那里已经标明虚拟环境了安装第三方库使用pipenv创建虚拟环境后，进入pipfile所在目录，使用install命令安装第三方库。 例如pipenv install requests其实把pipenv当作pip来使用。无需像virtualenv那样需要额外的先启动虚拟环境。pipenv区分你是在给哪个虚拟环境安装，依赖的是Pipfile文件的位置。卸载第三方库pipenv uninstall requests查看项目中安装的依赖pipenv graph冻结Pipfile冻结就相当于将项目所使用的第三方库列表进行打包输出，类似于的virtualenv中生成requirements.txt文件。通过更新Pipfile.lock来冻结库名称及其版本，以及其依赖关系的列表需要使用锁参数：pipenv lock如果另一个用户拷贝了你的项目，他们只需要安装Pipenv，然后：pipenv installpipenv会在项目文件夹下自动寻找Pipfile和Pipfile.lock文件，创建一个新的虚拟环境并安装必要的软件包。最后如果你在做web项目就会体会到pipenv的便利。一些包只支持py2，所以必须使用Python2，而现在都8102年了，大部分人都习惯py3了，所以用pipenv创建虚拟环境能够避免混乱，而且pipenv也比其他的一些管理工具更加人性化一点。更多详细指令可以直接输入pipenv查看，或者查看官方文档。","categories":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/tags/python/"}]},{"title":"我的2018总结","slug":"我的2018总结","date":"2018-12-31T03:45:59.000Z","updated":"2019-02-06T12:25:38.953Z","comments":true,"path":"archives/58a24148.html","link":"","permalink":"https://www.donlex.cn/archives/58a24148.html","excerpt":"转眼间，这趟列车就要驶过2018这个站点了。在这一年里，我个人成长了很多，也收获了很多。感谢一直以来关注我的读者，是你们的支持，让我坚持到了现在。","text":"转眼间，这趟列车就要驶过2018这个站点了。在这一年里，我个人成长了很多，也收获了很多。感谢一直以来关注我的读者，是你们的支持，让我坚持到了现在。其实我个人开始有意识的积累，应该是在2018年3月份之后。因为3月份那个时候，刚好受到多个公众号文章的影响，逐渐地开通了博客，之后不久才开通了公众号“Python绿洲”。Python绿洲下面就分享一下我个人在2018年的一些经历。3月份前的我：盲目生长在这段时间之前，我只是盲目的跟随学校的脚步，学着学校安排的课程，没有多么地刻苦勤奋，所以也没有取得多么好的成绩，感觉基本上都是在玩手机中度过了大学中最初的两年。可能在学校里，没有外面那么大的压力，对于就业也没有很好的急迫感，只是随波逐流而已。如果一直都过着学校的平静生活，没有意外的话，我应该就会成为毕业即失业的正面教材。在3月份，大二下学期生活刚开始的时候，我逐渐有了一些想法：不想再这样浑浑噩噩下去了，我要改变现在这种颓废的状态。想要改变就要走出舒适区，让学校生活这一潭死水搅动起来。也得益于大二的时候有学过一点Python的基本知识，让我找到了方向：在不放弃学校的Java方向的前提下，努力朝Python方向深入。3月份后的我：野蛮而向上初识爬虫既然确定了方向，就要不断朝着这个方向努力。那个时候对Python的能干什么还很朦胧，没有什么想法，觉得无从下手。在跟一个比较聊得来的师兄的建议下，选择了从爬虫学起。之后就通过看视频学习爬虫，不断地在网上找案例来练手。在学习的这段时间里，我基本都是在晚上2、3点之后才舍得去睡觉。在看视频–&gt;做案例–&gt;写博客的循环中，我能够很清楚地看到我的学习成果，每一天都让我充满了成就感，不断地鼓励我前进。或许这就是爬虫的魅力吧！在将近一个月的学习下，让我的基本功得到了一定的增强。同时，这一个月也是我的博客最高产的时候。博客归档投稿文章第一次投稿文章是在4月末，《后来的我们》刚上映后我就把豆瓣上的影评用selenium给爬了下来并写在了CSDN博客上。之后就发邮件投给菜鸟学python。邮件发出去几天都没有收到回复，本来以为没有希望的时候，收到了回复。非常的激动，也正是投稿的成功，让我坚定了继续学下去的决心。其实说来有点惭愧，第一次投稿我是奔着稿费去的。作为农村的孩子，我是希望能够尽量少花父母的钱。虽然这次稿费不多，但这是依靠我自己学习的知识赚来的。更新公众号在第一次投稿的文章：《 爬取豆瓣短评，刘若英导演的电影&lt;后来的我们&gt;发现爱情原来是这样》发布之后，我开始慢慢地将博客中的文章搬过来公众号，并且写一些文章发在公众号。前期文章的内容杂乱、排版都不够美观。后来在慢慢的接触、模仿一些优秀的公众号文章下，逐步改进了这些缺点。公众号的文章都是在学习之余抽空写出来的，有时候一篇文章就花了好几个小时，所以更新的频率不高，但现在也慢慢地积累了70多篇文章。在有比较好的想法的时候，努力将这些想法实现，然后写成文章记录下来，并向比较知名的公众号投稿。其实现在大部分的关注者应该都是通过其他公众号流过来的。由于没有增长黑客的概念和本身不够优秀的原因，导致公众号的关注人数一直不温不火。不断学习在学习爬虫两个月也就是7月份之后，因为受够了爬取页面的结构不断地改变和反爬措施的不断升级，对爬虫产生了厌烦。我开始转向web方向，学习了Django和Flask，同时还在了解了一些数据分析与机器学习的内容，参加了科赛的机器学习训练营。在不断深入学习的过程中，我体会到了一个本科生知识局限性，而且真的是少的可怜，不得不放慢脚步，回头恶补高数、线代等知识。一直到现在，我都还在慢慢的学习的路上，虽然进展缓慢，但是还是希望能够坚持下去吧！自建博客站点在9月份左右，萌生了自己搭建博客的想法。于是，不断实践，学会了使用hexo搭建博客，学会了域名的分配与配置，学会了博客主题的个性化设置。在搭建的过程中，遇到了很多困难，也通过不断地搜索、实践，逐步养成了解决问题的正确习惯：关键字百度谷歌。相信这些路上的绊脚石，会成为我的垫脚石，不断提高自身实力。域名购买现在 https://donlex.cn 这个站点建站已经有3个月了，文章还没有发多少。展望2019其实，我对于未来现在还没有什么规划，真的，可能是还没有踏入社会的原因吧。但是现在大三了，心里也总是会有一些焦虑的。我现在只希望在即将到来的19年里，能够找到自己的方向，并踏踏实实地提升自己的认知水平和专业能力吧！至于博客和公众号，我会继续坚持下去。学习之余，我会尽可分享更多对大家有帮助的文章。在这里我不敢做什么保证。另外多说一句，经营一个公众号真的很不容易，写原创文章更是不容易。就到这里吧，希望大家2019都能够更进一个台阶！感谢一直以来支持我的朋友，薛薛你们！","categories":[{"name":"随笔","slug":"随笔","permalink":"https://www.donlex.cn/categories/随笔/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://www.donlex.cn/tags/随笔/"}]},{"title":"通过猎聘的招聘信息找出学习线路规划","slug":"通过猎聘的招聘信息找出学习线路规划","date":"2018-12-10T04:48:42.000Z","updated":"2018-12-10T05:10:50.417Z","comments":true,"path":"archives/8a901d69.html","link":"","permalink":"https://www.donlex.cn/archives/8a901d69.html","excerpt":"1文章首发于微信公众号：Python绿洲 。如需转载，请联系该公众号前言之前发过一篇文章《 Python or Java？Boss直聘告诉你该如何选择》, 主要是这两种语言方向在应聘岗位上的比较，没有涉及具体的岗位要求的分析。前两天，刚好看到网上的一些学习路线图，又对比了招聘网站上的要求，发现这两者其实差不多。","text":"1文章首发于微信公众号：Python绿洲 。如需转载，请联系该公众号前言之前发过一篇文章《 Python or Java？Boss直聘告诉你该如何选择》, 主要是这两种语言方向在应聘岗位上的比较，没有涉及具体的岗位要求的分析。前两天，刚好看到网上的一些学习路线图，又对比了招聘网站上的要求，发现这两者其实差不多。所以就用爬虫爬取了猎聘网上的岗位信息，对这些招聘信息进行处理，从中找出需要掌握的一些语言和工具，从而有目的地进行学习，更快的提高自己的能力，让自己不再因为不知道学习的线路而烦恼，也能够符合招聘的要求。查看网页(搜索首页)(岗位要求)从这个岗位职责中，可以看出需要掌握的工具或语言绝大多数都是以英文为主。所以主要提取英文就行了。至于其他的信息就不进行提取了流程爬取搜索到的岗位链接进一步爬取详细的岗位要求提取其中英文单词pyecharts展示爬取招聘岗位使用beautifulsoup进行解析,主要将岗位名称，详细链接，公司，薪资，位置和学历要求这几个信息存到MongoDB中就好。1234567891011121314151617181920212223def getLink(seachname, pagenum): for i in range(pagenum): url = \"https://www.liepin.com/zhaopin/?init=-1&amp;key=&#123;&#125;&amp;curPage=&#123;&#125;\".format( seachname, i) web_data = requests.get(url=url, headers=header) soup = BeautifulSoup(web_data.content, 'lxml') job_list = soup.select(\".sojob-list &gt; li\") for item in job_list: name = item.select(\".job-info &gt; h3\")[0]['title'] link = item.select(\".job-info &gt; h3 &gt; a\")[0]['href'] company = item.select(\".company-name &gt; a\")[0].text salary = item.select(\".text-warning\")[0].text location = item.select(\".area\")[0].text education = item.select(\".edu\")[0].text data = &#123; \"title\": name, \"link\": link, \"company\": company, \"salary\": salary, \"location\": location, \"education\": education, &#125; pywork.insert(data) #使用MongoDB存储详细岗位要求由于任职要求中有&lt;br&gt;标签，需要将其切除，而且由于使用beautifulsoup解析，所以&lt;br&gt;是tag对象，需要创建对象再删除。被这个问题困住了好久。之后将所有爬取到的岗位要求都写到一个文件中，方便后期使用jieba切分12345678910111213141516171819def getInfo(url, demands_text): web_data = requests.get(url, headers=header) soup = BeautifulSoup(web_data.content, 'lxml') try: demands = soup.select(\".content-word\")[0].contents demands = sorted(set(demands), key=demands.index) # 删除&lt;br/&gt; delete_str = \"&lt;br/&gt;\" br_tag = BeautifulSoup(delete_str, \"lxml\").br demands.remove(br_tag) # 拼接所有要求 for item in demands: demands_text += item.replace(\"\\r\", \"\") #写入文件 f = open('demands.txt', mode='a+', encoding='UTF-8') f.write(demands_text + \"\\n\") f.close() except: logging.log(\"warning...\")分词使用jieba分词之后，还需要将一些单词例如：or，pc等上删除，本着“宁可错杀一千,不可放过一个”的原则，所以将少于1个字母的单词使用正则去掉12345678def CutWordByJieBa(txt, seachname): seg_list = jieba.cut(txt, cut_all=True) w1 = \"/ \".join(seg_list) # 全模式 fil = re.findall('[a-zA-Z]&#123;1,&#125;/', w1) # 提取英文 strl = \"\" for i in fil: strl += i strl = strl.lower() # 全部转换为小写可视化在这部分，之前只想着将需要掌握的工具用词云进行展示就好。然而，有点幸运呀！当使用Navicat12连接到MongoDB的时候，发现它有自动作图分析的功能。所以先用Navicat中的功能，简单的来看一下总体情况：以爬虫工程师为关键词查询后，使用pyecharts进行数据展示重点个人感觉词云更加准确，不过词云和bar图处理方式都是一样的，只是表现形式不一样而已。从柱状图中可以看出需要掌握的工具可以分为三类：数据库：mysql、oracle、mongodb解析：xpath、css反爬：cookie、ip、scrapy、jwt其中jwt(JSON Web Token) 我就不认识。所以通过这种方式，我就可以找到自己的盲区，就算不深入了解学习，但是百度一下，大概知道它是什么，还是可以的嘛最后如果有感兴趣的小伙伴，可以自己动手试一下。个人感觉这些排名前10的工具对自己的职业规划还是有点帮助的，也希望能够对你有所帮助！github地址：https://github.com/stormdony/python_demo/tree/master/LiePin欢迎关注微信公众号：Python绿洲，获取更多内容！文章首发于微信公众号：Python绿洲 。如需转载，请联系该公众号","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/tags/python/"}]},{"title":"Excel常用函数","slug":"Excel常用函数","date":"2018-11-06T12:45:40.000Z","updated":"2018-11-06T13:10:20.518Z","comments":true,"path":"archives/e9dc5278.html","link":"","permalink":"https://www.donlex.cn/archives/e9dc5278.html","excerpt":"​在处理数据的时候，经常使用Python中的Pandas包来处理，有时候即使是很小的数据量，也使用Pandas来处理。个人觉得这有点大材小用，并且有点浪费时间。所以为了能够快速的处理这些小型的数据，最近学习了如何利用Excel来处理。感觉这样比使用Pandas处理得到的结果快速便捷很多。下面将分享几个比较常用的函数。","text":"​在处理数据的时候，经常使用Python中的Pandas包来处理，有时候即使是很小的数据量，也使用Pandas来处理。个人觉得这有点大材小用，并且有点浪费时间。所以为了能够快速的处理这些小型的数据，最近学习了如何利用Excel来处理。感觉这样比使用Pandas处理得到的结果快速便捷很多。下面将分享几个比较常用的函数。1.COUNTIF函数countif(range,criteria): 对区域中满足单个指定条件的单元格进行计数range: 要计算的单元格范围criteria：计算条件，其形式可以为数字、表达式或文本；例如：条件可以为32、“32”，“&gt;32”或“apples”例子：利用countif函数统计重复值具体步骤：选中B2单元格，然后输入函数公式：=COUNTIF(A:A,A2)将公式复制到B3:C11的所有单元格2.IF函数if(logical_test,true_value,false_value): 执行真假值判断，根据逻辑计算的真假值，返回结果logical_test: 表示计算结果为True或False的表达式true_value: 为True时返回的值false_value: 为False时返回的值注意：条件表达式是用比较运算符(&lt;、=、&gt;)建立的式子，无比较就无判断两个值若是数值数据可以直接书写，若是文本数据则要使用双引号标记参数里面所有符号都是英文状态下的标点符号IF函数可以进行嵌套，但是嵌套层数有限制3.OR和AND函数OR(logical1,[logical2],…): 至少一个参数为真，就返回TrueAND(logical1,[logical2],…): 所有参数全为真，就返回Truelogical1：要检验的第一个条件，结果可以为TRUE或FALSElogical2：为可选项，最多可包含255个结果4.LEFT和RIGHT函数LEFT(text,[num_chars]): 得到字符串左部指定个数的字符RIGHT(text,[num_chars]): 得到字符串右部指定个数的字符text: 包含要提取的字符的文本字符串num_chars：指定要由LEFT或RIGHT提取的字符的数量5.CONCATENATE函数concatenate(text1,text2,…) 将几个文本字符串合并为一个文本字符串text1，text2，…: 需要合并的第1、 2、… 、N个文本项(N&lt;=30),这些文本项可以文本字符串、数字或单个单元格的引用注意：在将数字和文本合并到一个单元格中时，数字将转换成文本，而不再用做数字，也就是说，无法再对其进行任何数字运算6.日期函数在一些工作表中，经常需要使用日期，手动输入的话会严重的影响工作效率；使用日期函数就能够快速的实现日期的填写显示公式快捷键2018-10-29=TODAY()Ctrl+;21:33无Ctrl+Shift+;2018-10-29 21:33=NOW()“Ctrl+;(分号)”,再按空格键，接着按”Ctrl+Shift+;”7.VLOOKUP函数vlookup匹配函数：在表格的首列查找指定的数据，并返回指定的数据所在行中的指定列处的单元格内容内容公式：VLOOKUP(lookup_value,table_array,col_index_num,range_lookup)lookup_value: 要在表格或区域的第一列中查找的值，其参数可以是值或引用table_array: 包含数据的单元格区域，可以使用绝对区域(如：A2:D8)或区域名称的引用。 table_array第一列中的值是由lookup_value搜索的值。这些值可以是文本、数字或逻辑值col_index_num: 希望返回的匹配的列序号，其参数为1时，返回table_array第一列中的值，以此类推range_lookup: 近似匹配(1)还是精确匹配(0),一般情况选0例子：员工职位表 ↑员工个人信息 ↑使用VLOOKUP函数将个人的职位填写到信息表中：打开职位表和个人信息表在信息表中的F2单元格中输入公式=VLOOKUP(B3,[员工职位表.xlsx]Sheet1!$B$2:$D$11,3,0),按Enter键。注意，输入VLOOKUP函数的第二个参数时，不需要手动输入，直接选中“职位表”中的B1:D11的区域，参数将自动录入成[员工职位表.xlsx]Sheet1!$B$2:$D$11,3,0)复制F2单元格，并粘贴至F3:F7，即完成数据提取。结果：总结在Excel中还有许多有用的函数，由于篇幅的原因就不列举了。这些函数有时候比直接使用Python来处理数据要简单的多。对于数据的处理不管是使用Python也好，Excel也罢，只要能够快速的完成任务，就不失为一种好方法。真的不要拘泥于工具！文章首发于 慕课网","categories":[],"tags":[{"name":"excel","slug":"excel","permalink":"https://www.donlex.cn/tags/excel/"}]},{"title":"web项目中使用支付宝接口","slug":"web项目中使用支付宝接口","date":"2018-10-23T09:52:18.000Z","updated":"2018-11-06T13:06:52.184Z","comments":true,"path":"archives/eea56fba.html","link":"","permalink":"https://www.donlex.cn/archives/eea56fba.html","excerpt":"前言一直想弄一个有关于支付的第三方接口调用的web项目，网上看了一大堆资料，最后还是选择了使用支付宝。原因有一下两点：不用另外注册账户(一直讨厌注册各种账户)支付宝有沙箱功能，可以实现虚拟支付，适合拿来练手","text":"前言一直想弄一个有关于支付的第三方接口调用的web项目，网上看了一大堆资料，最后还是选择了使用支付宝。原因有一下两点：不用另外注册账户(一直讨厌注册各种账户)支付宝有沙箱功能，可以实现虚拟支付，适合拿来练手下面就进入正题吧进入沙箱支付宝扫码登录蚂蚁金服开放平台之后，在首页的常用功能那里进入沙箱应用，如果是第一次使用，就需要添加功能。参考下图生成RSA密钥进入沙箱应用之后可以看到信息配置部分需要设置RSA2(SHA256)密钥，由于我已经设置过了，这里就没有相应的截图。生成RSA密钥的工具官方也提供了，直接查看生成RSA密钥进入下载工具，并按照步骤就可以生成密钥了。上传密钥通过上一步生成的密钥，直接在沙箱应用中上传，如果验证通过的话，就可以开始接入代码了。下载demo在官网中下载demo：https://docs.open.alipay.com/270/106291/ ,将demo解压。然后下载沙箱版的支付宝(只支持安卓版)，然后回到沙箱环境中，查看沙箱账号，用买家信息登录。合并入自己的项目下面就以一个简单的例子开始，具体步骤如下：将解压文件中的jar包放入项目lib中,把 jsp文件 或者自己写的页面复制入项目，修改AlipayConfig文件的部分配置编写简单的servlet运行查看支付详细的目录结构如下：AlipayConfig:123456789101112131415161718192021222324252627282930public class AlipayConfig &#123; //↓↓↓↓↓↓↓↓↓↓请在这里配置您的基本信息↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ // 应用ID,您的APPID，收款账号既是您的APPID对应支付宝账号 public static String app_id = \"填入沙箱APPID\"; // 商户私钥，您的PKCS8格式RSA2私钥 public static String merchant_private_key = \"填入你的密钥\"; // 支付宝公钥,查看地址：https://openhome.alipay.com/platform/keyManage.htm 对应APPID下的支付宝公钥。 public static String alipay_public_key = \"填入公钥\"; // 服务器异步通知页面路径 需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问 public static String notify_url = \"http://localhost:8080/alipay.trade.page.pay-JAVA-UTF-8/notify_url.jsp\"; // 页面跳转同步通知页面路径 需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问 public static String return_url = \"http://localhost:8080/alipay.trade.page.pay-JAVA-UTF-8/return_url.jsp\"; // 签名方式 public static String sign_type = \"RSA2\"; // 字符编码格式 public static String charset = \"utf-8\"; // 支付宝网关 public static String gatewayUrl = \"https://openapi.alipaydev.com/gateway.do\"; // 支付宝网关 public static String log_path = \"C:\\\\\";servlet代码:这里写了一个简单的doGet方法，当请求这个servlet的时候就会执行支付，然后使用沙箱版的支付宝直接扫码或者网页登录沙箱应用账号就可以支付了12345678910111213141516171819202122232425262728293031323334353637383940protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; //获得初始化的AlipayClient AlipayClient alipayClient = new DefaultAlipayClient(AlipayConfig.gatewayUrl, AlipayConfig.app_id, AlipayConfig.merchant_private_key, \"json\", AlipayConfig.charset, AlipayConfig.alipay_public_key, AlipayConfig.sign_type); //设置请求参数 AlipayTradePagePayRequest alipayRequest = new AlipayTradePagePayRequest(); alipayRequest.setReturnUrl(AlipayConfig.return_url); alipayRequest.setNotifyUrl(AlipayConfig.notify_url); //商户订单号，商户网站订单系统中唯一订单号，必填 String out_trade_no = \"20181037\"; //付款金额，必填 String total_amount = \"9999\"; //订单名称，必填 String subject = \"支付宝测试\"; //商品描述，可空 String body = \"商品描述\"; alipayRequest.setBizContent(\"&#123;\\\"out_trade_no\\\":\\\"\"+ out_trade_no +\"\\\",\" + \"\\\"total_amount\\\":\\\"\"+ total_amount +\"\\\",\" + \"\\\"subject\\\":\\\"\"+ subject +\"\\\",\" + \"\\\"body\\\":\\\"\"+ body +\"\\\",\" + \"\\\"product_code\\\":\\\"FAST_INSTANT_TRADE_PAY\\\"&#125;\"); //请求 String result; try &#123; result = alipayClient.pageExecute(alipayRequest).getBody(); response.setContentType(\"text/html;charset=\" + AlipayConfig.charset); response.getWriter().write(result);//直接将完整的表单html输出到页面 response.getWriter().flush(); response.getWriter().close(); &#125; catch (AlipayApiException e) &#123; e.printStackTrace(); response.getWriter().write(\"捕获异常出错\"); response.getWriter().flush(); response.getWriter().close(); &#125; &#125;效果：这时候直接使用沙箱版扫码支付就可以了从此不用担心的问题，随心所欲，不用家里有矿也有花不完的钱！！！","categories":[],"tags":[{"name":"JavaWeb","slug":"JavaWeb","permalink":"https://www.donlex.cn/tags/JavaWeb/"},{"name":"支付接口","slug":"支付接口","permalink":"https://www.donlex.cn/tags/支付接口/"}]},{"title":"解决不蒜子统计不可用问题","slug":"解决不蒜子统计不可用问题","date":"2018-10-09T03:30:44.000Z","updated":"2019-02-20T10:53:36.760Z","comments":true,"path":"archives/8f7c4fe6.html","link":"","permalink":"https://www.donlex.cn/archives/8f7c4fe6.html","excerpt":"10月份开始引用不蒜子作为静态网站的博客的统计功能都无法显示了，刚开始我还以为是网络原因，无法响应导致的。但是上不蒜子的官网看了一下，才知道，原来不蒜子的域名更改了，导致script引用不了，从而无法进行统计。var ap=new APlayer({element:document.getElementById(\"aplayer-nnSgjaTl\"),narrow:!1,autoplay:!1,showlrc:2,music:{title:\"Way Back Home\",author:\"SHAUN\",url:\"//music.163.com/song/media/outer/url?id=863046037.mp3\",pic:\"//p1.music.126.net/MAkLvm2p9LE0mWLEr2NkMA==/109951163378634466.jpg?param=130y130\"}});window.aplayers||(window.aplayers=[]),window.aplayers.push(ap)","text":"10月份开始引用不蒜子作为静态网站的博客的统计功能都无法显示了，刚开始我还以为是网络原因，无法响应导致的。但是上不蒜子的官网看了一下，才知道，原来不蒜子的域名更改了，导致script引用不了，从而无法进行统计。var ap=new APlayer({element:document.getElementById(\"aplayer-nnSgjaTl\"),narrow:!1,autoplay:!1,showlrc:2,music:{title:\"Way Back Home\",author:\"SHAUN\",url:\"//music.163.com/song/media/outer/url?id=863046037.mp3\",pic:\"//p1.music.126.net/MAkLvm2p9LE0mWLEr2NkMA==/109951163378634466.jpg?param=130y130\"}});window.aplayers||(window.aplayers=[]),window.aplayers.push(ap)下面是不蒜子的官方公告：大家好，因七牛强制过期原有的『dn-lbstatics.qbox.me』域名（预计2018年10月初），与客服沟通数次无果，即使我提出为此付费也不行，只能更换域名到『busuanzi.ibruce.info』！因我是最早的一批七牛用户，为七牛至少带来了数百个邀请用户，很痛心，很无奈！各位继续使用不蒜子提供的服务，只需把原有的：&lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;域名改一下即可：&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;只需要修改该js域名，其他均未改变。若有疑问，可以加入不蒜子交流QQ群：419260983，对您带来的不便，非常抱歉！！！还是那句话，不蒜子不会中断服务！！！！因此，想要继续使用不蒜子功能，只能修改NexT的配置了。只需要将 ..\\next\\layout_third-party\\analytics下的 busuanzi-counter.swig修改成不蒜子新的域名就可以正常显示了例子：1&lt;script async src=\"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\u0002\u0002\"&gt;&lt;/script&gt;将上面的代码替换成下面的代码即可：1&lt;script async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\u0002\u0002\"&gt;&lt;/script&gt;","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.donlex.cn/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.donlex.cn/tags/hexo/"}]},{"title":"解除Dr.com的WiFi限制，开启热点","slug":"解除Dr-com的WiFi限制，开启热点","date":"2018-10-09T02:55:53.000Z","updated":"2018-10-09T03:28:40.572Z","comments":true,"path":"archives/adea6c28.html","link":"","permalink":"https://www.donlex.cn/archives/adea6c28.html","excerpt":"前言现在国内大部分高校都使用了宽带上网认证，有一些比较严格的客户端还会禁止开启WiFi共享。作为8102年的新人类，怎么能没有WiFi这一必需品呢？下面就来记录一下，在Dr.com客户端下破解共享限制的功能，实现WiFi共享上网冲浪。","text":"前言现在国内大部分高校都使用了宽带上网认证，有一些比较严格的客户端还会禁止开启WiFi共享。作为8102年的新人类，怎么能没有WiFi这一必需品呢？下面就来记录一下，在Dr.com客户端下破解共享限制的功能，实现WiFi共享上网冲浪。解除WiFi限制在校园网中使用Dr.com连接的用户，如果检测到存在共享行为，就会迫使账户下线；所以为了能够解除WiFi限制，需要安装一个插件才可以使Dr.com客户端跳过检测WiFi共享的行为。破解WiFi限制，点击下载插件下载工具包之后，直接运行该软件，然后点击 破解Dr.com 即可，破解WiFi限制；破解后校园网可以随意使用猎豹WiFi、360随身wifi共享网络，也能使用win10自带的热点功能建立热点。如果是使用猎豹WiFi开启热点的话，手机挂VP(屁)N(恩)是翻不过去的。但是如果是Win10自带的工具，就可以科学上网。具体原因尚未找到 :(使用命令开启WiFi首先开启wifi需要管理员权限，所以在开始菜单搜索cmd或组合键win+r，右键以管理员身份运行。输入netsh wlan set hostednetwork mode=allow 回车，把承载网络模式设置为允许输入netsh wlan set hostednetwork ssid=无线网络的名称 key=您想要设置的密码名称跟密码直接写就行，不用双引号什么的ssid跟key用空格隔开密码必须8位以上输入netsh wlan start hostednetwork回车开启wifi这时候虽然开启了wifi，但是还是这时候还是无互联网连接的，所以需要有网络的网络连接共享给它进入控制面板\\所有控制面板项\\网络和共享中心选择已经连接上互联网的网络，设置允许其他用户共享网络；具体步骤参考下图其他命令1234#删除共享网络netsh wlan set hostednetwork mode=disallow# 查看共享网络信息---蹭网信息netsh wlan show hostednetwork如果想要更加方便一点，可以把这些命令做成bat文件新建文本保存以上代码，然后把文本文件以改成bat后缀。双击运行就可以了","categories":[],"tags":[{"name":"Dr.com","slug":"Dr-com","permalink":"https://www.donlex.cn/tags/Dr-com/"},{"name":"校园网","slug":"校园网","permalink":"https://www.donlex.cn/tags/校园网/"}]},{"title":"To be happier","slug":"To-be-happy","date":"2018-10-01T13:06:47.000Z","updated":"2018-10-01T14:42:54.208Z","comments":true,"path":"archives/35de7772.html","link":"","permalink":"https://www.donlex.cn/archives/35de7772.html","excerpt":"!function(){var e=new DPlayer({container:document.getElementById(\"dplayer0\"),video:{url:\"//gss3.baidu.com/6LZ0ej3k1Qd3ote6lo7D0j9wehsv/tieba-smallvideo-transcode/10839346_255b960c73ccfcbd2602d6188e9089d4_0.mp4\"},danmaku:{id:\"b498e2397a2e40fafa94eea866e123861a02e6c779b3b84ef5dde735e9252cfa68a6b54b78b523962cd772b8989df2\",api:\"//api.prprpr.me/dplayer/\"}});window.dplayers||(window.dplayers=[]),window.dplayers.push(e)}()","text":"!function(){var e=new DPlayer({container:document.getElementById(\"dplayer0\"),video:{url:\"//gss3.baidu.com/6LZ0ej3k1Qd3ote6lo7D0j9wehsv/tieba-smallvideo-transcode/10839346_255b960c73ccfcbd2602d6188e9089d4_0.mp4\"},danmaku:{id:\"b498e2397a2e40fafa94eea866e123861a02e6c779b3b84ef5dde735e9252cfa68a6b54b78b523962cd772b8989df2\",api:\"//api.prprpr.me/dplayer/\"}});window.dplayers||(window.dplayers=[]),window.dplayers.push(e)}()今天在逛油管的时候，发现了这个有点小感人、心酸的短视频。第一次看的时候没有看懂，后来多看几遍之后，才慢慢有一种代入感。谁的生活都有低谷和困难的时候，如果一直沉浸在悲伤中，无法走出，那就只能停留在低谷，无法看到更高处的美丽风景；在低谷时，更要保持乐观的心态，无论多艰难都要咬着牙坚持下去，胜利就在下一刻。加油！！！视频的发布者留言：当@bastilledan第一次让我更快乐的时候，我被带回去了。你能在歌词中感受到的情感是疯狂的。当我越来越多地听这首歌时，它让我想起了我生命中经历过的许多事情。最近我失去了我最好的朋友，我的伴侣，我的终身朋友。我想要这个视频拥抱我们失去或牺牲的痛苦以及随之而来的伤痛。我希望这首歌和这段视频能让你在任何情况下都能得到解脱，让我们都更快乐。ps: 由于优酷的外链不能禁止自动播放，为了用户体验，只能换百度贴吧的链接，可能清晰度有点低，能看就好~~","categories":[{"name":"随笔","slug":"随笔","permalink":"https://www.donlex.cn/categories/随笔/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://www.donlex.cn/tags/随笔/"}]},{"title":"NexT填坑-样式无法加载","slug":"Next填坑-样式无法加载","date":"2018-09-29T06:07:45.000Z","updated":"2018-09-29T06:27:52.779Z","comments":true,"path":"archives/ddf26aa7.html","link":"","permalink":"https://www.donlex.cn/archives/ddf26aa7.html","excerpt":"The sun always comes after the rain","text":"The sun always comes after the rain自从启用了 https之后，有一些资源文件加载导致网站提示不安全，从而绿锁丢失。百度了一番后，用meta升级HTTP请求的方法，在.\\themes\\next\\layout\\_partials\\head.swing中添加了1&lt;meta http-equiv=”Content-Security-Policy” content=”upgrade-insecure-requests”/&gt;部署上去之后，本来以为可以完美解决。但是到想添加插件更新博文的时候，本地部署测试，发现样式无法加载搞了一个晚上，最后才发现就是添加了上面的那个代码才导致的这个问题。把上面的代码去掉之后就可以，解决样式加载不了的问题如果想引用http资源可以使用相对协议的方法,帮助你实现当网站引入的都是 http 资源，网站域名更换为 https 后的无缝切换。具体使用方法为：1&lt;img src=\"//domain.com/img/logo.png\"&gt;简而言之，就是将URL的协议（http、https）去掉，只保留//及后面的内容。这样，在使用https的网站中，浏览器会通过https请求URL，否则就通过http发送请求。附注：如果是浏览本地文件，浏览器通过file://协议发送请求，导致请求失败，因此本地测试最好是搭建一个本地服务器。","categories":[{"name":"NexT","slug":"NexT","permalink":"https://www.donlex.cn/categories/NexT/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.donlex.cn/tags/hexo/"},{"name":"NexT","slug":"NexT","permalink":"https://www.donlex.cn/tags/NexT/"}]},{"title":"NexT主题添加音乐","slug":"NexT主题添加音乐","date":"2018-09-24T06:20:37.000Z","updated":"2018-09-28T05:00:48.117Z","comments":true,"path":"archives/bda67445.html","link":"","permalink":"https://www.donlex.cn/archives/bda67445.html","excerpt":"NexT主题添加音乐在Hexo博客中添加音乐，有三种方式可以插入音乐因为启用了 https，引用网易云的音乐会提示网站不安全，现在这个问题还没有解决，所以就不预览效果了","text":"NexT主题添加音乐在Hexo博客中添加音乐，有三种方式可以插入音乐因为启用了 https，引用网易云的音乐会提示网站不安全，现在这个问题还没有解决，所以就不预览效果了一、使用html标签写法如下：1&lt;audio src=\"https://什么什么什么.mp3\" style=\"max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;\" controls=\"controls\" loop=\"loop\" preload=\"meta\"&gt;Your browser does not support the audio tag.&lt;/audio&gt;二、使用网易云外链网易云音乐的外链很好用，不仅有可以单曲，还能有歌单，有兴趣的自己去网易云音乐找首歌尝试。但是有一些音乐因为版权原因放不了，还有就是不完全支持 https，导致小绿锁不见了。网易云歌曲外链接获取方法首先 找到你要下载的歌曲 用网页版打开 复制链接中的歌曲ID 如：SHAUN - Way Back Home1https://music.163.com/#/song?id=863046037ID就是863046037然后将ID替换到下面的链接中1http://music.163.com/song/media/outer/url?id= .mp3如：1http://music.163.com/song/media/outer/url?id=863046037.mp3三、安装插件安装插件可以完美的解决上面的问题，并且用插件，有显示歌词功能，也美观，建议使用这种方法。安装插件首先在站点文件夹根目录安装插件：所在目录：~/blog/1npm install hexo-tag-aplayer --save使用方法一在文章中的写法：1&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;标签参数title : 曲目标题author: 曲目作者url: 音乐文件 URL 地址picture_url: (可选) 音乐对应的图片地址narrow: （可选）播放器袖珍风格autoplay: (可选) 自动播放，移动端浏览器暂时不支持此功能width:xxx:(可选) 播放器宽度(默认: 100%)lrc:xxx: (可选）歌词文件 URL 地址实例1&#123;% aplayer \"歌曲名\" \"歌手名\" \"https://什么什么什么.mp3\" \"https://封面图.jpg\" \"lrc:https://歌词.lrc\" %&#125;方法二除了使用标签 lrc 选项来设定歌词，你也可以直接使用 aplayerlrc 标签来直接插入歌词文本在博客中：123&#123;% aplayerlrc \"title\" \"author\" \"url\" \"封面(选填)\" \"autoplay\" %&#125;[00:00.00]lrc here&#123;% endaplayerlrc %&#125;更多详细使用方法参考文档：hexo-tag-aplayer获取歌词歌词的获取，可以直接找到各层次文件，或者可以直接在网易云上通过以下方法获取1http://music.163.com/api/song/media?id=863046037其中id为网易云歌曲的id，打开链接之后，可以把”lyric”字段的值复制下来，再删除\\n就可以直接放到aplayerlrc标签中了，这样就可以有歌词出现","categories":[{"name":"NexT","slug":"NexT","permalink":"https://www.donlex.cn/categories/NexT/"},{"name":"hexo","slug":"NexT/hexo","permalink":"https://www.donlex.cn/categories/NexT/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.donlex.cn/tags/hexo/"},{"name":"NexT","slug":"NexT","permalink":"https://www.donlex.cn/tags/NexT/"}]},{"title":"[leetcode02]9-回文数","slug":"leetcode02-9-回文数","date":"2018-09-22T12:08:16.000Z","updated":"2018-09-22T13:18:41.310Z","comments":true,"path":"archives/4644f3b9.html","link":"","permalink":"https://www.donlex.cn/archives/4644f3b9.html","excerpt":"题目第9题：回文数判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序(从右向左)读都是一样的整数。","text":"题目第9题：回文数判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序(从右向左)读都是一样的整数。示例 1:输入: 121输出: true示例 2:输入: -121输出: false解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。示例 3:输入: 10输出: false解释: 从右向左读, 为 01 。因此它不是一个回文数。进阶:你能不将整数转为字符串来解决这个问题吗？思路&amp;实现思路：先取出各个数字变成list，再翻转；然后判断新的list与原来的是否一致123456789101112131415class Solution: def isPalindrome(self, x): \"\"\" 先取出各个数字组成list，再翻转 :type x: int :rtype: bool \"\"\" li = [] if x &lt; 0: return False else: while x != 0: li.append(x % 10) x = int(x / 10) return list(reversed(li)) == li官方解释首先，我们应该处理一些临界情况。所有负数都不可能是回文，例如：-123 不是回文，因为 - 不等于 3。所以我们可以对所有负数返回 false。现在，让我们来考虑如何反转后半部分的数字。 对于数字 1221，如果执行 1221 % 10，我们将得到最后一位数字 1，要得到倒数第二位数字，我们可以先通过除以 10 把最后一位数字从 1221 中移除，1221 / 10 = 122，再求出上一步结果除以10的余数，122 % 10 = 2，就可以得到倒数第二位数字。如果我们把最后一位数字乘以10，再加上倒数第二位数字，1 * 10 + 2 = 12，就得到了我们想要的反转后的数字。 如果继续这个过程，我们将得到更多位数的反转数字。现在的问题是，我们如何知道反转数字的位数已经达到原始数字位数的一半？我们将原始数字除以 10，然后给反转后的数字乘上 10，所以，当原始数字小于反转后的数字时，就意味着我们已经处理了一半位数的数字。复杂度分析时间复杂度：O(\\log_{10}(n))O(log 10 (n))， 对于每次迭代，我们会将输入除以10，因此时间复杂度为 O(\\log_{10}(n))O(log10(n))。空间复杂度：O(1)O(1)。实现根据官方的解释，我试着实现了一下：1234567891011121314def gaunfang(self, x): ''' 用时：400ms :param x: :return: ''' if x &lt; 0: return False temp_x = x y = 0 while temp_x != 0: y = y * 10 + temp_x % 10 temp_x = int(temp_x / 10) return y == x其他方法1234567891011def reversed_str(self, x): ''' 翻转字符串 用时：446ms :param x: :return: ''' if str(x) == str(x)[::-1]: return True else: return False这个方法主要是采用了字符串截取的方法，从最后逐位翻转，在判断。题目难度难度：简单 总结这道题的算法难度不大，实现起来简单，但是没有想到的是，python的实现方法会是如此的简洁。看来，还是的多接触一下优秀的代码，增长一下自己的见识才行！！！","categories":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/categories/python/"},{"name":"算法","slug":"python/算法","permalink":"https://www.donlex.cn/categories/python/算法/"},{"name":"LeetCode","slug":"python/算法/LeetCode","permalink":"https://www.donlex.cn/categories/python/算法/LeetCode/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/tags/python/"},{"name":"算法","slug":"算法","permalink":"https://www.donlex.cn/tags/算法/"},{"name":"LeetCode","slug":"LeetCode","permalink":"https://www.donlex.cn/tags/LeetCode/"}]},{"title":"NexT建站历程","slug":"NexT建站历程","date":"2018-09-21T06:49:45.000Z","updated":"2019-08-12T07:08:01.819Z","comments":true,"path":"archives/55e73569.html","link":"","permalink":"https://www.donlex.cn/archives/55e73569.html","excerpt":"最近一段时间一直在倒腾着自己的个人博客。本来直接部署到Github上就算了，没想着弄域名或者搜索引擎优化啥的。但是前几天，忽而兴起，跑到阿里云上搜了一下域名，看到一个喜欢的域名还不错，并且价格也还算亲民。一时冲动就下了单….","text":"最近一段时间一直在倒腾着自己的个人博客。本来直接部署到Github上就算了，没想着弄域名或者搜索引擎优化啥的。但是前几天，忽而兴起，跑到阿里云上搜了一下域名，看到一个喜欢的域名还不错，并且价格也还算亲民。一时冲动就下了单….冲动是魔鬼，要不是买了个域名，或许就不会有这么多的烦心事。真的是“ No zuo , No die ”。折腾了好几天，终于弄好了https和引擎收录。加上了小绿锁，感觉就是不一样；虽然现在在搜索引擎上的权重还没上去，但是相信以后会好起来的。说到搜索引擎，不得不吐槽一下国内和国外的效率。百度都提交一个星期了，才搜得到。人家谷歌第二天就把大部分文章给索引到了。还有一点最烦人的就是，Github 是禁止百度爬虫的 :( 搞得我还得双线部署。幸好，最后还是依靠国内的 Coding ，才让百度爬虫爬取到我的站点，并收录了进去。都说前人栽树，后人乘凉。感谢各位博主的博客，才让我少踩了很多坑。以后就可以安心的写博客，不用管这些烦心事了。为了记录一下自己的艰辛填坑路，也为了让更多想搭建博客的人能够 少踩一点坑。下面将献上一些对我有帮助的博客链接，希望也能帮到正在折腾的你！！GitHub Pages 绑定个人域名，免 Cloudflare 支持 https 打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化 Hexo提交百度和Google收录站点 hexo的next主题个性化教程:打造炫酷网站 号外号外！解决github+hexo+yilia评论插件的问题！！！ hexo博客Next主题进阶写作技巧 总的来说这几篇博文，已经涵盖了 NexT 主题的所有配置和优化过程。至于其他主题可以自行找教程，不过还是建议选用多人用的主题，避免钻牛角尖，既浪费时间，又难受，何必呢是吧？最后，当然是宣传一波我的站点啦。。。欢迎访问分享 ，反馈意见哈！！ https://www.donlex.cn","categories":[{"name":"随笔","slug":"随笔","permalink":"https://www.donlex.cn/categories/随笔/"},{"name":"NexT","slug":"随笔/NexT","permalink":"https://www.donlex.cn/categories/随笔/NexT/"},{"name":"hexo","slug":"随笔/NexT/hexo","permalink":"https://www.donlex.cn/categories/随笔/NexT/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.donlex.cn/tags/hexo/"},{"name":"NexT","slug":"NexT","permalink":"https://www.donlex.cn/tags/NexT/"},{"name":"随笔","slug":"随笔","permalink":"https://www.donlex.cn/tags/随笔/"}]},{"title":"leetcode打卡-1","slug":"leetcode打卡-1","date":"2018-09-20T07:40:00.000Z","updated":"2018-09-29T06:27:31.525Z","comments":true,"path":"archives/b6c00922.html","link":"","permalink":"https://www.donlex.cn/archives/b6c00922.html","excerpt":"前言从今天开始，将会开启我的 LeetCode 打卡之路。为了能让打卡坚持下去，就给自己设定了用博客来记录打卡过程的目标。算是留点记录吧！希望将来会感谢今天努力刷 LeetCode 的自己 : )~","text":"前言从今天开始，将会开启我的 LeetCode 打卡之路。为了能让打卡坚持下去，就给自己设定了用博客来记录打卡过程的目标。算是留点记录吧！希望将来会感谢今天努力刷 LeetCode 的自己 : )~题目给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。示例:给定 nums = [2, 7, 11, 15], target = 9因为 nums[0] + nums[1] = 2 + 7 = 9所以返回 [0, 1]思路采用逆向思维，用目标的值减去数组中的一个数，看结果是否还在数组里面实现代码实现使用的是 python 语言1234567891011121314class Solution: def twoSum(self, nums, target): \"\"\" :type nums: List[int] :type target: int :rtype: List[int] \"\"\" n = len(nums) for x in range(n): b = target-nums[x] if b in nums: y = nums.index(b) if y!=x: return x,y题目难度难度：简单","categories":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/categories/python/"},{"name":"算法","slug":"python/算法","permalink":"https://www.donlex.cn/categories/python/算法/"},{"name":"LeetCode","slug":"python/算法/LeetCode","permalink":"https://www.donlex.cn/categories/python/算法/LeetCode/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/tags/python/"},{"name":"算法","slug":"算法","permalink":"https://www.donlex.cn/tags/算法/"},{"name":"LeetCode","slug":"LeetCode","permalink":"https://www.donlex.cn/tags/LeetCode/"}]},{"title":"Python or Java？Boss直聘告诉你该如何选择","slug":"Python-or-Java？Boss直聘告诉你该如何选择","date":"2018-09-10T03:13:33.000Z","updated":"2018-09-14T04:09:53.322Z","comments":true,"path":"archives/e7a46e9a.html","link":"","permalink":"https://www.donlex.cn/archives/e7a46e9a.html","excerpt":"前言“人生苦短，我用 Python”，Python 的经典 slogan 讲究争分夺秒，并且在 9月的TIOBE榜中拿下第 3 名宝座。","text":"前言“人生苦短，我用 Python”，Python 的经典 slogan 讲究争分夺秒，并且在 9月的TIOBE榜中拿下第 3 名宝座。今天就试着在Boss直聘网站上爬取python和java的招聘信息，比较一下两个方向的发展钱景，为本科生的就业方向给一个小小的建议爬取在招聘网站上直接以”本科生”和”java”或”python”作为筛选条件，以广州为例爬取招聘的大体信息，具体代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758from bs4 import BeautifulSoupimport requestsimport pymongoclient = pymongo.MongoClient('localhost', 27017)zhipin = client['zhipin']zhipin_java = zhipin['zhipin_java']zhipin_python = zhipin['zhipin_python']headers = &#123; 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36', 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',&#125;total_page = 11def get_info(param, data_table): ''' 根据招聘方向(java或python..)爬取信息存进数据库 :param param: 招聘方向 :param data_table: 数据库表明 :return: ''' for i in range(1, total_page): url = 'https://www.zhipin.com/c101280100/d_203-h_101280100/?query=&#123;0&#125;&amp;page=&#123;1&#125;'.format( param, i) web_data = requests.get(url, headers=headers) soup = BeautifulSoup(web_data.content, 'lxml') for item in soup.select('#main &gt; div &gt; div.job-list &gt; ul &gt; li'): # 招聘要求 job_title = item.select('.job-title')[0].text # 岗位 salary = item.select('.red')[0].text # 薪资 person_info = item.select('.info-primary p')[0].text # 应聘要求 # 获取公司信息 company = item.select('.info-company h3 a')[0].text # 公司 company_info = item.select('.info-company p')[0].text # 公司信息 data = &#123; 'job_title': job_title, 'salary': salary, 'person_info': person_info, 'company': company, 'company_info': company_info, &#125; # 插入数据库 data_table.insert(data) print(data) print('*' * 100) print('\\n' * 5)if __name__ == '__main__': param_list = ['java', 'python'] table_list = [zhipin_java, zhipin_python] for param, table in zip(param_list, table_list): get_info(param, table)爬取的信息全部存在mongodb中。便于后面的分析处理数据清洗在数据处理这里定义了几个方法，用来处理相应的内容1.初始化变量12345678import pymongoclient = pymongo.MongoClient('localhost', 27017)zhipin = client['zhipin']zhipin_java = zhipin['zhipin_java']zhipin_python = zhipin['zhipin_python']from collections import Counterfrom pyecharts import Bar,Line,Pie2.获取地区分布情况123456789101112131415import redef get_zone(): ''' 获取地区''' zone_list = [] real_list = [] for item in zhipin_java.find(): text = item['person_info'][3:6] zone_list.append(text) for i in zone_list: j = re.sub(r' \\d-','',i) real_list.append(j) while '' in real_list: real_list.remove('') return real_listzone = dict(Counter(get_zone()))3.整理招聘数据123456789def del_key_1(): '''删除招聘次数为1的岗位''' li = [] for key in job_dict.keys(): if job_dict[key] == 1: li.append(key) for i in li: del job_dict[i] print(job_dict)4.整理薪水数据1234567891011def get_salary(): '''获取招聘的工资''' min_list = [] #起步工资 max_list = [] #最高工资 job_title = [] #岗位 for item in zhipin_java.find(): job_title.append(item['job_title']) salary = item['salary'] min_list.append(int(salary.split('-')[0][:-1])) max_list.append(int(salary.split('-')[1][:-1])) return min_list,max_list,job_title数据可视化地区分布通过整理地区分布数据,利用pyecharts作图1234bar = Bar(\"java和python岗位地区分布\")bar.add(\"java\", list(key for key in zone.keys()), list(value for value in zone.values()),mark_line=['min', 'max'], is_toolbox_show = True,is_more_utils=True)bar.add(\"python\", list(key for key in py_zone.keys()), list(value for value in py_zone.values()),mark_line=['min', 'max'], is_toolbox_show = True,is_more_utils=True)bar越靠近城市中心的地区，招聘的岗位就越多，成功应聘的机会较高；番禺和天河区相差较大，其中天河区招python比java将近多8倍；番禺区java比python更加热门，受公司青睐；其他区相差不大招聘最多的岗位python岗位：占比前五位分别是：python工程师数据分析师运维工程师大数据开发工程师游戏AI算法工程师java岗位对比高级的工程师招聘的人数较少，大部分都是在招聘初中级工程师，难道这就是传说中的“一个诸葛亮胜过三个臭皮匠 (:”公司对比python招聘公司java招聘公司最关心的钱途问题最高薪水看来python不是吹的，最高薪水也大多数都比java的高;java最高薪水平均19.24K，最低3K，最高50k；python最高薪水平均21.16K,最低3k，最高60k最低薪水python起步薪水大多数都比java的高;java平均起步薪水11.42K，python平均起步薪水12.08K两个岗位词云源码：https://github.com/stormdony/python_demoCSDN博客：https://blog.csdn.net/stormdony/article/details/825867351ps: 原创文章，转载请与作者联系","categories":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/tags/python/"}]},{"title":"hexo下yilia主题添加字数统计和阅读时长功能","slug":"hexo下yilia主题添加字数统计和阅读时长功能","date":"2018-09-09T07:56:34.000Z","updated":"2018-09-14T04:09:53.330Z","comments":true,"path":"archives/e9dc5279.html","link":"","permalink":"https://www.donlex.cn/archives/e9dc5279.html","excerpt":"1.安装 hexo-wordcount在博客目录下打开Git Bash Here 输入命令npm i –save hexo-wordcount","text":"1.安装 hexo-wordcount在博客目录下打开Git Bash Here 输入命令npm i –save hexo-wordcount2.文件配置在theme\\yilia\\layout\\_partial\\post下创建word.ejs文件：123456789101112131415161718&lt;div style=\"margin-top:10px;\"&gt; &lt;span class=\"post-time\"&gt; &lt;span class=\"post-meta-item-icon\"&gt; &lt;i class=\"fa fa-keyboard-o\"&gt;&lt;/i&gt; &lt;span class=\"post-meta-item-text\"&gt; 字数统计: &lt;/span&gt; &lt;span class=\"post-count\"&gt;&lt;%= wordcount(post.content) %&gt;字&lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=\"post-time\"&gt; &amp;nbsp; | &amp;nbsp; &lt;span class=\"post-meta-item-icon\"&gt; &lt;i class=\"fa fa-hourglass-half\"&gt;&lt;/i&gt; &lt;span class=\"post-meta-item-text\"&gt; 阅读时长: &lt;/span&gt; &lt;span class=\"post-count\"&gt;&lt;%= min2read(post.content) %&gt;分&lt;/span&gt; &lt;/span&gt; &lt;/span&gt;&lt;/div&gt;然后在 themes/yilia/layout/_partial/article.ejs中添加123456789101112131415&lt;div class=\"article-inner\"&gt; &lt;% if (post.link || post.title)&#123; %&gt; &lt;header class=\"article-header\"&gt; &lt;%- partial('post/title', &#123;class_name: 'article-title'&#125;) %&gt; &lt;% if (!post.noDate)&#123; %&gt; &lt;%- partial('post/date', &#123;class_name: 'archive-article-date', date_format: null&#125;) %&gt; &lt;!-- 需要添加的位置 --&gt; &lt;!-- 开始添加字数统计--&gt; &lt;% if(theme.word_count &amp;&amp; !post.no_word_count)&#123;%&gt; &lt;%- partial('post/word') %&gt; &lt;% &#125; %&gt; &lt;!-- 添加完成 --&gt; &lt;% &#125; %&gt; &lt;/header&gt;3. 开启功能在站点的_config.yml中添加下面代码123# 是否开启字数统计#不需要使用，直接设置值为false，或注释掉word_count: Trueps：原创文章，转载请注明出处","categories":[{"name":"yilia","slug":"yilia","permalink":"https://www.donlex.cn/categories/yilia/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.donlex.cn/tags/hexo/"},{"name":"yilia","slug":"yilia","permalink":"https://www.donlex.cn/tags/yilia/"}]},{"title":"hexo添加和取消live2d看板动画","slug":"hexo添加和取消live2d看板动画","date":"2018-09-09T06:31:09.000Z","updated":"2018-09-14T04:09:53.333Z","comments":true,"path":"archives/14d1161.html","link":"","permalink":"https://www.donlex.cn/archives/14d1161.html","excerpt":"添加看板娘在博客目录下安装依赖npm install –save hexo-helper-live2d","text":"添加看板娘在博客目录下安装依赖npm install –save hexo-helper-live2d在主题下的_config.yml的配置信息Hexo的 _config.yml 文件添加配置.示例:12345678910111213141516live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false debug: false model: use: live2d-widget-model-wanko display: position: right width: 150 height: 300 mobile: show: false使用其他的模型，需要先安装模型,在修改配置信息中的use查看模型：https://github.com/xiazeyu/live2d-widget-models截图预览：https://huaji8.top/post/live2d-plugin-2.0/安装模型npm install 模型的包名具体可以查看官方文档：https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md取消看板娘直接运行下面的命令npm uninstall hexo-helper-live2d去掉站点_config.yml下的配置信息即可ps：原创文章，转载请注明出处","categories":[{"name":"yilia","slug":"yilia","permalink":"https://www.donlex.cn/categories/yilia/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.donlex.cn/tags/hexo/"},{"name":"yilia","slug":"yilia","permalink":"https://www.donlex.cn/tags/yilia/"}]},{"title":"单选题：安全和便捷，你选哪一个？","slug":"单选题：安全和便捷，你选哪一个？","date":"2018-09-07T11:07:04.000Z","updated":"2018-09-14T04:09:53.337Z","comments":true,"path":"archives/4ec71def.html","link":"","permalink":"https://www.donlex.cn/archives/4ec71def.html","excerpt":"前段时间的滴滴杀人案可谓是闹得满城风雨，但还是禁不住时间这把杀猪刀，人们的眼球又被“东哥”的案子给吸引过去了。虽然吃瓜看戏不错，但是也要关注一下关乎自身利益的问题。","text":"前段时间的滴滴杀人案可谓是闹得满城风雨，但还是禁不住时间这把杀猪刀，人们的眼球又被“东哥”的案子给吸引过去了。虽然吃瓜看戏不错，但是也要关注一下关乎自身利益的问题。9月4日晚，滴滴出行宣布将于2018年9月4日启动安全大整治，2018年9月8日23点至9月15日凌晨5点期间在中国大陆地区暂停提供深夜23：00-5：00时间段的网约车。这一措施一旦实行，将会在出行和安全方面带来怎样的变化？首先很多加班族和夜猫子可能会心慌的一批。深夜刚加完班，公交、地铁都停了，只能在路边使劲摇胳膊喊“师傅”，本来上班的压力就山大了，现在可能还要体验一把抢车风波；而蹦迪的、买醉的还有撸串的出行难度也会增加，最后可能会放弃，选择宅起来。1.出行成本相对于出租,虽然滴滴价格并没有低太多,但还是便宜一些。并且网约车的接单机制与出租车或者其他的出行方式的不一样。网约车可以自己设定时间，更加迁就自己，不必浪费时间在等车上；而其他的方式则有一定的时间随机性。在时间成本上，网约车的消耗成本就低了很多。另外在网约车的市场上，滴滴占了63%的市场份额。而停止深夜服务则会更加加剧出行选择的稀缺性。“物以稀为贵”的道理大家都明白。这样可能不仅是时间和金钱成本上的的增加了。2.安全 | 便捷滴滴的几次用户遇害案件，使得乘客的警惕意识加强，同时也让社会对网约车的有了防备。很多人虽然也对先前发生的事情义愤填膺，但是经受不了站街摇手苦等，于是会想，滴滴用户量那么大，遭遇不幸的事情总不会落到我头上吧，并且滴滴还上线了“一键报警”功能…虽然想象很美好，但是在整改的成效没有体现出来之前，安全和便捷不能同时满足。而滴滴的做法意思就很明显了。我们也只能牺牲便捷来换取安全保障的提高了。3.用户心理网约车跟私人订制类似，而出租和其他的出行方式是面向大众的。这一区别使得用户的体验感不一样，一个是消费者是上帝（真实是不是这样就另说了），另一个则体现不出个人的与众不同。最后试问一句：如果没有安全方面的问题，你愿意在路边苦等出租，还是使用滴滴这样的定制服务？？ps：纯属个人看法，有不成熟之处请谅解！！","categories":[{"name":"随笔","slug":"随笔","permalink":"https://www.donlex.cn/categories/随笔/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://www.donlex.cn/tags/随笔/"}]},{"title":"爬虫利器-cURL转换","slug":"爬虫利器-cURL转换","date":"2018-09-06T02:56:02.000Z","updated":"2018-09-27T08:21:16.302Z","comments":true,"path":"archives/fd7c0b75.html","link":"","permalink":"https://www.donlex.cn/archives/fd7c0b75.html","excerpt":"前言在爬虫的过程，经常需要为程序添加请求头，参数，cookie等信息，但是这些信息的添加都需要手动的去浏览器中找，然后一点一点的慢慢复制粘贴，这样效率就非常的低了。今天就分享一个网站，解决这些问题，让你脱离这些没有意义的劳动","text":"前言在爬虫的过程，经常需要为程序添加请求头，参数，cookie等信息，但是这些信息的添加都需要手动的去浏览器中找，然后一点一点的慢慢复制粘贴，这样效率就非常的低了。今天就分享一个网站，解决这些问题，让你脱离这些没有意义的劳动网站介绍网址: https://curl.trillworks.com从上图可以看到网站的教程，只要根据教程三步走，就可以快速的添加相应的请求信息示范将需要爬取的请求复制curl到网站中转换，然后复制到pycharm中就可以直接爬取到整个网站的源码了，接下来就可以直接在这个基础上开始逻辑工作了生成的代码：123456789101112131415161718192021222324import requestscookies = &#123; '_octo': 'GH1.1.681056136.1509806877', '_gat': '1', 'logged_in': 'no', '_ga': 'GA1.2.70269906.1509806877', 'tz': 'Asia%2FShanghai', 'has_recent_activity': '1', '_gh_sess': 'cGpmdExmZUZpckZ0R1pSQlFxZlpsS2ZvT3NZbUU0YW1qTVloSzdFeWNxeWdNaGxsNzVveTJ3Vndrc2ZaN3ZoRDNYMm10TW9OdUdGVHhwbVRmMEU3ZWVwTUx4dUpZTUgrbHdKZkV0RnpzN3hodG12TGdLbHpSemVaQ0ZMM201MGdxMlkxdk5JNUZ6em1SWGp5ZEJUYTNQMjRFcCtqUDZaWVVFNXl3VDJRRUU4MFpqYkpvekY1VmZpY2t1R01ZcGRPQlZBUEJUOTJaWnNESjVnMnlkcncyWWhCVDl1OE5aVDhpR2Z4Z1NYVkFVNk5ReDRtTVphOXFXQWJNSVZYcnEyVktLTERLMHBTYjNwa2tUQUJaaWREQ0N4NzJYTG9sM1dpUktPaWFETFVpWGZlWFNvb2ZxazU1OUxMazVjZ3VNNTJteEdENzJPQlFKeDV3YXZCbmdHSGdGVmx5OVNjU2VaZXh3eEVwSlptczZXV3lQZXgrOGEyVGFwcUpPcFhIZTRWaDIwZExMRWhDRE8yMUdJT2xmS1grQ3I3bEYySGJvWFhNTFR3VmNpRnlLTT0tLXlRMmJZanl4Z0tUU0c0N1ZrRHpqbkE9PQ%3D%3D--1899440138004359a97b156d0ac8941135684ab5',&#125;headers = &#123; 'Accept-Encoding': 'gzip, deflate, sdch', 'Accept-Language': 'zh-CN,zh;q=0.8', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8', 'Referer': 'https://ghbtns.com/github-btn.html?user=NickCarneiro&amp;repo=curlconverter&amp;type=watch&amp;count=true&amp;size=large', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0',&#125;response = requests.get('https://github.com/NickCarneiro/curlconverter/', headers=headers, cookies=cookies)可以看到生成的代码非常的规整，是不是很方便~~","categories":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.donlex.cn/tags/python/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-09-05T02:26:45.363Z","updated":"2018-09-27T04:02:16.192Z","comments":true,"path":"archives/4a17b156.html","link":"","permalink":"https://www.donlex.cn/archives/4a17b156.html","excerpt":"Welcome to DonLex’s blog. This blog has just been established, so here is few pages, it will be improved gradually.If you have any problems, you can send E-mail to donlex@qq.com","text":"Welcome to DonLex’s blog. This blog has just been established, so here is few pages, it will be improved gradually.If you have any problems, you can send E-mail to donlex@qq.com","categories":[],"tags":[]}]}