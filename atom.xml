<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Don Lex</title>
  
  <subtitle>身体和灵魂总要有一个在路上</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.donlex.cn/"/>
  <updated>2018-10-09T04:06:26.246Z</updated>
  <id>https://www.donlex.cn/</id>
  
  <author>
    <name>Don Lex</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决不蒜子统计不可用问题</title>
    <link href="https://www.donlex.cn/archives/8f7c4fe6.html"/>
    <id>https://www.donlex.cn/archives/8f7c4fe6.html</id>
    <published>2018-10-09T03:30:44.000Z</published>
    <updated>2018-10-09T04:06:26.246Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>10月份开始引用不蒜子作为静态网站的博客的统计功能都无法显示了，刚开始我还以为是网络原因，无法响应导致的。但是上<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a>的官网看了一下，才知道，原来<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a>的域名更改了，导致<code>script</code>引用不了，从而无法进行统计。</p><div id="aplayer-JeXLAuJQ" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"><pre class="aplayer-lrc-content">[00:00.780]멈춘 시간 속[00:03.220]잠든 너를 찾아가[00:05.430]아무리 막아도[00:07.440]결국 너의 곁인 걸[00:09.970]길고 긴 여행을 끝내[00:12.890]이젠 돌아가[00:15.060]너라는 집으로[00:17.310]지금 다시[00:18.310]way back home[00:40.140]아무리 힘껏 닫아도[00:42.510]다시 열린 서랍 같아[00:44.840]하늘로 높이 날린 넌[00:47.340]자꾸 내게 되돌아와[00:49.700]힘들게 삼킨 이별도[00:52.210]다 그대로인 걸[00:54.260]oh oh oh[00:57.710]수없이 떠난 길 위에서[01:00.550]난 너를 발견하고[01:02.810]비우려 했던 맘은 또[01:05.350]이렇게 너로 차올라[01:07.850]발걸음의 끝에[01:10.250]늘 니가 부딪혀[01:12.550]그만[01:14.940]그만[01:17.560]멈춘 시간 속[01:19.500]잠든 너를 찾아가[01:22.230]아무리 막아도[01:24.210]결국 너의 곁인 걸[01:26.660]길고 긴 여행을 끝내[01:29.690]이젠 돌아가[01:31.870]너라는 집으로[01:33.740]지금 다시[01:34.900]way back home[01:55.250]조용히 잠든 방을 열어[01:58.070]기억을 꺼내 들어[02:00.410]부서진 시간 위에서[02:02.680]선명히 너는 떠올라[02:05.300]길 잃은 맘 속에[02:07.710]널 가둔 채 살아[02:10.100]그만[02:12.530]그만[02:15.200]멈춘 시간 속[02:17.260]잠든 너를 찾아가[02:19.770]아무리 막아도[02:21.820]결국 너의 곁인 걸[02:24.220]길고 긴 여행을 끝내[02:27.220]이젠 돌아가[02:29.330]너라는 집으로[02:31.260]지금 다시[02:32.480]way back home[02:34.750]세상을 뒤집어[02:37.090]찾으려 해[02:39.660]오직 너로 완결된[02:41.940]이야기를[02:45.010]모든 걸 잃어도[02:49.580]난 너 하나면 돼[03:02.720]빛이 다 꺼진 여기[03:05.610]나를 안아줘[03:13.150]눈을 감으면[03:14.520]소리 없이 밀려와[03:17.440]이 마음 그 위로[03:19.390]넌 또 한 겹 쌓여가[03:21.880]내겐 그 누구도 아닌[03:24.740]니가 필요해[03:27.070]돌아와 내 곁에[03:29.340]그날까지[03:30.380]I’m not done</pre></div><script>var ap = new APlayer({element: document.getElementById("aplayer-JeXLAuJQ"),narrow: false,autoplay: false,showlrc: 2,music: {title: "*Way Back Home*",author: "[SHAUN](https://music.163.com/artist?id=1150188)",url: "//music.163.com/song/media/outer/url?id=863046037.mp3",pic: "//p1.music.126.net/MAkLvm2p9LE0mWLEr2NkMA==/109951163378634466.jpg?param=130y130",}});window.aplayers || (window.aplayers = []);window.aplayers.push(ap);</script><a id="more"></a><p>下面是不蒜子的官方公告：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">大家好，因七牛强制过期原有的『dn-lbstatics.qbox.me』域名（预计2018年10月初），与客服沟通数次无果，即使我提出为此付费也不行，只能更换域名到『busuanzi.ibruce.info』！因我是最早的一批七牛用户，为七牛至少带来了数百个邀请用户，很痛心，很无奈！</span><br><span class="line">各位继续使用不蒜子提供的服务，只需把原有的：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">域名改一下即可：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">只需要修改该js域名，其他均未改变。若有疑问，可以加入不蒜子交流QQ群：`419260983`，对您带来的不便，非常抱歉！！！还是那句话，不蒜子不会中断服务！！！！</span><br></pre></td></tr></table></figure><p>因此，想要继续使用不蒜子功能，只能修改NexT的配置了。</p><p>只需要将 <strong>..\next\layout_third-party\analytics</strong>下的 <strong>busuanzi-counter.swig</strong>修改成不蒜子新的域名就可以正常显示了</p><p>例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将上面的代码替换成下面的代码即可：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;10月份开始引用不蒜子作为静态网站的博客的统计功能都无法显示了，刚开始我还以为是网络原因，无法响应导致的。但是上&lt;a href=&quot;http://busuanzi.ibruce.info/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;不蒜子&lt;/a&gt;的官网看了一下，才知道，原来&lt;a href=&quot;http://busuanzi.ibruce.info/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;不蒜子&lt;/a&gt;的域名更改了，导致&lt;code&gt;script&lt;/code&gt;引用不了，从而无法进行统计。&lt;/p&gt;
&lt;div id=&quot;aplayer-JeXLAuJQ&quot; class=&quot;aplayer aplayer-tag-marker&quot; style=&quot;margin-bottom: 20px;&quot;&gt;
				&lt;pre class=&quot;aplayer-lrc-content&quot;&gt;[00:00.780]멈춘 시간 속
[00:03.220]잠든 너를 찾아가
[00:05.430]아무리 막아도
[00:07.440]결국 너의 곁인 걸
[00:09.970]길고 긴 여행을 끝내
[00:12.890]이젠 돌아가
[00:15.060]너라는 집으로
[00:17.310]지금 다시
[00:18.310]way back home
[00:40.140]아무리 힘껏 닫아도
[00:42.510]다시 열린 서랍 같아
[00:44.840]하늘로 높이 날린 넌
[00:47.340]자꾸 내게 되돌아와
[00:49.700]힘들게 삼킨 이별도
[00:52.210]다 그대로인 걸
[00:54.260]oh oh oh
[00:57.710]수없이 떠난 길 위에서
[01:00.550]난 너를 발견하고
[01:02.810]비우려 했던 맘은 또
[01:05.350]이렇게 너로 차올라
[01:07.850]발걸음의 끝에
[01:10.250]늘 니가 부딪혀
[01:12.550]그만
[01:14.940]그만
[01:17.560]멈춘 시간 속
[01:19.500]잠든 너를 찾아가
[01:22.230]아무리 막아도
[01:24.210]결국 너의 곁인 걸
[01:26.660]길고 긴 여행을 끝내
[01:29.690]이젠 돌아가
[01:31.870]너라는 집으로
[01:33.740]지금 다시
[01:34.900]way back home
[01:55.250]조용히 잠든 방을 열어
[01:58.070]기억을 꺼내 들어
[02:00.410]부서진 시간 위에서
[02:02.680]선명히 너는 떠올라
[02:05.300]길 잃은 맘 속에
[02:07.710]널 가둔 채 살아
[02:10.100]그만
[02:12.530]그만
[02:15.200]멈춘 시간 속
[02:17.260]잠든 너를 찾아가
[02:19.770]아무리 막아도
[02:21.820]결국 너의 곁인 걸
[02:24.220]길고 긴 여행을 끝내
[02:27.220]이젠 돌아가
[02:29.330]너라는 집으로
[02:31.260]지금 다시
[02:32.480]way back home
[02:34.750]세상을 뒤집어
[02:37.090]찾으려 해
[02:39.660]오직 너로 완결된
[02:41.940]이야기를
[02:45.010]모든 걸 잃어도
[02:49.580]난 너 하나면 돼
[03:02.720]빛이 다 꺼진 여기
[03:05.610]나를 안아줘
[03:13.150]눈을 감으면
[03:14.520]소리 없이 밀려와
[03:17.440]이 마음 그 위로
[03:19.390]넌 또 한 겹 쌓여가
[03:21.880]내겐 그 누구도 아닌
[03:24.740]니가 필요해
[03:27.070]돌아와 내 곁에
[03:29.340]그날까지
[03:30.380]I’m not done&lt;/pre&gt;
			&lt;/div&gt;
			&lt;script&gt;
				var ap = new APlayer({
					element: document.getElementById(&quot;aplayer-JeXLAuJQ&quot;),
					narrow: false,
					autoplay: false,
					showlrc: 2,
					music: {
						title: &quot;*Way Back Home*&quot;,
						author: &quot;[SHAUN](https://music.163.com/artist?id=1150188)&quot;,
						url: &quot;//music.163.com/song/media/outer/url?id=863046037.mp3&quot;,
						pic: &quot;//p1.music.126.net/MAkLvm2p9LE0mWLEr2NkMA==/109951163378634466.jpg?param=130y130&quot;,
					}
				});
				window.aplayers || (window.aplayers = []);
				window.aplayers.push(ap);
			&lt;/script&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://www.donlex.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.donlex.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>解除Dr.com的WiFi限制，开启热点</title>
    <link href="https://www.donlex.cn/archives/adea6c28.html"/>
    <id>https://www.donlex.cn/archives/adea6c28.html</id>
    <published>2018-10-09T02:55:53.000Z</published>
    <updated>2018-10-09T03:28:40.572Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>现在国内大部分高校都使用了宽带上网认证，有一些比较严格的客户端还会禁止开启WiFi共享。作为8102年的新人类，怎么能没有WiFi这一必需品呢？</p><p>下面就来记录一下，在Dr.com客户端下破解共享限制的功能，实现WiFi共享上网冲浪。</p><a id="more"></a><h3 id="解除WiFi限制"><a href="#解除WiFi限制" class="headerlink" title="解除WiFi限制"></a>解除WiFi限制</h3><p>在校园网中使用Dr.com连接的用户，如果检测到存在共享行为，就会迫使账户下线；所以为了能够解除WiFi限制，需要安装一个插件才可以使Dr.com客户端跳过检测WiFi共享的行为。</p><p> <a href="https://download.csdn.net/download/stormdony/10707210" target="_blank" rel="noopener">破解WiFi限制，点击下载插件</a></p><p>下载工具包之后，直接运行该软件，然后点击 <strong>破解Dr.com</strong> 即可，破解WiFi限制；</p><p><img src="https://i.loli.net/2018/10/09/5bbc159d17bc9.png" alt="wifi破解"></p><p>破解后校园网可以随意使用猎豹WiFi、360随身wifi共享网络，也能使用win10自带的热点功能建立热点。</p><blockquote><p>如果是使用猎豹WiFi开启热点的话，手机挂<del>VP(屁)N(恩)</del>是翻不过去的。但是如果是Win10自带的工具，就可以科学上网。具体原因尚未找到 :(</p></blockquote><h3 id="使用命令开启WiFi"><a href="#使用命令开启WiFi" class="headerlink" title="使用命令开启WiFi"></a>使用命令开启WiFi</h3><ol><li><p>首先开启wifi需要管理员权限，所以在开始菜单搜索cmd或组合键<code>win+r</code>，右键以管理员身份运行。</p></li><li><p>输入<code>netsh wlan set hostednetwork mode=allow</code> 回车，把承载网络模式设置为允许</p></li><li><p>输入<code>netsh wlan set hostednetwork ssid=无线网络的名称 key=您想要设置的密码</code></p><blockquote><p>名称跟密码直接写就行，不用双引号什么的<br> ssid跟key用空格隔开<br> 密码必须8位以上</p></blockquote></li><li><p>输入<code>netsh wlan start hostednetwork</code><br>回车开启wifi</p></li><li><p>这时候虽然开启了wifi，但是还是这时候还是无互联网连接的，所以需要有网络的网络连接共享给它</p></li><li><p>进入<strong>控制面板\所有控制面板项\网络和共享中心</strong>选择已经连接上互联网的网络，设置允许其他用户共享网络；具体步骤参考下图</p><p><img src="https://i.loli.net/2018/10/09/5bbc15d2e9f52.png" alt="Dr.com_win10"></p></li></ol><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除共享网络</span></span><br><span class="line">netsh wlan <span class="built_in">set</span> hostednetwork mode=disallow</span><br><span class="line"><span class="comment"># 查看共享网络信息---蹭网信息</span></span><br><span class="line">netsh wlan show hostednetwork</span><br></pre></td></tr></table></figure><p>如果想要更加方便一点，可以把这些命令做成<em>bat文件</em>   </p><p>新建文本保存以上代码，然后把文本文件以改成<code>bat</code>后缀。双击运行就可以了</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;现在国内大部分高校都使用了宽带上网认证，有一些比较严格的客户端还会禁止开启WiFi共享。作为8102年的新人类，怎么能没有WiFi这一必需品呢？&lt;/p&gt;
&lt;p&gt;下面就来记录一下，在Dr.com客户端下破解共享限制的功能，实现WiFi共享上网冲浪。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Dr.com" scheme="https://www.donlex.cn/tags/Dr-com/"/>
    
      <category term="校园网" scheme="https://www.donlex.cn/tags/%E6%A0%A1%E5%9B%AD%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>To be happier</title>
    <link href="https://www.donlex.cn/archives/35de7772.html"/>
    <id>https://www.donlex.cn/archives/35de7772.html</id>
    <published>2018-10-01T13:06:47.000Z</published>
    <updated>2018-10-01T14:42:54.208Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"video":{"url":"//gss3.baidu.com/6LZ0ej3k1Qd3ote6lo7D0j9wehsv/tieba-smallvideo-transcode/10839346_255b960c73ccfcbd2602d6188e9089d4_0.mp4"},"danmaku":{"id":"b498e2397a2e40fafa94eea866e123861a02e6c779b3b84ef5dde735e9252cfa68a6b54b78b523962cd772b8989df2","api":"//api.prprpr.me/dplayer/"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><a id="more"></a><p>今天在逛油管的时候，发现了这个有点小感人、心酸的短视频。<br>第一次看的时候没有看懂，后来多看几遍之后，才慢慢有一种代入感。</p><p>谁的生活都有低谷和困难的时候，如果一直沉浸在悲伤中，无法走出，那就只能停留在低谷，无法看到更高处的美丽风景；在低谷时，更要保持乐观的心态，无论多艰难都要咬着牙坚持下去，胜利就在下一刻。加油！！！<i class="fa fa-smile-o" aria-hidden="true" style="color:#000"></i></p><p>视频的发布者留言：<i class="fa fa-quote-left" aria-hidden="true"></i>当<code>@bastilledan</code>第一次让我更快乐的时候，我被带回去了。你能在歌词中感受到的情感是疯狂的。当我越来越多地听这首歌时，它让我想起了我生命中经历过的许多事情。最近我失去了我最好的朋友，我的伴侣，我的终身朋友。我想要这个视频拥抱我们失去或牺牲的痛苦以及随之而来的伤痛。我希望这首歌和这段视频能让你在任何情况下都能得到解脱，让我们都更快乐。<i class="fa fa-quote-right" aria-hidden="true"></i></p><p>ps: 由于优酷的外链不能禁止自动播放，为了用户体验，只能换百度贴吧的链接，可能清晰度有点低，能看就好~~</p>]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;dplayer0&quot; class=&quot;dplayer hexo-tag-dplayer-mark&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;&lt;script&gt;(function(){var player = new DPlayer({&quot;container&quot;:document.getElementById(&quot;dplayer0&quot;),&quot;video&quot;:{&quot;url&quot;:&quot;//gss3.baidu.com/6LZ0ej3k1Qd3ote6lo7D0j9wehsv/tieba-smallvideo-transcode/10839346_255b960c73ccfcbd2602d6188e9089d4_0.mp4&quot;},&quot;danmaku&quot;:{&quot;id&quot;:&quot;b498e2397a2e40fafa94eea866e123861a02e6c779b3b84ef5dde735e9252cfa68a6b54b78b523962cd772b8989df2&quot;,&quot;api&quot;:&quot;//api.prprpr.me/dplayer/&quot;}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()&lt;/script&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://www.donlex.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://www.donlex.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>NexT填坑-样式无法加载</title>
    <link href="https://www.donlex.cn/archives/ddf26aa7.html"/>
    <id>https://www.donlex.cn/archives/ddf26aa7.html</id>
    <published>2018-09-29T06:07:45.000Z</published>
    <updated>2018-09-29T06:27:52.779Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p style="text-align:center;size:16px;font-weight:500">The sun always comes after the rain</p><br><a id="more"></a><br><img src="//i.loli.net/2018/09/29/5baf14de65774.jpg"><br>自从启用了<i class="fa fa-lock" aria-hidden="true" style="color:green"></i> https之后，有一些资源文件加载导致网站提示不安全，从而绿锁丢失。<br>百度了一番后，用meta升级HTTP请求的方法，在<code>.\themes\next\layout\_partials\head.swing</code>中添加了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=”Content-Security-Policy” content=”upgrade-insecure-requests”/&gt;</span><br></pre></td></tr></table></figure><p></p><p>部署上去之后，本来以为可以完美解决。但是到想添加插件更新博文的时候，本地部署测试，发现样式无法加载</p><p>搞了一个晚上，最后才发现就是添加了上面的那个代码才导致的这个问题。</p><p>把上面的代码去掉之后就可以，解决样式加载不了的问题</p><p>如果想引用<code>http</code>资源可以使用<strong>相对协议</strong>的方法,帮助你实现当网站引入的都是 http 资源，网站域名更换为 https 后的无缝切换。</p><p>具体使用方法为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"//domain.com/img/logo.png"</span>&gt;</span><br></pre></td></tr></table></figure><p>简而言之，就是将URL的协议（http、https）去掉，只保留//及后面的内容。这样，在使用https的网站中，浏览器会通过https请求URL，否则就通过http发送请求。</p><blockquote><p>附注：如果是浏览本地文件，浏览器通过file://协议发送请求，导致请求失败，因此本地测试最好是搭建一个本地服务器。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align:center;size:16px;font-weight:500&quot;&gt;The sun always comes after the rain&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
      <category term="NexT" scheme="https://www.donlex.cn/categories/NexT/"/>
    
    
      <category term="NexT" scheme="https://www.donlex.cn/tags/NexT/"/>
    
      <category term="hexo" scheme="https://www.donlex.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>NexT主题添加音乐</title>
    <link href="https://www.donlex.cn/archives/bda67445.html"/>
    <id>https://www.donlex.cn/archives/bda67445.html</id>
    <published>2018-09-24T06:20:37.000Z</published>
    <updated>2018-09-28T05:00:48.117Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="NexT主题添加音乐"><a href="#NexT主题添加音乐" class="headerlink" title="NexT主题添加音乐"></a>NexT主题添加音乐</h3><p>在Hexo博客中添加音乐，有三种方式可以插入音乐</p><p>因为启用了<i class="fa fa-lock" style="color:green"></i> https，引用网易云的音乐会提示网站不安全，现在这个问题还没有解决，所以就不预览效果了</p><a id="more"></a><h4 id="一、使用html标签"><a href="#一、使用html标签" class="headerlink" title="一、使用html标签"></a>一、使用html标签</h4><p>写法如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"https://什么什么什么.mp3"</span> <span class="attr">style</span>=<span class="string">"max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;"</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">loop</span>=<span class="string">"loop"</span> <span class="attr">preload</span>=<span class="string">"meta"</span>&gt;</span>Your browser does not support the audio tag.<span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="二、使用网易云外链"><a href="#二、使用网易云外链" class="headerlink" title="二、使用网易云外链"></a>二、使用网易云外链</h4><p>网易云音乐的外链很好用，不仅有可以单曲，还能有歌单，有兴趣的自己去网易云音乐找首歌尝试。但是有一些音乐因为版权原因放不了，还有就是不完全支持 https，导致小绿锁不见了。</p><h5 id="网易云歌曲外链接获取方法"><a href="#网易云歌曲外链接获取方法" class="headerlink" title="网易云歌曲外链接获取方法"></a>网易云歌曲外链接获取方法</h5><p>首先 找到你要下载的歌曲 用网页版打开 复制链接中的歌曲ID 如：<br><code>SHAUN</code> - <code>Way Back Home</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://music.163.com/<span class="comment">#/song?id=863046037</span></span><br></pre></td></tr></table></figure></p><p>ID就是<code>863046037</code><br>然后将ID替换到下面的链接中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://music.163.com/song/media/outer/url?id= .mp3</span><br></pre></td></tr></table></figure></p><p>如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://music.163.com/song/media/outer/url?id=863046037.mp3</span><br></pre></td></tr></table></figure></p><h4 id="三、安装插件"><a href="#三、安装插件" class="headerlink" title="三、安装插件"></a>三、安装插件</h4><p>安装插件可以完美的解决上面的问题，并且用插件，有显示歌词功能，也美观，建议使用这种方法。</p><h5 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h5><p>首先在<code>站点文件夹根目录</code>安装插件：</p><p>所在目录：<code>~/blog/</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer --save</span><br></pre></td></tr></table></figure></p><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><h6 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h6><p>在文章中的写法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure></p><p><strong>标签参数</strong></p><ul><li>title : 曲目标题</li><li>author: 曲目作者</li><li>url: 音乐文件 URL 地址</li><li>picture_url: (可选) 音乐对应的图片地址</li><li>narrow: （可选）播放器袖珍风格</li><li>autoplay: (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li>width:xxx:(可选) 播放器宽度(默认: 100%)</li><li>lrc:xxx: (可选）歌词文件 URL 地址</li></ul><p><strong>实例</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer <span class="string">"歌曲名"</span> <span class="string">"歌手名"</span> <span class="string">"https://什么什么什么.mp3"</span> <span class="string">"https://封面图.jpg"</span> <span class="string">"lrc:https://歌词.lrc"</span> %&#125;</span><br></pre></td></tr></table></figure></p><h6 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h6><p>除了使用标签 <code>lrc</code> 选项来设定歌词，你也可以直接使用 <code>aplayerlrc</code> 标签来直接插入歌词文本在博客中：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlrc <span class="string">"title"</span> <span class="string">"author"</span> <span class="string">"url"</span> <span class="string">"封面(选填)"</span> <span class="string">"autoplay"</span> %&#125;</span><br><span class="line">[<span class="number">00</span>:<span class="number">00.00</span>]lrc here</span><br><span class="line">&#123;% endaplayerlrc %&#125;</span><br></pre></td></tr></table></figure></p><p>更多详细使用方法参考文档：<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md" target="_blank" rel="noopener">hexo-tag-aplayer</a></p><h6 id="获取歌词"><a href="#获取歌词" class="headerlink" title="获取歌词"></a>获取歌词</h6><p>歌词的获取，可以直接找到各层次文件，或者可以直接在网易云上通过以下方法获取<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://music.163.com/api/song/media?id=863046037</span><br></pre></td></tr></table></figure></p><p>其中id为网易云歌曲的id，打开链接之后，可以把”lyric”字段的值复制下来，再删除<code>\n</code>就可以直接放到<code>aplayerlrc</code>标签中了，这样就可以有歌词出现</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;NexT主题添加音乐&quot;&gt;&lt;a href=&quot;#NexT主题添加音乐&quot; class=&quot;headerlink&quot; title=&quot;NexT主题添加音乐&quot;&gt;&lt;/a&gt;NexT主题添加音乐&lt;/h3&gt;&lt;p&gt;在Hexo博客中添加音乐，有三种方式可以插入音乐&lt;/p&gt;
&lt;p&gt;因为启用了&lt;i class=&quot;fa fa-lock&quot; style=&quot;color:green&quot;&gt;&lt;/i&gt; https，引用网易云的音乐会提示网站不安全，现在这个问题还没有解决，所以就不预览效果了&lt;/p&gt;
    
    </summary>
    
      <category term="NexT" scheme="https://www.donlex.cn/categories/NexT/"/>
    
      <category term="hexo" scheme="https://www.donlex.cn/categories/NexT/hexo/"/>
    
    
      <category term="NexT" scheme="https://www.donlex.cn/tags/NexT/"/>
    
      <category term="hexo" scheme="https://www.donlex.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>[leetcode02]9-回文数</title>
    <link href="https://www.donlex.cn/archives/4644f3b9.html"/>
    <id>https://www.donlex.cn/archives/4644f3b9.html</id>
    <published>2018-09-22T12:08:16.000Z</published>
    <updated>2018-09-22T13:18:41.310Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>第9题：回文数</p><p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序(从右向左)读都是一样的整数。<br><a id="more"></a><br>示例 1:</p><blockquote><p>输入: 121<br>输出: true</p></blockquote><p>示例 2:</p><blockquote><p>输入: -121<br>输出: false</p></blockquote><p>解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</p><p>示例 3:</p><blockquote><p>输入: 10<br>输出: false</p></blockquote><p>解释: 从右向左读, 为 01 。因此它不是一个回文数。</p><p>进阶:<br>你能不将整数转为字符串来解决这个问题吗？</p><h3 id="思路-amp-实现"><a href="#思路-amp-实现" class="headerlink" title="思路&amp;实现"></a>思路&amp;实现</h3><p>思路：先取出各个数字变成list，再翻转；然后判断新的list与原来的是否一致<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        先取出各个数字组成list，再翻转</span></span><br><span class="line"><span class="string">        :type x: int</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        li = []</span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">while</span> x != <span class="number">0</span>:</span><br><span class="line">                li.append(x % <span class="number">10</span>)</span><br><span class="line">                x = int(x / <span class="number">10</span>)</span><br><span class="line">            <span class="keyword">return</span> list(reversed(li)) == li</span><br></pre></td></tr></table></figure></p><h3 id="官方解释"><a href="#官方解释" class="headerlink" title="官方解释"></a>官方解释</h3><p>首先，我们应该处理一些临界情况。所有负数都不可能是回文，例如：-123 不是回文，因为 - 不等于 3。所以我们可以对所有负数返回 false。</p><p>现在，让我们来考虑如何反转后半部分的数字。 对于数字 1221，如果执行 1221 % 10，我们将得到最后一位数字 1，要得到倒数第二位数字，<br>我们可以先通过除以 10 把最后一位数字从 1221 中移除，1221 / 10 = 122，再求出上一步结果除以10的余数，122 % 10 = 2，<br>就可以得到倒数第二位数字。<br>如果我们把最后一位数字乘以10，再加上倒数第二位数字，1 * 10 + 2 = 12，<br>就得到了我们想要的反转后的数字。 如果继续这个过程，我们将得到更多位数的反转数字。</p><p>现在的问题是，我们如何知道反转数字的位数已经达到原始数字位数的一半？</p><p>我们将原始数字除以 10，然后给反转后的数字乘上 10，所以，当原始数字小于反转后的数字时，就意味着我们已经处理了一半位数的数字。</p><h4 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h4><p>时间复杂度：O(\log_{10}(n))O(log 10    (n))， 对于每次迭代，我们会将输入除以10，因此时间复杂度为 O(\log_{10}(n))O(log10(n))。<br>空间复杂度：O(1)O(1)。</p><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><p>根据官方的解释，我试着实现了一下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gaunfang</span><span class="params">(self, x)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    用时：400ms</span></span><br><span class="line"><span class="string">    :param x:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    temp_x = x</span><br><span class="line">    y = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> temp_x != <span class="number">0</span>:</span><br><span class="line">        y = y * <span class="number">10</span> + temp_x % <span class="number">10</span></span><br><span class="line">        temp_x = int(temp_x / <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">return</span> y == x</span><br></pre></td></tr></table></figure></p><h3 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reversed_str</span><span class="params">(self, x)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    翻转字符串</span></span><br><span class="line"><span class="string">    用时：446ms</span></span><br><span class="line"><span class="string">    :param x:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">if</span> str(x) == str(x)[::<span class="number">-1</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br></pre></td></tr></table></figure><p>这个方法主要是采用了字符串截取的方法，从最后逐位翻转，在判断。</p><h3 id="题目难度"><a href="#题目难度" class="headerlink" title="题目难度"></a>题目难度</h3><p>难度：简单<i class="fa fa-star"> </i><i class="fa fa-star-o"> </i><i class="fa fa-star-o"> </i><i class="fa fa-star-o"> </i><i class="fa fa-star-o"> </i></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这道题的算法难度不大，实现起来简单，但是没有想到的是，python的实现方法会是如此的简洁。看来，还是的多接触一下优秀的代码，增长一下自己的见识才行！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;第9题：回文数&lt;/p&gt;
&lt;p&gt;判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序(从右向左)读都是一样的整数。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://www.donlex.cn/categories/python/"/>
    
      <category term="算法" scheme="https://www.donlex.cn/categories/python/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="https://www.donlex.cn/categories/python/%E7%AE%97%E6%B3%95/LeetCode/"/>
    
    
      <category term="python" scheme="https://www.donlex.cn/tags/python/"/>
    
      <category term="算法" scheme="https://www.donlex.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="https://www.donlex.cn/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>NexT建站历程</title>
    <link href="https://www.donlex.cn/archives/55e73569.html"/>
    <id>https://www.donlex.cn/archives/55e73569.html</id>
    <published>2018-09-21T06:49:45.000Z</published>
    <updated>2018-09-21T07:20:09.705Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近一段时间一直在倒腾着自己的个人博客。本来直接部署到<a href="https://github.com/" target="_blank" rel="noopener">Github</a>上就算了，没想着弄域名或者搜索引擎优化啥的。但是前几天，忽而兴起，跑到阿里云上搜了一下域名，看到一个喜欢的域名还不错，并且价格也还算亲民。一时冲动就下了单….<br><a id="more"></a></p><p>冲动是魔鬼，要不是买了个域名，或许就不会有这么多的烦心事。真的是“ No zuo , No die ”。折腾了好几天，终于弄好了<i class="fa fa-lock" style="color:green"></i><code>https</code>和引擎收录。加上了小绿锁，感觉就是不一样；虽然现在在搜索引擎上的权重还没上去，但是相信以后会好起来的。</p><p>说到搜索引擎，不得不吐槽一下国内和国外的效率。百度都提交一个星期了，才搜得到。人家谷歌第二天就把大部分文章给索引到了。还有一点最烦人的就是，<a href="https://github.com/" target="_blank" rel="noopener">Github</a> 是禁止百度爬虫的 :( 搞得我还得双线部署。幸好，最后还是依靠国内的 <a href="https://coding.net/" target="_blank" rel="noopener">Coding</a> ，才让百度爬虫爬取到我的站点，并收录了进去。</p><p>都说前人栽树，后人乘凉。感谢各位博主的博客，才让我少踩了很多坑。以后就可以安心的写博客，不用管这些烦心事了。</p><p>为了记录一下自己的艰辛填坑路，也为了让更多想搭建博客的人能够 少踩一点坑。下面将献上一些对我有帮助的博客链接，希望也能帮到正在折腾的你！！</p><ul><li><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2018/07/18/custom-domains-on-github-pages.html" target="_blank" rel="noopener">GitHub Pages 绑定个人域名，免 Cloudflare 支持 https</a> <i class="fa fa-mouse-pointer"> </i></li></ul><ul><li><p><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化 </a> <i class="fa fa-mouse-pointer"> </i></p></li><li><p><a href="https://www.93bok.com/Hexo提交百度和Google收录站点/" target="_blank" rel="noopener">Hexo提交百度和Google收录站点 </a> <i class="fa fa-mouse-pointer"> </i></p></li><li><p><a href="http://shenzekun.cn/hexo的next主题个性化配置教程.html" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站 </a> <i class="fa fa-mouse-pointer"> </i></p></li><li><p><a href="https://www.cnblogs.com/pengwenzheng/p/8407479.html" target="_blank" rel="noopener">号外号外！解决github+hexo+yilia评论插件的问题！！！ </a> <i class="fa fa-mouse-pointer"> </i></p></li></ul><p>总的来说这几篇博文，已经涵盖了<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener"> NexT </a>主题的所有配置和优化过程。至于其他主题可以自行找教程，不过还是建议选用多人用的主题，避免钻牛角尖，既浪费时间，又难受，何必呢是吧？</p><p>最后，当然是宣传一波我的站点啦。。。<br>欢迎访问分享 ，反馈意见哈！！<i class="fa fa-chrome" style="color:red"></i> <a href="https://www.donlex.cn">https://www.donlex.cn</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近一段时间一直在倒腾着自己的个人博客。本来直接部署到&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt;上就算了，没想着弄域名或者搜索引擎优化啥的。但是前几天，忽而兴起，跑到阿里云上搜了一下域名，看到一个喜欢的域名还不错，并且价格也还算亲民。一时冲动就下了单….&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://www.donlex.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="NexT" scheme="https://www.donlex.cn/categories/%E9%9A%8F%E7%AC%94/NexT/"/>
    
      <category term="hexo" scheme="https://www.donlex.cn/categories/%E9%9A%8F%E7%AC%94/NexT/hexo/"/>
    
    
      <category term="NexT" scheme="https://www.donlex.cn/tags/NexT/"/>
    
      <category term="hexo" scheme="https://www.donlex.cn/tags/hexo/"/>
    
      <category term="随笔" scheme="https://www.donlex.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>leetcode打卡-1</title>
    <link href="https://www.donlex.cn/archives/b6c00922.html"/>
    <id>https://www.donlex.cn/archives/b6c00922.html</id>
    <published>2018-09-20T07:40:00.000Z</published>
    <updated>2018-09-29T06:27:31.525Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>从今天开始，将会开启我的<a href="https://leetcode-cn.com" target="_blank" rel="noopener"> LeetCode </a>打卡之路。为了能让打卡坚持下去，就给自己设定了用博客来记录打卡过程的目标。算是留点记录吧！希望将来会感谢今天努力刷<a href="https://leetcode-cn.com" target="_blank" rel="noopener"> LeetCode </a>的自己 : )~</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。</p><p>你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。</p><p>示例:</p><blockquote><p>给定 <code>nums = [2, 7, 11, 15], target = 9</code></p></blockquote><blockquote><p>因为 <code>nums[0] + nums[1] = 2 + 7 = 9</code><br>所以返回 <code>[0, 1]</code></p></blockquote><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>采用逆向思维，用目标的值减去数组中的一个数，看结果是否还在数组里面</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>代码实现使用的是<a href="https://www.python.org/" target="_blank" rel="noopener"> python </a>语言</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        n = len(nums)</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(n):</span><br><span class="line">            b = target-nums[x]</span><br><span class="line">            <span class="keyword">if</span> b <span class="keyword">in</span> nums:</span><br><span class="line">                y = nums.index(b)</span><br><span class="line">                <span class="keyword">if</span> y!=x:</span><br><span class="line">                    <span class="keyword">return</span> x,y</span><br></pre></td></tr></table></figure><h3 id="题目难度"><a href="#题目难度" class="headerlink" title="题目难度"></a>题目难度</h3><p>难度：简单<i class="fa fa-star"> </i><i class="fa fa-star-o"> </i><i class="fa fa-star-o"> </i><i class="fa fa-star-o"> </i><i class="fa fa-star-o"> </i></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;从今天开始，将会开启我的&lt;a href=&quot;https://leetcode-cn.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; LeetCode &lt;/a&gt;打卡之路。为了能让打卡坚持下去，就给自己设定了用博客来记录打卡过程的目标。算是留点记录吧！希望将来会感谢今天努力刷&lt;a href=&quot;https://leetcode-cn.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; LeetCode &lt;/a&gt;的自己 : )~&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://www.donlex.cn/categories/python/"/>
    
      <category term="算法" scheme="https://www.donlex.cn/categories/python/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="https://www.donlex.cn/categories/python/%E7%AE%97%E6%B3%95/LeetCode/"/>
    
    
      <category term="python" scheme="https://www.donlex.cn/tags/python/"/>
    
      <category term="算法" scheme="https://www.donlex.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="https://www.donlex.cn/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Python or Java？Boss直聘告诉你该如何选择</title>
    <link href="https://www.donlex.cn/archives/e7a46e9a.html"/>
    <id>https://www.donlex.cn/archives/e7a46e9a.html</id>
    <published>2018-09-10T03:13:33.000Z</published>
    <updated>2018-09-14T04:09:53.322Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>“人生苦短，我用 Python”，Python 的经典 slogan 讲究争分夺秒，并且在 9月的TIOBE榜中拿下第 3 名宝座。<br><a id="more"></a><br><img src="https://i.loli.net/2018/09/10/5b95e60cf4111.png" alt=""></p><p>今天就试着在Boss直聘网站上爬取python和java的招聘信息，比较一下两个方向的发展钱景，为本科生的就业方向给一个小小的建议</p><h3 id="爬取"><a href="#爬取" class="headerlink" title="爬取"></a>爬取</h3><p>在招聘网站上直接以”本科生”和”java”或”python”作为筛选条件，以广州为例<br><img src="https://i.loli.net/2018/09/10/5b95e64669ff1.png" alt=""><br>爬取招聘的大体信息，具体代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line">client = pymongo.MongoClient(<span class="string">'localhost'</span>, <span class="number">27017</span>)</span><br><span class="line">zhipin = client[<span class="string">'zhipin'</span>]</span><br><span class="line">zhipin_java = zhipin[<span class="string">'zhipin_java'</span>]</span><br><span class="line">zhipin_python = zhipin[<span class="string">'zhipin_python'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">total_page = <span class="number">11</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_info</span><span class="params">(param, data_table)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    根据招聘方向(java或python..)爬取信息存进数据库</span></span><br><span class="line"><span class="string">    :param param: 招聘方向</span></span><br><span class="line"><span class="string">    :param data_table: 数据库表明</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, total_page):</span><br><span class="line">        url = <span class="string">'https://www.zhipin.com/c101280100/d_203-h_101280100/?query=&#123;0&#125;&amp;page=&#123;1&#125;'</span>.format(</span><br><span class="line">            param, i)</span><br><span class="line">        web_data = requests.get(url, headers=headers)</span><br><span class="line">        soup = BeautifulSoup(web_data.content, <span class="string">'lxml'</span>)</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.select(<span class="string">'#main &gt; div &gt; div.job-list &gt; ul &gt; li'</span>):</span><br><span class="line">            <span class="comment"># 招聘要求</span></span><br><span class="line">            job_title = item.select(<span class="string">'.job-title'</span>)[<span class="number">0</span>].text  <span class="comment"># 岗位</span></span><br><span class="line">            salary = item.select(<span class="string">'.red'</span>)[<span class="number">0</span>].text  <span class="comment"># 薪资</span></span><br><span class="line">            person_info = item.select(<span class="string">'.info-primary p'</span>)[<span class="number">0</span>].text  <span class="comment"># 应聘要求</span></span><br><span class="line">            <span class="comment"># 获取公司信息</span></span><br><span class="line">            company = item.select(<span class="string">'.info-company h3 a'</span>)[<span class="number">0</span>].text  <span class="comment"># 公司</span></span><br><span class="line">            company_info = item.select(<span class="string">'.info-company p'</span>)[<span class="number">0</span>].text  <span class="comment"># 公司信息</span></span><br><span class="line"></span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'job_title'</span>: job_title,</span><br><span class="line">                <span class="string">'salary'</span>: salary,</span><br><span class="line">                <span class="string">'person_info'</span>: person_info,</span><br><span class="line">                <span class="string">'company'</span>: company,</span><br><span class="line">                <span class="string">'company_info'</span>: company_info,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment"># 插入数据库</span></span><br><span class="line">            data_table.insert(data)</span><br><span class="line">            print(data)</span><br><span class="line">        print(<span class="string">'*'</span> * <span class="number">100</span>)</span><br><span class="line">    print(<span class="string">'\n'</span> * <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    param_list = [<span class="string">'java'</span>, <span class="string">'python'</span>]</span><br><span class="line">    table_list = [zhipin_java, zhipin_python]</span><br><span class="line">    <span class="keyword">for</span> param, table <span class="keyword">in</span> zip(param_list, table_list):</span><br><span class="line">        get_info(param, table)</span><br></pre></td></tr></table></figure></p><p>爬取的信息全部存在mongodb中。便于后面的分析处理</p><h3 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h3><p>在数据处理这里定义了几个方法，用来处理相应的内容</p><h4 id="1-初始化变量"><a href="#1-初始化变量" class="headerlink" title="1.初始化变量"></a>1.初始化变量</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line">client = pymongo.MongoClient(<span class="string">'localhost'</span>, <span class="number">27017</span>)</span><br><span class="line">zhipin = client[<span class="string">'zhipin'</span>]</span><br><span class="line">zhipin_java = zhipin[<span class="string">'zhipin_java'</span>]</span><br><span class="line">zhipin_python = zhipin[<span class="string">'zhipin_python'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> Bar,Line,Pie</span><br></pre></td></tr></table></figure><h4 id="2-获取地区分布情况"><a href="#2-获取地区分布情况" class="headerlink" title="2.获取地区分布情况"></a>2.获取地区分布情况</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_zone</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">''' 获取地区'''</span></span><br><span class="line">    zone_list = []</span><br><span class="line">    real_list = []</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> zhipin_java.find():</span><br><span class="line">        text = item[<span class="string">'person_info'</span>][<span class="number">3</span>:<span class="number">6</span>]</span><br><span class="line">        zone_list.append(text)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> zone_list:</span><br><span class="line">        j = re.sub(<span class="string">r' \d-'</span>,<span class="string">''</span>,i)</span><br><span class="line">        real_list.append(j)</span><br><span class="line">        <span class="keyword">while</span> <span class="string">''</span> <span class="keyword">in</span> real_list:</span><br><span class="line">            real_list.remove(<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">return</span> real_list</span><br><span class="line">zone = dict(Counter(get_zone()))</span><br></pre></td></tr></table></figure><h4 id="3-整理招聘数据"><a href="#3-整理招聘数据" class="headerlink" title="3.整理招聘数据"></a>3.整理招聘数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">del_key_1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''删除招聘次数为1的岗位'''</span></span><br><span class="line">    li = []</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> job_dict.keys():</span><br><span class="line">        <span class="keyword">if</span> job_dict[key] == <span class="number">1</span>:</span><br><span class="line">            li.append(key)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> li:</span><br><span class="line">        <span class="keyword">del</span> job_dict[i]</span><br><span class="line">    print(job_dict)</span><br></pre></td></tr></table></figure><h4 id="4-整理薪水数据"><a href="#4-整理薪水数据" class="headerlink" title="4.整理薪水数据"></a>4.整理薪水数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_salary</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''获取招聘的工资'''</span></span><br><span class="line">    min_list = [] <span class="comment">#起步工资</span></span><br><span class="line">    max_list = [] <span class="comment">#最高工资</span></span><br><span class="line">    job_title = [] <span class="comment">#岗位</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> zhipin_java.find():</span><br><span class="line">        job_title.append(item[<span class="string">'job_title'</span>])</span><br><span class="line">        salary = item[<span class="string">'salary'</span>]</span><br><span class="line">        min_list.append(int(salary.split(<span class="string">'-'</span>)[<span class="number">0</span>][:<span class="number">-1</span>]))</span><br><span class="line">        max_list.append(int(salary.split(<span class="string">'-'</span>)[<span class="number">1</span>][:<span class="number">-1</span>]))</span><br><span class="line">    <span class="keyword">return</span> min_list,max_list,job_title</span><br></pre></td></tr></table></figure><h3 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h3><h4 id="地区分布"><a href="#地区分布" class="headerlink" title="地区分布"></a>地区分布</h4><p>通过整理地区分布数据,利用pyecharts作图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bar = Bar(<span class="string">"java和python岗位地区分布"</span>)</span><br><span class="line">bar.add(<span class="string">"java"</span>, list(key <span class="keyword">for</span> key <span class="keyword">in</span> zone.keys()), list(value <span class="keyword">for</span> value <span class="keyword">in</span> zone.values()),mark_line=[<span class="string">'min'</span>, <span class="string">'max'</span>], is_toolbox_show = <span class="keyword">True</span>,is_more_utils=<span class="keyword">True</span>)</span><br><span class="line">bar.add(<span class="string">"python"</span>, list(key <span class="keyword">for</span> key <span class="keyword">in</span> py_zone.keys()), list(value <span class="keyword">for</span> value <span class="keyword">in</span> py_zone.values()),mark_line=[<span class="string">'min'</span>, <span class="string">'max'</span>], is_toolbox_show = <span class="keyword">True</span>,is_more_utils=<span class="keyword">True</span>)</span><br><span class="line">bar</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/09/10/5b95e66f0949f.png" alt=""></p><blockquote><p>越靠近城市中心的地区，招聘的岗位就越多，成功应聘的机会较高；番禺和天河区相差较大，其中天河区招python比java将近多8倍；番禺区java比python更加热门，受公司青睐；其他区相差不大</p></blockquote><h4 id="招聘最多的岗位"><a href="#招聘最多的岗位" class="headerlink" title="招聘最多的岗位"></a>招聘最多的岗位</h4><h5 id="python岗位："><a href="#python岗位：" class="headerlink" title="python岗位："></a>python岗位：</h5><p><img src="https://i.loli.net/2018/09/10/5b95e70daabf2.png" alt=""><br><img src="https://i.loli.net/2018/09/10/5b95e71b4caa0.png" alt=""></p><p>占比前五位分别是：</p><ol><li>python工程师</li><li>数据分析师</li><li>运维工程师</li><li>大数据开发工程师</li><li>游戏AI算法工程师</li></ol><h5 id="java岗位对比"><a href="#java岗位对比" class="headerlink" title="java岗位对比"></a>java岗位对比</h5><p><img src="https://i.loli.net/2018/09/10/5b95e6bb57638.png" alt=""><br><img src="https://i.loli.net/2018/09/10/5b95e6ea07956.png" alt=""></p><blockquote><p>高级的工程师招聘的人数较少，大部分都是在招聘初中级工程师，难道这就是传说中的“一个诸葛亮胜过三个臭皮匠 (:”</p></blockquote><h4 id="公司对比"><a href="#公司对比" class="headerlink" title="公司对比"></a>公司对比</h4><h5 id="python招聘公司"><a href="#python招聘公司" class="headerlink" title="python招聘公司"></a>python招聘公司</h5><p><img src="https://i.loli.net/2018/09/10/5b95e74571d86.png" alt=""></p><h5 id="java招聘公司"><a href="#java招聘公司" class="headerlink" title="java招聘公司"></a>java招聘公司</h5><p><img src="https://i.loli.net/2018/09/10/5b95e737d003a.png" alt=""></p><h4 id="最关心的钱途问题"><a href="#最关心的钱途问题" class="headerlink" title="最关心的钱途问题"></a>最关心的钱途问题</h4><h5 id="最高薪水"><a href="#最高薪水" class="headerlink" title="最高薪水"></a>最高薪水</h5><p><img src="https://i.loli.net/2018/09/10/5b95e774a88e8.png" alt="这里写图片描述"></p><blockquote><p>看来python不是吹的，最高薪水也大多数都比java的高;java最高薪水平均19.24K，最低3K，最高50k；python最高薪水平均21.16K,最低3k，最高60k</p></blockquote><h5 id="最低薪水"><a href="#最低薪水" class="headerlink" title="最低薪水"></a>最低薪水</h5><p><img src="https://i.loli.net/2018/09/10/5b95e7613c786.png" alt=""></p><blockquote><p>python起步薪水大多数都比java的高;java平均起步薪水11.42K，python平均起步薪水12.08K</p></blockquote><h4 id="两个岗位词云"><a href="#两个岗位词云" class="headerlink" title="两个岗位词云"></a>两个岗位词云</h4><p><img src="https://i.loli.net/2018/09/10/5b95e78687927.png" alt=""></p><p><img src="https://i.loli.net/2018/09/10/5b95e7950b49c.png" alt=""></p><p>源码：<a href="https://github.com/stormdony/python_demo" target="_blank" rel="noopener">https://github.com/stormdony/python_demo</a></p><p>CSDN博客：<a href="https://blog.csdn.net/stormdony/article/details/82586735" target="_blank" rel="noopener">https://blog.csdn.net/stormdony/article/details/82586735</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps: 原创文章，转载请与作者联系</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;“人生苦短，我用 Python”，Python 的经典 slogan 讲究争分夺秒，并且在 9月的TIOBE榜中拿下第 3 名宝座。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://www.donlex.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://www.donlex.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>hexo下yilia主题添加字数统计和阅读时长功能</title>
    <link href="https://www.donlex.cn/archives/e9dc5279.html"/>
    <id>https://www.donlex.cn/archives/e9dc5279.html</id>
    <published>2018-09-09T07:56:34.000Z</published>
    <updated>2018-09-14T04:09:53.330Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1-安装-hexo-wordcount"><a href="#1-安装-hexo-wordcount" class="headerlink" title="1.安装 hexo-wordcount"></a>1.安装 hexo-wordcount</h4><p>在博客目录下打开Git Bash Here 输入命令</p><blockquote><p>npm i –save hexo-wordcount</p></blockquote><a id="more"></a><h4 id="2-文件配置"><a href="#2-文件配置" class="headerlink" title="2.文件配置"></a>2.文件配置</h4><p>在<code>theme\yilia\layout\_partial\post</code>下创建<code>word.ejs</code>文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-top:10px;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-time"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-keyboard-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>  字数统计: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-count"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">wordcount</span>(<span class="attr">post.content</span>) %&gt;</span>字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-time"</span>&gt;</span></span><br><span class="line">      &amp;nbsp; | &amp;nbsp;</span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-hourglass-half"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>  阅读时长: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-count"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">min2read</span>(<span class="attr">post.content</span>) %&gt;</span>分<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在 <code>themes/yilia/layout/_partial/article.ejs</code>中添加<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article-inner"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">post.link</span> || <span class="attr">post.title</span>)&#123; %&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"article-header"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">title</span>', &#123;<span class="attr">class_name:</span> '<span class="attr">article-title</span>'&#125;) %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (!<span class="attr">post.noDate</span>)&#123; %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">date</span>', &#123;<span class="attr">class_name:</span> '<span class="attr">archive-article-date</span>', <span class="attr">date_format:</span> <span class="attr">null</span>&#125;) %&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 需要添加的位置 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 开始添加字数统计--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">theme.word_count</span> &amp;&amp; !<span class="attr">post.no_word_count</span>)&#123;%&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">word</span>') %&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 添加完成 --&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="3-开启功能"><a href="#3-开启功能" class="headerlink" title="3. 开启功能"></a>3. 开启功能</h4><p>在站点的<code>_config.yml</code>中添加下面代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否开启字数统计</span></span><br><span class="line"><span class="comment">#不需要使用，直接设置值为false，或注释掉</span></span><br><span class="line">word_count: <span class="keyword">True</span></span><br></pre></td></tr></table></figure></p><blockquote><p>ps：原创文章，转载请注明出处</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-安装-hexo-wordcount&quot;&gt;&lt;a href=&quot;#1-安装-hexo-wordcount&quot; class=&quot;headerlink&quot; title=&quot;1.安装 hexo-wordcount&quot;&gt;&lt;/a&gt;1.安装 hexo-wordcount&lt;/h4&gt;&lt;p&gt;在博客目录下打开Git Bash Here 输入命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;npm i –save hexo-wordcount&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="yilia" scheme="https://www.donlex.cn/categories/yilia/"/>
    
    
      <category term="hexo" scheme="https://www.donlex.cn/tags/hexo/"/>
    
      <category term="yilia" scheme="https://www.donlex.cn/tags/yilia/"/>
    
  </entry>
  
  <entry>
    <title>hexo添加和取消live2d看板动画</title>
    <link href="https://www.donlex.cn/archives/14d1161.html"/>
    <id>https://www.donlex.cn/archives/14d1161.html</id>
    <published>2018-09-09T06:31:09.000Z</published>
    <updated>2018-09-14T04:09:53.333Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="添加看板娘"><a href="#添加看板娘" class="headerlink" title="添加看板娘"></a>添加看板娘</h3><p>在博客目录下安装依赖</p><blockquote><p>npm install –save hexo-helper-live2d</p></blockquote><a id="more"></a><p>在主题下的<code>_config.yml</code>的配置信息<br>Hexo的 _config.yml 文件添加配置.</p><p>示例:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: false</span><br><span class="line">  debug: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: <span class="number">150</span></span><br><span class="line">    height: <span class="number">300</span></span><br><span class="line">  mobile:</span><br><span class="line">    show: false</span><br></pre></td></tr></table></figure></p><p>使用其他的模型，需要先安装模型,在修改配置信息中的<code>use</code></p><p>查看模型：<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">https://github.com/xiazeyu/live2d-widget-models</a></p><p>截图预览：<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">https://huaji8.top/post/live2d-plugin-2.0/</a></p><p>安装模型</p><blockquote><p>npm install 模型的包名</p></blockquote><p>具体可以查看官方文档：<a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md" target="_blank" rel="noopener">https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md</a></p><h3 id="取消看板娘"><a href="#取消看板娘" class="headerlink" title="取消看板娘"></a>取消看板娘</h3><p>直接运行下面的命令</p><blockquote><p>npm uninstall hexo-helper-live2d</p></blockquote><p>去掉站点<code>_config.yml</code>下的配置信息即可</p><blockquote><p>ps：原创文章，转载请注明出处</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;添加看板娘&quot;&gt;&lt;a href=&quot;#添加看板娘&quot; class=&quot;headerlink&quot; title=&quot;添加看板娘&quot;&gt;&lt;/a&gt;添加看板娘&lt;/h3&gt;&lt;p&gt;在博客目录下安装依赖&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;npm install –save hexo-helper-live2d&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="yilia" scheme="https://www.donlex.cn/categories/yilia/"/>
    
    
      <category term="hexo" scheme="https://www.donlex.cn/tags/hexo/"/>
    
      <category term="yilia" scheme="https://www.donlex.cn/tags/yilia/"/>
    
  </entry>
  
  <entry>
    <title>单选题：安全和便捷，你选哪一个？</title>
    <link href="https://www.donlex.cn/archives/4ec71def.html"/>
    <id>https://www.donlex.cn/archives/4ec71def.html</id>
    <published>2018-09-07T11:07:04.000Z</published>
    <updated>2018-09-14T04:09:53.337Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>前段时间的滴滴杀人案可谓是闹得满城风雨，但还是禁不住时间这把杀猪刀，人们的眼球又被“东哥”的案子给吸引过去了。虽然吃瓜看戏不错，但是也要关注一下关乎自身利益的问题。<br><a id="more"></a><br>9月4日晚，滴滴出行宣布将于2018年9月4日启动安全大整治，2018年9月8日23点至9月15日凌晨5点期间在中国大陆地区暂停提供深夜23：00-5：00时间段的网约车。</p><p>这一措施一旦实行，将会在出行和安全方面带来怎样的变化？</p><p>首先很多加班族和夜猫子可能会心慌的一批。深夜刚加完班，公交、地铁都停了，只能在路边使劲摇胳膊喊“师傅”，本来上班的压力就山大了，现在可能还要体验一把抢车风波；而蹦迪的、买醉的还有撸串的出行难度也会增加，最后可能会放弃，选择宅起来。</p><p><img src="https://i.loli.net/2018/09/07/5b925c60961b0.gif"></p><p><span style="color:green; font-size:17px;font-weight:800">1.出行成本</span><br>相对于出租,虽然滴滴价格并没有低太多,但还是便宜一些。并且网约车的接单机制与出租车或者其他的出行方式的不一样。网约车可以自己设定时间，更加迁就自己，不必浪费时间在等车上；而其他的方式则有一定的时间随机性。在时间成本上，网约车的消耗成本就低了很多。</p><p>另外在网约车的市场上，滴滴占了63%的市场份额。而停止深夜服务则会更加加剧出行选择的稀缺性。“物以稀为贵”的道理大家都明白。这样可能不仅是时间和金钱成本上的的增加了。</p><p><span style="color:green; font-size:17px;font-weight:800">2.安全 | 便捷</span><br>滴滴的几次用户遇害案件，使得乘客的警惕意识加强，同时也让社会对网约车的有了防备。很多人虽然也对先前发生的事情义愤填膺，但是经受不了站街摇手苦等，于是会想，滴滴用户量那么大，遭遇不幸的事情总不会落到我头上吧，并且滴滴还上线了“一键报警”功能…</p><p>虽然想象很美好，但是在整改的成效没有体现出来之前，安全和便捷不能同时满足。而滴滴的做法意思就很明显了。我们也只能牺牲便捷来换取安全保障的提高了。</p><p><span style="color:green;font-size:17px;font-weight:800">3.用户心理</span><br>网约车跟私人订制类似，而出租和其他的出行方式是面向大众的。这一区别使得用户的体验感不一样，一个是消费者是上帝（真实是不是这样就另说了），另一个则体现不出个人的与众不同。</p><p>最后试问一句：如果没有安全方面的问题，你愿意在路边苦等出租，还是使用滴滴这样的定制服务？？</p><p>ps：纯属个人看法，有不成熟之处请谅解！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间的滴滴杀人案可谓是闹得满城风雨，但还是禁不住时间这把杀猪刀，人们的眼球又被“东哥”的案子给吸引过去了。虽然吃瓜看戏不错，但是也要关注一下关乎自身利益的问题。&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://www.donlex.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://www.donlex.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>爬虫利器-cURL转换</title>
    <link href="https://www.donlex.cn/archives/fd7c0b75.html"/>
    <id>https://www.donlex.cn/archives/fd7c0b75.html</id>
    <published>2018-09-06T02:56:02.000Z</published>
    <updated>2018-09-27T08:21:16.302Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在爬虫的过程，经常需要为程序添加请求头，参数，cookie等信息，但是这些信息的添加都需要手动的去浏览器中找，然后一点一点的慢慢复制粘贴，这样效率就非常的低了。今天就分享一个网站，解决这些问题，让你脱离这些没有意义的劳动</p><a id="more"></a> <h3 id="网站介绍"><a href="#网站介绍" class="headerlink" title="网站介绍"></a>网站介绍</h3><p>网址: <strong><a href="https://curl.trillworks.com" target="_blank" rel="noopener">https://curl.trillworks.com</a></strong></p><p><img src="//wx1.sinaimg.cn/mw690/0060lm7Tly1fuzn5f2wc2j30wi0hpq5v.jpg" with="300" height="300"></p><p>从上图可以看到网站的教程，只要根据教程三步走，就可以快速的添加相应的请求信息</p><h3 id="示范"><a href="#示范" class="headerlink" title="示范"></a>示范</h3><p><img src="https://i.loli.net/2018/09/06/5b909ad7cdda7.gif"></p><p>将需要爬取的请求复制curl到网站中转换，然后复制到pycharm中就可以直接爬取到整个网站的源码了，接下来就可以直接在这个基础上开始逻辑工作了</p><p>生成的代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">'_octo'</span>: <span class="string">'GH1.1.681056136.1509806877'</span>,</span><br><span class="line">    <span class="string">'_gat'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'logged_in'</span>: <span class="string">'no'</span>,</span><br><span class="line">    <span class="string">'_ga'</span>: <span class="string">'GA1.2.70269906.1509806877'</span>,</span><br><span class="line">    <span class="string">'tz'</span>: <span class="string">'Asia%2FShanghai'</span>,</span><br><span class="line">    <span class="string">'has_recent_activity'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'_gh_sess'</span>: <span class="string">'cGpmdExmZUZpckZ0R1pSQlFxZlpsS2ZvT3NZbUU0YW1qTVloSzdFeWNxeWdNaGxsNzVveTJ3Vndrc2ZaN3ZoRDNYMm10TW9OdUdGVHhwbVRmMEU3ZWVwTUx4dUpZTUgrbHdKZkV0RnpzN3hodG12TGdLbHpSemVaQ0ZMM201MGdxMlkxdk5JNUZ6em1SWGp5ZEJUYTNQMjRFcCtqUDZaWVVFNXl3VDJRRUU4MFpqYkpvekY1VmZpY2t1R01ZcGRPQlZBUEJUOTJaWnNESjVnMnlkcncyWWhCVDl1OE5aVDhpR2Z4Z1NYVkFVNk5ReDRtTVphOXFXQWJNSVZYcnEyVktLTERLMHBTYjNwa2tUQUJaaWREQ0N4NzJYTG9sM1dpUktPaWFETFVpWGZlWFNvb2ZxazU1OUxMazVjZ3VNNTJteEdENzJPQlFKeDV3YXZCbmdHSGdGVmx5OVNjU2VaZXh3eEVwSlptczZXV3lQZXgrOGEyVGFwcUpPcFhIZTRWaDIwZExMRWhDRE8yMUdJT2xmS1grQ3I3bEYySGJvWFhNTFR3VmNpRnlLTT0tLXlRMmJZanl4Z0tUU0c0N1ZrRHpqbkE9PQ%3D%3D--1899440138004359a97b156d0ac8941135684ab5'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8'</span>,</span><br><span class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'https://ghbtns.com/github-btn.html?user=NickCarneiro&amp;repo=curlconverter&amp;type=watch&amp;count=true&amp;size=large'</span>,</span><br><span class="line">    <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">    <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">'https://github.com/NickCarneiro/curlconverter/'</span>, headers=headers, cookies=cookies)</span><br></pre></td></tr></table></figure></p><p>可以看到生成的代码非常的规整，是不是很方便~~</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在爬虫的过程，经常需要为程序添加请求头，参数，cookie等信息，但是这些信息的添加都需要手动的去浏览器中找，然后一点一点的慢慢复制粘贴，这样效率就非常的低了。今天就分享一个网站，解决这些问题，让你脱离这些没有意义的劳动&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://www.donlex.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://www.donlex.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.donlex.cn/archives/4a17b156.html"/>
    <id>https://www.donlex.cn/archives/4a17b156.html</id>
    <published>2018-09-05T02:26:45.363Z</published>
    <updated>2018-09-27T04:02:16.192Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <strong>DonLex’s blog</strong>. This blog has just been established, so here is few pages, it will be improved gradually.<br>If you have any problems, you can send E-mail to  <a href="mailto:donlex@qq.com" target="_blank" rel="noopener">donlex@qq.com</a></p><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;strong&gt;DonLex’s blog&lt;/strong&gt;. This blog has just been established, so here is few pages, it will be improved gradually.&lt;br&gt;If you have any problems, you can send E-mail to  &lt;a href=&quot;mailto:donlex@qq.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;donlex@qq.com&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
